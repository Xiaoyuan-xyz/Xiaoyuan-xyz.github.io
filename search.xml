<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>代数拓扑学</title>
      <link href="/2020/03/25/%E4%BB%A3%E6%95%B0%E6%8B%93%E6%89%91%E5%AD%A6/"/>
      <url>/2020/03/25/%E4%BB%A3%E6%95%B0%E6%8B%93%E6%89%91%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="拓扑空间"><a href="#拓扑空间" class="headerlink" title="拓扑空间"></a>拓扑空间</h1><h2 id="拓扑空间与同胚"><a href="#拓扑空间与同胚" class="headerlink" title="拓扑空间与同胚"></a>拓扑空间与同胚</h2><p>设$X$是一非空集合,$\mathscr{T}$是$X$d的一个子集族,若满足</p><ul><li>$X,\varnothing\in\mathscr{T}$</li><li>若$A,B\in\mathscr{T}$,则$A\cap B\in\mathscr{T}$</li><li>若$\mathscr{T_1}\subset\mathscr{T}$,则$\bigcup_{A\in\mathscr{T}}A\in\mathscr{T}$</li></ul><p>则称$\mathscr{T}$是$X$的一个<strong>拓扑</strong>,$\mathscr{T}$中的元素称为开集.</p><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,若$Y$中每一个开集$U$的原像$f^{-1}(U)$是$X$的一个开集,则称$f$<strong>连续</strong>.</p><p><strong>假定下述映射都是连续的</strong>.</p><p>设$X$和$Y$是两个拓扑空间,如果存在映射$f:X\rightarrow Y$和$g:Y\rightarrow X$,有$f\circ g=I_Y$,$g\circ f=I_X$,则称$X,Y$<strong>同胚</strong>.</p><p>拓扑空间的某种性质$P$,如果在同胚意义下保持不变,则称$P$为<strong>拓扑性质</strong>.</p><h2 id="同伦与同伦型"><a href="#同伦与同伦型" class="headerlink" title="同伦与同伦型"></a>同伦与同伦型</h2><p>设映射$f,g:X\rightarrow Y$如果$F:X\times I\rightarrow Y$使得对$\forall x\in X$,$F(x,0)=f(x),F(x,1)=g(x)$,则称$f,g$<strong>同伦</strong>,$F$称为一个<strong>伦移</strong>,记作$f\overset {F}{\simeq}g$和$f_t:X\rightarrow Y,t\in I$.</p><blockquote><p>记$X=\lbrace x\in \mathbb{R}^2|1\le x^2&lt;2 \rbrace,f:X\rightarrow X,f(x)=\dfrac{x}{||x||}\in S^1$,则$f\simeq I_X$,因为有$F(x,t)=\dfrac{x}{t+(1-t)||x||}$.</p></blockquote><p>对于拓扑空间$X,Y$,记$Y^X=\mathrm{map}(X,Y)$代表$X$到$Y$的全部连续映射.赋予<strong>紧开拓扑</strong>$T=\lbrace X$中所有紧致子集$\rbrace$,$F=\lbrace Y$中所有开集$\rbrace$,$\forall k\in T,U\in F$,令$N(K,U)=\lbrace f:X\rightarrow Y|f(K)\subset U\rbrace\subset Y^X$,$\mathscr{B}=\lbrace N(K,U)|K\in T,U\in F\rbrace$构成一个基,生成$Y^X$的一个拓扑.称为<strong>映射空间</strong>.</p><p>在$X$到$Y$的所有映射构成的集合$Y^X$中,同伦是一种等价关系.</p><p>商集称为同伦类集,$[X\quad Y]=Y^X/\simeq=\lbrace[f]|f:X\rightarrow Y\rightarrow$,其中$[f]$是$f$所在的同伦等价类.</p><blockquote><p>设$X$为拓扑空间,$S^n$为$n$维球面.若有映射$f,g:X\rightarrow S^n$,满足$\forall x\in X$,$f(x)\neq-g(x)$,则$f,g$同伦.$\forall x\in X,(1-t)f(x)+tg(x)\neq0,t\in I$.令$F_t(x)=\dfrac{(1-t)f(x)+tg(x)}{||(1-t)f(x)+tg(x)||}$.<br>设$X$为拓扑空间,$S^n$为$n$维球面.若映射$f,g:X\rightarrow S^n$不满,则其同伦于常值映射.设$-a$不在像集之中,则$\forall x\in X,f(x)\neq -a$,考虑$\forall x\in X,C_{X}(x)=a$,其满足上例条件.</p></blockquote><p>设$A\subset X$,则$(X,A)$为一个<strong>空间偶</strong>.若$(Y,B)$为另一个空间偶,$f:X\rightarrow Y,f(A)\subset B$,称$f$为<strong>空间偶间的映射</strong>,记作$f:(X,A)\rightarrow(Y,B)$.</p><p>$f,g:(X,A)\rightarrow(Y,B)$,若有$F(x,0)=f(x),F(x,1)=g(x)$,且$\forall a\in A,t\in I,F(a,t)\in B$,称为<strong>空间偶的同伦</strong>等价,记作$f\simeq g,(X,A)\rightarrow(Y,B)$.</p><p>若$A=\lbrace a\rbrace$,$B=\lbrace b\rbrace$(均为单点集,伦移保持两点不变),称$X,Y$为<strong>带基点的空间</strong>.</p><p>设$X$和$Y$是两个拓扑空间,如果存在映射$f:X\rightarrow Y$和$g:Y\rightarrow X$,有$f\circ g\simeq I_Y$,$g\circ f\simeq I_X$,则称$X,Y$<strong>同伦</strong>,记为$X\simeq Y$或$f:X\xrightarrow{\simeq}Y$</p><blockquote><p>$\mathbb{R}-\lbrace 0 \rbrace \simeq S^1$.因为有$f(r,\theta)=(1,\theta)$,$F_t(r,\theta)=((1-t)r+t,\theta)$.</p></blockquote><p>设$A$为$X$的子空间,若存在$r:X\rightarrow A$,使得$r\circ i=1$,称$A$是$X$的<strong>收缩核</strong>.进一步,若$i\circ r\simeq 1$,称$A$为$X$的<strong>形变收缩核</strong>.</p><p>若$X$同伦与单点空间$\lbrace x_0\rbrace$,称$X$为<strong>可缩空间</strong>.</p><blockquote><p>二维圆盘$D^2$是一个可缩空间.</p></blockquote><h2 id="一些拓扑空间"><a href="#一些拓扑空间" class="headerlink" title="一些拓扑空间"></a>一些拓扑空间</h2><p>在$\mathbb{R}^{n+1}-\lbrace  0 \rbrace $中,定义等价关系$x\sim y\Leftrightarrow y=kx$,称为$n$<strong>维实射影空间</strong>$\mathbb{RP}^n$.</p><p>在$S^n$中,将对径点$x$和$-x$粘合,得到$\mathbb{RP}^n$.</p><p>设$X$是一个拓扑空间,将$X\times I$的$X\times \lbrace  1 \rbrace $粘合为一点,称为$X$的<strong>锥</strong>,记作$CX$.$CX$是可缩空间.$X\times \lbrace  1 \rbrace $和$X\times \lbrace  0 \rbrace $都粘合为一点可以得到<strong>双锥</strong>$\Sigma X$.</p><p>设$A$是$X$的子空间,$f:A\rightarrow Y$,在$X\sqcup Y$中定义等价关系$x\sim f(x)\in Y$,商空间称为$X$<strong>沿$f:A\rightarrow Y$粘合在$Y$上</strong>.</p><p>设$f:X\rightarrow Y$,考虑$f:X\times \lbrace  0\rbrace  \rightarrow Y,f(x,0)=f(x)$,将$CX$沿$f$粘合在$Y$上,得到的空间记作$Y\cup_fCX$,称为$f:X\rightarrow Y$的<strong>映射锥</strong>.</p><p>$f:S^{n-1}\rightarrow Y$的映射锥$Y\cup_fCS{n-1}=Y\cup_fD^n$,称为在$Y$上<strong>粘合$n$维胞腔</strong>.</p><p>设$f:X\rightarrow Y$,考虑$f:X\times \lbrace  0\rbrace  \rightarrow Y,f(x,0)=f(x)$,将$X\times I$沿$f$粘合在$Y$上,得到的空间记作$Y\cup_fX\times I$,称为$f:X\rightarrow Y$的<strong>映射柱</strong>,$Y\cup_fX\times I\simeq Y$.</p><p>$S^1\lor S^1$上粘合$I\times I\cong D^2$,得到$S^1\lor S^1\cup_{aba^{-1}b^{-1}}D^2\cong T$</p><p>把$D^2=\lbrace  x^2+y^2=4 \rbrace $的边缘在$S^1$上粘两圈,得到的是$S^1\cup_2D^2\cong\mathbb{RP}^2$,记作Moore空间.</p><h1 id="基本群"><a href="#基本群" class="headerlink" title="基本群"></a>基本群</h1><blockquote><p>$\dfrac{x}{x^2+y^2}$和$\dfrac{y}{x^2+y^2}$在$R^2-\lbrace  0\rbrace $连续,$\int_\gamma-\dfrac{y}{x^2+y^2}\mathrm{d}x+\dfrac{x}{x^2+y^2}\mathrm{d}y$与路径无关,只要保证从$(x_1,y_1)$到$(x_2,y_2)$的两条路径包围的区域不包含$0$.<br>考虑$\gamma:\left\lbrace  \begin{array}{c}x=\cos\theta \\ y=\sin\theta \end{array}\right.0\le\theta&lt;2\pi$.$\oint_\gamma-\dfrac{y}{x^2+y^2}\mathrm{d}x+\dfrac{x}{x^2+y^2}\mathrm{d}y=2\pi$.<br>对$R^2-\lbrace  0\rbrace $中任何一条闭曲线$\gamma$,$\oint_\gamma-\dfrac{y}{x^2+y^2}\mathrm{d}x+\dfrac{x}{x^2+y^2}\mathrm{d}y=2k\pi$,$k\in\mathbb{Z}$表示逆时针绕过$0$的周数.$k$是闭曲线的一个拓扑性质.$\mathbb{Z}$是$R^2-\lbrace  0\rbrace $的基本群.</p></blockquote><h2 id="道路同伦与基本群"><a href="#道路同伦与基本群" class="headerlink" title="道路同伦与基本群"></a>道路同伦与基本群</h2><p>映射$\sigma:I\rightarrow X$,在$\sigma(0)=x_0$,$\sigma(1)=x_1$,称为$X$中从$x_0$到$x_1$的一条<strong>道路</strong>.</p><p>对于$X$中两条从$x_0$到$x_1$的道路$\sigma,\tau$,若存在伦移$F:I\times I\rightarrow X$,有$F(s,0)=\sigma(s),F(s,1)=\tau(s),F(0,t)=x_0,F(1,t)=x_1$,则称$\sigma,\tau$<strong>道路同伦</strong>,$F$为从$\sigma$到$\tau$的<strong>道路伦移</strong>,记作$\sigma\overset {F}{\simeq}_p\tau$或$\sigma\simeq\tau\mathrm{rel}\lbrace 0,1\rbrace $.</p><blockquote><p>$\mathbb{R}^n$中任两条从$x_0$到$x_1$的道路$\sigma,\tau$都道路同伦.可以取$F(s,t)=(1-t)\sigma(s)+t\tau(s)$.</p></blockquote><p>$X$中所有从$x_0$到$x_1$的道路构成的集合中,道路同伦是一种等价关系.</p><p>$PX=\lbrace  \sigma:I\rightarrow X|\sigma(0)=x_0\rbrace $,有映射$\pi:PX\rightarrow X,\pi(\sigma)=\sigma(1)$.给定$x_1$,$\pi^{-1}(x_1)=\lbrace  \sigma:I\rightarrow X|\sigma(0)=x_0,\pi(\sigma)=\sigma(1)=x_1\rbrace $,有$\pi^{-1}(x_1)/\simeq$为道路同伦等价类集合.特别地,取$x_1=x_0$,此时记$\pi^{-1}(x_0)$为$\Omega X$,定义紧开拓扑后为回路空间.</p><p>设$X$中两条道路$\sigma,\tau$,若$\sigma(1)=\tau(0)$,定义$\sigma\circ\tau:I\rightarrow X=\begin{cases}\sigma(2s), &amp; 0\le s \le \dfrac12 \\ \tau(2s-1), &amp; \dfrac12\le s\le 1\end{cases}$,称为<strong>道路的乘积</strong>.</p><p>设$X$中道路$\sigma\simeq_p\sigma’,\tau\simeq_p\tau’$,若$\sigma(1)=\tau(0)$,则$\sigma\circ\tau\simeq_p\sigma’\circ\tau’$</p><p>设$X$中道路$\sigma,\tau,\omega$,若$\sigma(1)=\tau(0),\tau(1)=\omega(0)$,则$(\sigma\circ\tau)\circ\omega\simeq_p\sigma\circ(\tau\circ\omega)$</p><p>以$x_0$为起点,终点的回路,关于道路同伦有一个等价类.等价类集$\Omega X/\simeq$记作$\pi_1(X,x_0)$,其中代表元$[\sigma]=\lbrace \tau:I\rightarrow X|\sigma\simeq_p\tau\rbrace$.定义乘法$[\sigma][\tau]=[\sigma\tau]$,做成一群,称为$X$的<strong>基本群</strong>.</p><blockquote><p>$\pi_1(\mathbb{R}^n,0)=\lbrace e\rbrace=0$.</p></blockquote><h2 id="基本群的性质"><a href="#基本群的性质" class="headerlink" title="基本群的性质"></a>基本群的性质</h2><p>考虑映射$f:(X,x_0)\rightarrow(Y,y_0)$,$X$中回路$\sigma:I\rightarrow X,\sigma(0)=\sigma(1)=x_0$.</p><ul><li>$f\sigma:I\rightarrow Y,(f\sigma)(0)=(f\sigma)(1)=y_0$.设$X$中道路$\sigma\simeq_p\tau$,则$f\sigma\simeq_p f\tau$.</li><li>对$[\sigma]\in\pi_1(X,x_0)$,$\sigma,\tau\in[\sigma]$,则$[f\sigma]=[f\tau]$.</li></ul><p>设$f:(X,x_0)\rightarrow(Y,y_0)$,定义映射$\hat{f}:\pi_1(X,x_0)\rightarrow\pi_1(Y,y_0),\hat{f}([\sigma])=[f\sigma]\in\pi_1(Y,y_0)$,其是群同态,且有:</p><ul><li>$f:(X,x_0)\rightarrow(Y,y_0)$,$g:(Y,y_0)\rightarrow(Z,z_0)$,则$\hat{(g\circ f)}=\hat{g}\circ\hat{f}$.</li><li>对$1:(X,x_0)\rightarrow(X,x_0)$,$\hat{1}=1:\pi_1(X,x_0)\rightarrow\pi_1(X,x_0)$.</li></ul><p>从而$\pi_1(X,x_0)$是同胚不变量.若$f:(X,x_0)\xrightarrow{\cong}(Y,y_0)$是同胚,则$\hat{f}:\pi_1(X,x_0)\xrightarrow{\cong}\pi_1(Y,y_0)$是同构.</p><p>作为空间偶,若$f\simeq g:(X,x_0)\rightarrow(Y,y_0)$,则$\hat{f}=\hat{g}:\pi_1(X,x_0)\rightarrow\pi_1(Y,y_0)$.$f$到$g$的伦移$F:X\times I\rightarrow Y$满足$\forall t\in I$,$F(x_0,t)=y_0$.</p><p>从而,基本群也是同伦不变量.若$f:(X,x_0)\xrightarrow{\simeq}(Y,y_0)$是同伦,则$\hat{f}:\pi_1(X,x_0)\xrightarrow{\cong}\pi_1(Y,y_0)$是同构.</p><hr><p>若$f\simeq g:X\rightarrow Y$,$H:X\times I\rightarrow Y$是从$F$到$g$的伦移,$f(x_0)=y_0,g(x_0)=y_0’$.有$\gamma:I\rightarrow Y,\gamma(t)=H(x_0,t)$是$Y$中从$y_0$到$y_0’$的道路.</p><p>则$\hat{f}=\hat{g}:\pi_1(X,x_0)\rightarrow\pi_1(Y,y_0)$.$f$到$g$的伦移$F:X\times I\rightarrow Y$满足$\forall t\in I$,$F(x_0,t)=y_0$.$\hat{f}:\pi_1(X,x_0)\rightarrow\pi(Y,y_0)$,$\hat{g}:\pi_1(X,x_0)\rightarrow\pi(Y,y_0’)$.</p><p>对于$Y$中的从$y_0$到$y_0’$的一条道路$\gamma:I\rightarrow Y,\gamma(0)=y_0,\gamma(1)=y_0’$.定义映射$\hat{\gamma}:\pi(Y,y_0)\rightarrow\pi(Y,y_0’)$,对$[\sigma]\in\pi(Y,y_0)$,$\hat{\gamma}([\sigma])=[\gamma^{-1}\sigma\gamma]$.</p><p>对于$Y$中从$y_0$到$y_0’$的道路$\gamma$,$\hat{\gamma}:\pi(Y,y_0)\rightarrow\pi(Y,y_0’)$是群同构.</p><p>从而当$Y$道路连通时,$\pi_1(Y,y_0)$与$y_0$无关,故也可以记作$\pi_1(Y)$.</p><h2 id="圆周的基本群"><a href="#圆周的基本群" class="headerlink" title="圆周的基本群"></a>圆周的基本群</h2><p>记$S^1=\lbrace e^{2\pi it}\in\mathbb{C}|t\in[-\dfrac12,\dfrac12]\rbrace$,取$x_0=e^0$.有$\pi_1(S^1,x_0)\cong\mathbb{Z}$,生成元$\sigma_1:I\rightarrow S^1,\sigma_1(s)=e^{2\pi is}$.</p><p>构造映射$\varPhi:\mathbb{R}\rightarrow S^1$,对$\forall x\in\mathbb{R},\varPhi(x)=e^{2\pi ix}$.有:</p><ul><li>对$\forall x\in S^1,x=e^{2\pi it},t\in[-\dfrac12,\dfrac12]$.$\varPhi^{-1}(x)=\lbrace t+n|n\in\mathbb{Z}\rbrace\cong\mathbb{Z}$.</li><li>对$\forall x\in S^1$,有邻域$U=\lbrace e^{2\pi it}|t\in(a,b)\rbrace$,$\varPhi^{-1}(U)=\bigcup\limits_{n\in\mathbb{Z}}(a+n,b+n)\cong U\times\mathbb{Z}$.</li></ul><p>设$F$是一个离散的点集,$P:E\rightarrow B$为映射.如果对$\forall b\in B$,$P^{-1}(b)\cong F$且存在邻域$U$使得$P^{-1}(U)\cong U\times F$,称$P$为<strong>覆叠映射</strong>.</p><p>(道路提升引理)对$S^1$中任何的道路$\sigma:I\times S^1$,起点在$\sigma(0)=x_0$,都存在唯一的$\mathbb{R}$上的道路$\sigma’:I\rightarrow\mathbb{R}$,使得$\varPhi\sigma’=\sigma$且$\sigma’(0)=0$.称$\sigma’$为$\sigma$的<strong>道路提升</strong>.</p><p>(伦移提升引理)设$\sigma,\tau$是$S^1$上同伦两条道路,$\sigma(0)=\tau(0)=x_0$,伦移$F:I\times T\rightarrow S^1$是从$\sigma$到$\tau$的道路伦移,则存在$\mathbb{R}$中唯一的同伦$F’:I\times I\rightarrow\mathbb{R}$使得$\varPhi F’=F$,$F’(0,0)=0$.</p><p>构造映射$\kappa:\pi_1(S^1,x_0)\rightarrow \mathbb{Z}$,对$\forall[\sigma],\forall\sigma\in[\sigma]$,取$\sigma$的提升$\sigma’:I\rightarrow\mathbb{R},\sigma’(0)=0$,$\sigma(1)=\varPhi^{-1}(x_0)=\mathbb{Z}$.定义$\kappa([\sigma])=\sigma’(1)$.则$\kappa$为同构.</p><blockquote><p>对$n&gt;1$,$\pi_1(S^n,x_0)=0$,由此$\mathbb{R}^2$不与$\mathbb{R}^{n+1}$不同胚.<br>$D^2$的边界为$S^1$,内射$i:S^1\rightarrow D^2$,不存在$r:D^2\rightarrow S^1$使得$r\circ i=1$,即$S^1$不是$D^2$的收缩核.</p></blockquote><p>(Brouwer不动点定理)任何从$D^2$到自身的映射$f:D^2\rightarrow D^2$一定有不动点.</p><h2 id="Seifert-van-Kampen定理"><a href="#Seifert-van-Kampen定理" class="headerlink" title="Seifert-van Kampen定理"></a>Seifert-van Kampen定理</h2><p>设$\lbrace G_\alpha\rbrace_{\alpha\in A}$是一族群,定义$\lbrace G_\alpha\rbrace_{\alpha\in A}$的<strong>自由积</strong>是群$G$.</p><ul><li>单位元$e=e_\alpha$,$e_\alpha$是$G_\alpha$的单位元;</li><li>元素是任何有限长的<strong>字</strong>$g_1g_2\cdots g_m$,其中$g_i$属于某个$G_\alpha$;</li><li>乘法视为字的堆砌,即$(g_1g_2\cdots g_m)(h_1h_2\cdots h_n)=g_1g_2\cdots g_mh_1h_2\cdots h_n$;</li><li>关系,若$g_m,h_1$在同一个群时,若$g_mh_1=k$,$g_1g_2\cdots g_{m-1}kh_2\cdots h_n$.</li><li>逆元,$(g_1g_2\cdots g_m)^{-1}=g_m^{-1}\cdots g_2^{-1}g_1^{-1}$.</li></ul><p>$\mathbb{Z}\lbrace a\rbrace=\lbrace a^n|n\in\mathbb{Z}\rbrace$,$\mathbb{Z}\lbrace b\rbrace=\lbrace b^n|n\in\mathbb{Z}\rbrace$.则$\mathbb{Z}\lbrace a\rbrace$和$\mathbb{Z}\lbrace b\rbrace$的自由积中的元为$a^{m_1}b^{n_1}a^{m_2}b^{n_2}\cdots a^{m_k}b^{n_k},m_i,n_i\in\mathbb{Z}$.称为$a,b$生成的<strong>自由群</strong>,记作$F\lbrace a,b\rbrace$.</p><p>令$[a,b]=aba^{-1}b^{-1}$称为$a,b$的<strong>交换子</strong>,$&lt;[a,b]&gt;$表示$F\lbrace a,b\rbrace$中$[a,b]$生成的正规子群,其中的元是满足$\sum\limits_{i=1}^{k}m_i=0,\sum\limits_{i=1}^{k}n_i=0$的$a^{m_1}b^{n_1}a^{m_2}b^{n_2}\cdots a^{m_k}b^{n_k}$.则$F\lbrace a,b\rbrace/&lt;[a,b]&gt;=\mathbb{Z}\lbrace a\rbrace\oplus\mathbb{Z}\lbrace b\rbrace$.</p><p>设$S$非空,则由$S$生成的自由群$F\lbrace S\rbrace$:</p><ul><li>单位元$e=\alpha^0$;</li><li>元素$\alpha_1^{m_1}\alpha_2^{m_2}\cdots\alpha_k^{m_k},m_k\in\mathbb{Z},\alpha_i\in S$</li></ul><p>设$G$是一个群,则任何集合的映射$f:S\rightarrow G$都可以扩充成群同态$\tilde{f}:F\lbrace S\rbrace\rightarrow G$.</p><p>任何群都同构于一个自由群的商群,因为取$f:G\rightarrow G,f(a)=a$,$\tilde{f}:F\lbrace G\rbrace\rightarrow G$,$G\cong F\lbrace G\rbrace/\mathrm{Ker}\tilde{f}$.</p><p>(Seifert-van Kampen定理)设$U,V$是$X$的两个开集,$U\cup V=X$,$x_0\in U\cap V$,$U,V,U\cap V$道路连通,有$i_1:\pi_1(U\cap V,x_0)\rightarrow(U,x_0),i_2:\pi_1(U\cap V,x_0)\rightarrow(V,x_0)$.令$N=&lt;i_1^{-1}([\sigma])i_2([\sigma])|[\sigma]\in\pi_1(U\cap V,x_0)&gt;$为$\pi_1(U,x_0)$和$\pi_1(V,x_0)$自由积中所有的$i_1^{-1}([\sigma])i_2([\sigma])$生成的正规子群.则$\pi_1(X,x_0)\cong\pi_1(U,x_0)*\pi_1(V,x_0)/N$.</p><h2 id="基本群的计算"><a href="#基本群的计算" class="headerlink" title="基本群的计算"></a>基本群的计算</h2><p>若$\pi_1(U\cap V,x_0)=0$,则$\pi_1(X,x_0)=\pi_1(U,x_0)*\pi_1(V,x_0)$.</p><blockquote><p>$S^1\lor S^1$,即两个圆周的一点和,基本群为$\pi_1(S^1\lor S^1,x_0)\cong\mathbb{Z}\lbrace a\rbrace*\mathbb{Z}\lbrace b\rbrace=F\lbrace a,b\rbrace$.<br>$I$是一个下标集,对$\forall\alpha\in I$,$S_\alpha^1$是一个圆,令$\bigvee\limits_{\alpha\in I}S_\alpha^1$为若干个圆的一点和,则$\pi_1(\bigvee\limits_{\alpha\in I}S_\alpha^1,x_0)=F\lbrace I\rbrace$.</p></blockquote><p>在$X$上粘接一个$n+1$维胞腔,当$n&gt;1$时,$\pi_1(X\cup_fe^{n+1},x_0)\cong\pi_1(X,x_0)$.</p><!-- 34 --><p>$n=1$时,记$f:(S^1,y_0)\rightarrow(X,x_0)$,唯一对应$\sigma:I\xrightarrow{\pi_1}S^1\xrightarrow{f}X,\pi_1(s)=e^{2\pi is}$,$[\sigma]\in\pi_1(X,x_0)$.$X\cup_fe^2$记为$X\cup\sigma e^2$,$\pi_1(X\cup_\sigma e^2,x_0)\cong\pi_1(X,x_0)/&lt;[\sigma]&gt;$.$&lt;[\sigma]&gt;$为$[\sigma]$生成的正规子群.</p><p>从而,对任何有限生成群$G$,存在拓扑空间$(X,x_0)$,$\pi_1(X,x_0)\cong G$.</p><blockquote><p>环面$T$可视为$(S_a^1\vee S_b^1)\cup_\sigma e^2$,$\sigma:I\rightarrow S^1\rightarrow S_a^1\vee S_b^1$,$\sigma$代表$F\lbrace a,b\rbrace$中的$aba^{-1}b^{-1}$.故$\pi_1((S_a^1\vee S_b^1)\cup_\sigma e^2,x_0)=F\lbrace a,b\rbrace/&lt;aba^{-1}b^{-1}&gt;=\mathbb{Z}\oplus\mathbb{Z}$.</p></blockquote><p>积的基本群同构于基本群的积.即$pi_1(X\times Y,(x_0,y_0))\cong\pi_1(X,x_0)\times\pi_1(Y,y_0)$.</p><blockquote><p>从而,$T=S^1\times S^1,\pi_1(S^1\times S^1,(x_0,y_0))\cong\mathbb{Z}\times\mathbb{Z}$.</p></blockquote><blockquote><p>$n$维实射影空间$\mathbb{RP}^n$定义为$n$维球面$S^n$的对顶点粘合,即$\mathbb{RP}^n\cong S^n/\sim$.也相当于将上半球面$S^n_+$的腰圆$S^{n-1}$的对径点粘合,从而相当于$n-1$维实射影空间上粘接$n$维胞腔,即$\mathbb{RP}^{n-1}\cup_fe^{n}$.<br>因此,当$n&gt;2$时,$\mathbb{RP}^n\cong\mathbb{RP}^{n-1}$.<br>$\mathbb{RP}^2\cong\mathbb{RP}^1\cup_f e^2\cong S^1\cup_f e^2$,$f:S^1\rightarrow S^1/\sim$,$\sigma:I\rightarrow S^1\rightarrow S^1/\sim$,$\sigma$代表$\mathbb{Z}$中的$2$.从而$\pi_1(\mathbb{RP}^2,x_0)\cong\mathbb{Z}/2$</p></blockquote><blockquote><p>$SO(2)\cong S^1$,从而$\pi_1(SO(2),E)\cong\mathbb{Z}$.<br>$SO(3)$中的元素可视为绕轴$\alpha$的旋转$t\pi,t\in[-1,1]$.从而$SO(3)\cong S^2\times[-1,1]/\sim$,等价关系包括:</p><ul><li>$(\alpha,0)=E$,即绕轴不旋转为不动;</li><li>$(\alpha,t)=(-\alpha,-t)$</li><li>$(\alpha,1)=(\alpha,-1)$,即旋转$-\pi$相当于旋转$\pi$;</li></ul><p>第一条等价关系相当于将$S^2\times\lbrace0\rbrace$粘合,成为双球锥.相当于正球锥$S^2\times[0,1]/S^2\times\lbrace0\rbrace$和负球锥$S^2\times[-1,0]/S^2\times\lbrace0\rbrace$的一点粘合.而$S^2\times[0,1]/S^2\times\lbrace0\rbrace\cong D^3$.从而相当于两个球心粘合的球.<br>第二条等价关系相当于把所有负球粘到正球上去.<br>可以得到$(\alpha,1)=(-\alpha,1)$,即把球的边界(表面)上的对径点粘合,从而得到$\mathbb{RP}^3$<br>$n&gt;3$时,$\pi_1(SO(n),x_0)\cong\pi_1(SO(n-1),x_0)$.</p></blockquote><!-- 35 9:23 -->]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>复变函数</title>
      <link href="/2020/03/25/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2020/03/25/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<style>    /* "神来一笔"的注释 */    .wow{        color:red;        font-style:italic;    }    /* 解题思路 */    .th,    .df{        color:brown;    }    .wow::before,    .th::before,    .df::before{        content:'('    }    .wow::after,    .th::after,    .df::after{        content:')'    }</style><h1 id="复数与复变函数"><a href="#复数与复变函数" class="headerlink" title="复数与复变函数"></a>复数与复变函数</h1><h2 id="复数的定义"><a href="#复数的定义" class="headerlink" title="复数的定义"></a>复数的定义</h2><p><strong>域</strong>是在集合$F$上定义的代数结构,在其上定义了加法和乘法,如果:</p><ul><li>$F$上加法构成交换群；</li><li>$F-\lbrace0\rbrace$上乘法构成交换群;</li><li>$F$中加法和乘法满足分配律,即$a(b+c)=ab+ac,\forall a,b,c\in F$.</li></ul><p>在$\mathbb{R}^2$中,定义</p><ul><li>$(a,b)+(c,d)=(a+c,b+d)$;</li><li>$(a,b)(c,d)=(ac-bd,ad+bc)$</li></ul><p>可以得到一个域,称为<strong>复数域</strong>,记作$\mathbb{C}$.</p><p>$\lbrace (a,0)|a\in\mathbb{R}\rbrace$作为$\mathbb{C}$的子域与$\mathbb{R}$同构.将$(0,1)$记为$i$,$(a,b)$记为$a+bi$.</p><ul><li>$(a+bi)+(c+di)=(a+c)+(b+d)i$</li><li>$(a+bi)-(c+di)=(a-c)+(b-d)i$</li><li>$(a+bi)(c+di)=(ac-bd)+(ad+bc)i$</li><li>$\dfrac{a+bi}{c+di}=\dfrac{ac+bd}{c^2+d^2}+\dfrac{bc-ad}{c^2+d^2}i$</li></ul><p>复数域不是有序域.</p><p>设$z=a+bi$</p><ul><li>$\bar{z}=a-bi$</li><li>$|z|=\sqrt{a^2+b^2}=\sqrt{z\bar{z}}$</li><li>$\mathrm{Re}z=a=\dfrac12(z+\bar{Z})$</li><li>$\mathrm{Im}z=b=\dfrac12(z-\bar{Z})$</li></ul><p>设$z,w$是复数</p><ul><li>$\overline{z\pm w}=\bar{z}\pm\bar{w}$</li><li>$\overline{zw}=\bar{z}\bar{w}$</li><li>$\overline{\dfrac{z}{w}}=\dfrac{\bar{z}}{\bar{w}}$</li><li>$|z|=|\bar{z}|$</li><li>$|zw|=|z||w|$</li><li>$|\dfrac{z}{w}|=\dfrac{|z|}{|w|}$</li><li>$|z\pm w|^2=|z|^2\pm2\mathrm{Re}(z\bar{w})+|w|^2$</li><li>$|z+w|\le|z|+|w|$</li><li>$|z-w|\ge||z|-|w||$</li></ul><h2 id="复数的几何表示"><a href="#复数的几何表示" class="headerlink" title="复数的几何表示"></a>复数的几何表示</h2><p>$z=r(\cos\theta+i\sin\theta)=re^{i\theta}$</p><p>其中:</p><ul><li>$r=|z|$</li><li>$\theta=\mathrm{Arg}z$</li><li>$\mathrm{Arg}z=\mathrm{arg}z+2k\pi,k\in\mathbb{Z},-\pi&lt;\mathrm{arg}z\le\pi$.</li></ul><p>0的辐角没有意义.</p><p>$z_1z_2=r_1r_2(\cos(\theta_1+\theta_2)+i\sin(\theta_1+\theta_2))=r_1r_2e^{i(\theta_1+\theta_2)}$<br>$\dfrac{z_1}{z_2}=\dfrac{r_1}{r_2}(\cos(\theta_1-\theta_2)+i\sin(\theta_1-\theta_2))=\dfrac{r_1}{r_2}e^{i(\theta_1-\theta_2)}$</p><p>从而</p><ul><li>$|z_1z_2|=|z_1||z_2|$</li><li>$\mathrm{Arg}(z_1z_2)=\mathrm{Arg}z_1+\mathrm{Arg}z_2$</li><li>$|\dfrac{z_1}{z_2}|=\dfrac{|z_1|}{|z_2|}$</li><li>$\mathrm{Arg}(\dfrac{z_1}{z_2})=\mathrm{Arg}z_1-\mathrm{Arg}z_2$</li><li>$\mathrm{Arg}\bar{z}=-\mathrm{Arg}z$</li></ul><p>若$z_1$与$z_2$平行,充分必要条件是$\mathrm{Im}(z_1\bar{z_2})=0$<br>若$z_1$与$z_2$垂直,充分必要条件是$\mathrm{Re}(z_1\bar{z_2})=0$</p><p>$|\dfrac{z-z_1}{z-z_2}|=\lambda,z_1\neq z_2,0\le\lambda\neq1$被称为Apollonius圆,圆心为$\dfrac{z_1-\lambda^2z_2}{1-\lambda^2}$,半径为$\dfrac{\lambda|z_1-z_2|}{|1-\lambda^2|}$</p><h2 id="扩充复平面"><a href="#扩充复平面" class="headerlink" title="扩充复平面"></a>扩充复平面</h2><p>在$\mathbb{C}$中用$\infty$一点紧化,规定</p><ul><li>$z\pm\infty=\infty(z\neq\infty)$</li><li>$z\cdot\infty(z\neq0)$</li><li>$\dfrac{z}{\infty}=0(z\neq\infty)$</li><li>$\dfrac{z}{0}=\infty(z\neq0)$</li></ul><p>记作$\mathbb{C}_\infty$,称为<strong>扩充复平面</strong>.</p><p>复平面上一点与单位球的北极$(0,0,1)$相连,与单位球的交点称为<strong>复数的球面表示</strong>,而$\infty$与北极对应.</p><!-- 8 19:29 -->]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>抽代千叶抄</title>
      <link href="/2020/03/17/%E6%8A%BD%E4%BB%A3%E5%8D%83%E5%8F%B6%E6%8A%84/"/>
      <url>/2020/03/17/%E6%8A%BD%E4%BB%A3%E5%8D%83%E5%8F%B6%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<style>.qed{    float: right;}.qed:before{    content: "■";}</style><h1 id="群论"><a href="#群论" class="headerlink" title="群论"></a>群论</h1><blockquote><p>[1] 设$\varphi$是集合$A$到$B$的一个映射,$C$和$D$分别为$A$和$B$的非空子集.证明:<br>a) $\varphi^{-1}(\varphi(C))\supseteq C$,且当$\varphi$为单射时等号成立;<br>b) $\varphi(\varphi^{-1}(D))\subseteq D$,且当$\varphi$为满射时等号成立.</p></blockquote><p>a) 任取$x\in C$,$\varphi(x)\in\varphi(C)$,<br>$x\in\varphi^{-1}(\varphi(C))$,$\varphi^{-1}(\varphi(C))\supseteq S$.<br>若$\varphi$为单射,<br>任取$y\in\varphi^{-1}(\varphi(C))$,$\varphi(y)\in\varphi(C)$<br>故有$x\in C$,$\varphi(x)=\varphi(y)$.<br>由于$\varphi$是单射,<br>$x=y\in S$,<br>$\varphi^{-1}(\varphi(C))=C$<i class="qed"></i></p><p>b) 任取$y\in\varphi(\varphi^{-1}(D))$,<br>存在$x\in\varphi^{-1}(D)$,$\varphi(x)=y$,<br>同时$\varphi(x)\in D$,$y\in D$,<br>$\varphi(\varphi^{-1}(D))\subseteq D$<br>若$\varphi$为满射,<br>$\forall z\in D$,$\exists w\in\varphi^{-1}(D),\varphi(w)=z$,<br>$\varphi(w)\in\varphi(\varphi^{-1}(D))$,<br>$\varphi(\varphi^{-1}(D))=D$<i class="qed"></i></p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript</title>
      <link href="/2020/03/15/JavaScript/"/>
      <url>/2020/03/15/JavaScript/</url>
      
        <content type="html"><![CDATA[<p>网页统分为三大部分：结构（HTML）、表现（CSS）和行为（JavaScript）。</p><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><!-- TOC --><ul><li><a href="#javascript">JavaScript</a><ul><li><a href="#javascript简介">JavaScript简介</a><ul><li><a href="#代码的位置">代码的位置</a></li><li><a href="#输出">输出</a></li></ul></li><li><a href="#javascript基本语法">JavaScript基本语法</a><ul><li><a href="#字面量和变量">字面量和变量</a></li><li><a href="#数据类型">数据类型</a></li><li><a href="#类型转换">类型转换</a></li><li><a href="#运算符">运算符</a></li><li><a href="#运算符优先级">运算符优先级</a></li><li><a href="#语句">语句</a></li></ul></li><li><a href="#面向对象">面向对象</a><ul><li><a href="#对象基本操作">对象基本操作</a></li><li><a href="#对象字面量">对象字面量</a></li><li><a href="#函数对象">函数对象</a></li><li><a href="#作用域">作用域</a></li><li><a href="#闭包">闭包</a></li><li><a href="#构造函数">构造函数</a></li><li><a href="#原型对象">原型对象</a></li><li><a href="#json">JSON</a></li></ul></li><li><a href="#内建对象">内建对象</a><ul><li><a href="#array">Array</a></li><li><a href="#date">Date</a></li><li><a href="#math">Math</a></li><li><a href="#包装类">包装类</a></li><li><a href="#string">String</a></li><li><a href="#正则表达式">正则表达式</a></li></ul></li><li><a href="#dom">DOM</a><ul><li><a href="#节点">节点</a></li><li><a href="#对象">对象</a></li><li><a href="#事件">事件</a><ul><li><a href="#响应函数">响应函数</a></li><li><a href="#冒泡">冒泡</a></li><li><a href="#绑定响应函数">绑定响应函数</a></li><li><a href="#事件对象">事件对象</a></li><li><a href="#事件-1">事件</a></li><li><a href="#event属性">event属性</a></li></ul></li><li><a href="#dom查找方法">DOM查找方法</a></li><li><a href="#dom修改方法">DOM修改方法</a></li><li><a href="#dom操作css">DOM操作CSS</a></li></ul></li><li><a href="#bom">BOM</a><ul><li><a href="#navigator">Navigator</a></li><li><a href="#histroy">Histroy</a></li><li><a href="#lacation">Lacation</a></li><li><a href="#window定时器">Window定时器</a></li></ul></li></ul></li></ul><!-- /TOC --><h2 id="JavaScript简介"><a href="#JavaScript简介" class="headerlink" title="JavaScript简介"></a>JavaScript简介</h2><p>JavaScript是解释型语言，有着类似C和Java的语法结构，动态语言，基于原型的面向对象。</p><p>一个完整的JavaScript实现应该由以下三个部分构成：ECMAScript、DOM、BOM。</p><h3 id="代码的位置"><a href="#代码的位置" class="headerlink" title="代码的位置"></a>代码的位置</h3><p>在HTML中，JS代码可以编写在<code>&lt;script&gt;</code>中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">"Hello world!"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以内联到<code>&lt;button&gt;</code>标签的<code>onclick</code>属性中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"alert('Hello world!');"</span>&gt;</span>点我！<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以内联到<code>&lt;a&gt;</code>标签的<code>href</code>属性中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:alert('Hello world!');"</span>&gt;</span>点我！<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用专门的js文件，然后引入。此时<code>&lt;script&gt;</code>标签内部的代码被忽略。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./demo.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>弹出警告框。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert();</span><br></pre></td></tr></table></figure><p>弹出带有文本框的提示框，函数返回用户输入的字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> input = prompt(<span class="string">"请输入密码"</span>);</span><br></pre></td></tr></table></figure><p>带有消息和确认取消按钮的提示框。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = confirm(<span class="string">"确认提交？"</span>);</span><br></pre></td></tr></table></figure><p>文档输出，向<code>&lt;body&gt;</code>中写入内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write();</span><br></pre></td></tr></table></figure><p>控制台输出。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log();</span><br></pre></td></tr></table></figure><h2 id="JavaScript基本语法"><a href="#JavaScript基本语法" class="headerlink" title="JavaScript基本语法"></a>JavaScript基本语法</h2><h3 id="字面量和变量"><a href="#字面量和变量" class="headerlink" title="字面量和变量"></a>字面量和变量</h3><p>字面量都是不可改变的值，如<code>1</code>，<code>2</code>，<code>&quot;Hello&quot;</code>。</p><p>变量可以用来保存值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hello = <span class="string">"Hello world!"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(hello);</span><br></pre></td></tr></table></figure><p>标识符由字母、数字、下划线、美元符组成；不能以数字开头；不能是关键字或保留字；一般使用小驼峰规则。变量名可以使用中文，但不要使用。</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>数据类型指的是字面量的类型。</p><ul><li>String 字符串</li><li>Number 数值</li><li>Boolean 布尔值</li><li>Null 空值</li><li>Undefined 未定义</li><li>Object 对象</li></ul><p>Object是引用数据类型。</p><p><code>typeof</code>用于查看类型。</p><p>字符串使用双引号或单引号，不能嵌套，可以使用<code>\</code>转义。Unicode使用<code>\u</code>转义。</p><p>所有数值，包括整数和浮点数都使用Number。</p><p>Number型的最大值<code>Number.MAX_VALUE</code>约为$1.79769\times 10^{308}$，超过后认为<code>Infinity</code>；最小值<code>Number.MIN_VALUE</code>约为$5\times10^{-324}$。</p><p><code>NaN</code>表示不是数字，如字符串乘字符串。</p><p>十六进制以<code>0x</code>开头，八进制以<code>0</code>开头，二进制以<code>0b</code>开头（兼容性不好）。</p><p>布尔值只有<code>true</code>和<code>false</code>。</p><p><code>Undefined</code>类型值只有<code>undefined</code>，表示未定义的变量。</p><p><code>Null</code>类型值只有<code>null</code>，专门用来表示为空的对象，类型为<code>Object</code>。</p><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ul><li>转换为String：<ul><li><code>.toString()</code>方法，不能转换<code>null</code>和<code>undefined</code>。</li><li><code>String()</code>函数，底层实现是检测和调用<code>.toString()</code>方法。</li><li><code>+&quot;&quot;</code>加空串会转换为字符串。</li></ul></li><li>转换为Number：<ul><li><code>Number()</code>函数<ul><li>若不能转换给出<code>NaN</code>。</li><li><code>undefined</code>转换为<code>NaN</code>。</li><li>空串<code>&quot;&quot;</code>或空白串<code>&quot; &quot;</code>，<code>&quot;\t&quot;</code>转换为<code>0</code>。</li><li><code>true</code>转换为<code>1</code>，<code>false</code>转换为<code>0</code>。</li><li><code>null</code>转换为<code>0</code>。</li></ul></li><li><code>parseInt()</code>和<code>parseFloat()</code>转换字符串<ul><li>将有效字符串转换为Number，遇到非数字停止。</li><li><code>parseFloat()</code>可以转换科学计数法。</li><li>非有效返回<code>NaN</code>。</li><li>其他数据类型先转换为String再转换，所以给出<code>NaN</code>。</li><li><code>070</code>这种字符串可能转换错误，可以使用<code>parseInt(&quot;070&quot;,10)</code>表示以十进制转换。</li></ul></li><li><code>-0</code>，<code>*1</code>，<code>/1</code>除了加号以外的算术运算符.</li><li><code>+</code>正号</li></ul></li><li>转换为Boolean<ul><li><code>Boolean()</code>函数<ul><li><code>0</code>和<code>NaN</code>为<code>false</code>，其余都为<code>true</code>。</li><li>空串<code>&quot;&quot;</code>为<code>false</code>，其余都为<code>true</code>。</li><li><code>null</code>和<code>undefined</code>为<code>false</code>，其余对象为<code>true</code>。</li><li><code>!!</code></li></ul></li></ul></li></ul><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li><code>typeof</code>是运算符，可以获取数据类型，返回字符串。</li><li><code>+</code>，<code>-</code>,<code>*</code>,<code>/</code>,<code>%</code><ul><li>除了字符串拼接，非Number类型值会先转换为Number。</li><li>任何值和<code>NaN</code>运算都是<code>NaN</code>。</li><li>两个字符串相加视为拼接。</li><li>任何值和字符串相加视为字符串拼接。</li></ul></li><li><code>+</code>正号，<code>-</code>负号<ul><li>对于非Number，先转换为Number。</li></ul></li><li><code>++</code>自增，<code>--</code>自减<ul><li>无论是前置<code>++</code>和后置<code>++</code>，都会让变量立即自增，但返回的值不同。</li></ul></li><li><code>&amp;&amp;</code>与，<code>||</code>或，<code>!</code>非<ul><li>与和或均为短路运算。</li><li>非<code>Boolean</code>会先转换为<code>Boolean</code>，但会返回短路时的原值：与运算如果第一个值为<code>true</code>返回第二个值，如果第一个值为<code>false</code>返回第一个值；或运算如果第一个值为<code>false</code>返回第二个值，如果第一个值为<code>true</code>返回第二个值。</li></ul></li><li><code>=</code>赋值，<code>+=</code>，<code>-=</code>，<code>*=</code>，<code>/=</code>，<code>%=</code></li><li><code>&gt;</code>，<code>&lt;</code>，<code>&gt;=</code>，<code>&lt;=</code><ul><li>除了字符串比较，非数值会先转换为数值。</li><li>任何值和<code>NaN</code>比较总会得到<code>false</code>。</li><li>两个字符串比较会进行字符串比较，使用Unicode。</li></ul></li><li><code>==</code>，<code>!=</code><ul><li>一般来讲会转换为Number进行相等比较。</li><li><code>null == 0 // false</code></li><li><code>undefined</code>衍生自<code>null</code>，<code>undefined == null //true</code></li><li><code>NaN</code>的相等比较总会给出<code>false</code>。可以通过<code>isNaN()</code>判断是否为<code>NaN</code>。</li><li><code>!=</code>取值为<code>==</code>取反。</li></ul></li><li><code>===</code>全等，<code>!==</code>不全等<ul><li>全等和不全等不会做类型转换。</li></ul></li><li><code>?:</code>条件运算符</li><li><code>,</code>逗号运算符</li></ul><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><ul><li><code>.</code>，<code>[]</code>，<code>new</code></li><li><code>()</code></li><li><code>++</code>，<code>--</code></li><li><code>!</code>，<code>~</code>，<code>+</code>，<code>-</code>，<code>typeof</code>，<code>void</code>，<code>delete</code></li><li><code>%</code>，<code>*</code>，<code>/</code></li><li><code>+</code>，<code>-</code></li><li><code>&lt;&lt;</code>，<code>&gt;&gt;</code>，<code>&gt;&gt;&gt;</code></li><li><code>&lt;</code>，<code>&lt;=</code>，<code>&gt;</code>，<code>&gt;=</code></li><li><code>==</code>，<code>!=</code>，<code>===</code></li><li><code>&amp;</code></li><li><code>|</code></li><li><code>&amp;&amp;</code></li><li><code>||</code></li><li><code>?:</code></li><li><code>=</code>，<code>+=</code>，<code>-=</code>，<code>*=</code>，<code>/=</code>，<code>%=</code>，<code>&lt;&lt;=</code>，<code>&gt;&gt;=</code>，<code>&gt;&gt;&gt;=</code>，<code>&amp;=</code>，<code>^=</code>，<code>|=</code></li><li><code>,</code></li></ul><h3 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(exp)&#123;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(exp)&#123;<span class="comment">//switch 使用的是===</span></span><br><span class="line">    <span class="keyword">case</span> val:<span class="comment">//case中允许表达式</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">&#125;<span class="keyword">while</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><ul><li>内建对象由ES标准定义，如Math，String，Number，Boolean，Function，Object等。</li><li>宿主对象由JS的运行环境提供，如BOM，DOM等。console和document就是宿主对象。</li><li>自建对象由开发人员创建。</li></ul><h3 id="对象基本操作"><a href="#对象基本操作" class="headerlink" title="对象基本操作"></a>对象基本操作</h3><p>对象通过<code>new</code>创建，对象属性用<code>.</code>创建，用<code>delete</code>删除。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();<span class="comment">//创建对象</span></span><br><span class="line">obj.age = <span class="number">100</span>;<span class="comment">//向对象中添加属性</span></span><br><span class="line"><span class="built_in">console</span>.log(obj.age)<span class="comment">//读取对象的属性，如果没有属性给出undefined</span></span><br><span class="line"><span class="keyword">delete</span> obj.age;<span class="comment">//删除对象属性</span></span><br></pre></td></tr></table></figure><p>对象的属性的本质是键值对，键为字符串，可以用<code>[]</code>控制。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//属性名可以用任意字符串，但特殊的字符串需要使用[]，此时甚至可以传入变量</span></span><br><span class="line">obj[<span class="string">"123"</span>] = <span class="number">456</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"age"</span>;</span><br><span class="line">obj[str] = <span class="number">110</span>;</span><br></pre></td></tr></table></figure><p>可以通过in运算符检查对象是否拥有指定的属性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="string">"age"</span> <span class="keyword">in</span> obj)&#123; &#125;</span><br></pre></td></tr></table></figure><p>可以使用<code>foreach</code>来枚举对象的全部属性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> n <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(n+<span class="string">":"</span>+obj[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对象是引用数据类型，<code>==</code>比较的是是否为同一对象。</p><p>当直接打印对象时，使用对象的<code>toString()</code>方法，定义在Object的原型之中，可以重写这个方法。</p><h3 id="对象字面量"><a href="#对象字面量" class="headerlink" title="对象字面量"></a>对象字面量</h3><p><code>{}</code>为对象字面量，可以在创建对象的同时添加属性，属性名可以加引号。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> obk = &#123; <span class="attr">name</span>: <span class="string">"Steve"</span>, <span class="attr">age</span>: <span class="number">11</span> &#125;;</span><br></pre></td></tr></table></figure><h3 id="函数对象"><a href="#函数对象" class="headerlink" title="函数对象"></a>函数对象</h3><p>函数也是对象，具有普通对象的功能，函数中可以封装代码，在需要时执行功能。</p><p>可以在构造函数时将代码以字符串的形式传递给构造函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"console.log('Hello world');"</span>);</span><br></pre></td></tr></table></figure><p>一般使用函数声明来创建函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Hello world!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以使用函数表达式创建函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Hello world!"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>可以在函数中使用参数。调用时多余参数会被忽略，不足的参数为<code>undefined</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以立即执行声明的匿名函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; alert(<span class="string">"Hello world!"</span>;) &#125;)();</span><br></pre></td></tr></table></figure><p>对象的属性也可以是函数，此时称为方法。</p><p>函数在调用时会传递<code>this</code>，即调用函数的对象还会传递<code>arguments</code>，即传递的参数，<code>argument</code>是一个伪数组。</p><p><code>arguments</code>有一个属性<code>callee</code>，对应调用的函数。</p><p>对函数对象调用<code>call()</code>和<code>apply()</code>会调用函数，传入的参数将会作为<code>this</code>，但<code>apply()</code>要求将参数封装为数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">func.call(obj, arg...);<span class="comment">//obj.func(arg...);</span></span><br><span class="line">func.apply(obj, argv);<span class="comment">//obj.func(arg...);</span></span><br></pre></td></tr></table></figure><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>JS中的作用域分为全局作用域和函数作用域。</p><p>全局作用域：</p><ul><li>编写在<code>&lt;script&gt;</code>中的变量拥有全局作用域，在页面打开时创建，在页面关闭时销毁。</li><li>在全局作用域中有一个全局对象<code>window</code>，代表浏览器的窗口。全局作用域中的所有变量都作为<code>window</code>的属性储存，所有函数都作为<code>window</code>的方法储存。</li><li><code>var</code>关键字声明的变量，会在所有的代码执行之前被声明。</li><li>使用<code>function</code>声明的函数，会在所有的代码执行之前被声明及定义。</li></ul><p>函数作用域</p><ul><li>调用函数时创建函数作用域，函数执行完毕后作用域销毁。</li><li>函数作用域中可以访问全局作用域。</li><li>函数作用域中的重名变量就近使用。</li><li><code>var</code>关键字声明的变量，会在函数中所有的代码执行之前被声明。</li><li>定义的形参相当于在函数作用域中定义的变量。</li><li>不用<code>var</code>关键字声明的变量，都会是全局变量。</li><li>使用<code>function</code>声明的函数，会在函数中所有的代码执行之前被声明及定义。</li></ul><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p>为了让函数外部可以访问函数作用域的变量，可以使用闭包。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fuction f()&#123;</span><br><span class="line">  <span class="keyword">var</span> n = <span class="number">1</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(n);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> f2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> r = f();</span><br><span class="line">r();<span class="comment">//100</span></span><br></pre></td></tr></table></figure><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><p>使用工厂方法来统一创建对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createObj</span>(<span class="params">name, age</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">  obj.name = name;</span><br><span class="line">  obj.age = age;</span><br><span class="line">  <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以声明构造函数。调用构造函数时会立刻创建新的对象，将新建的对象设置为函数中的<code>this</code>，执行函数中的代码，并把对象作为返回值返回。使用同一个构造函数创建的对象称为同一类对象，将构造函数称为一个类。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>instanceof</code>运算符检查一个对象是否是一个类的实例。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> steve = <span class="keyword">new</span> Person(<span class="string">"steve"</span>, <span class="number">11</span>);</span><br><span class="line"><span class="built_in">console</span>.log(steve <span class="keyword">instanceof</span> Person);</span><br></pre></td></tr></table></figure><h3 id="原型对象"><a href="#原型对象" class="headerlink" title="原型对象"></a>原型对象</h3><p>每创建一个函数，解析器都会向函数添加一个属性prototype，这个属性对应着一个对象，称为原型对象。</p><p>如果函数作为普通函数调用，原型对象不起作用。当函数作为构造函数调用，他所创建的对象都有一个隐含属性指向原型对象，可以通过<code>__proto__</code>访问。</p><p>原型对象相当于公共区域，可以将对象所共有的内容统一设置到原型对象中，如类方法。当访问对象的属性或方法时，如果没有在自身范围内找到，则会在原型对象中寻找。</p><p>原型对象也是对象，原型对象也有原型对象，直到Object的原型对象。Object对象的原型对象没有原型对象，对应null。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">steve.sayName();</span><br></pre></td></tr></table></figure><p>使用<code>in</code>检查属性时，也会包括原型对象。可以使用<code>hasOwnProperty()</code>检查对象自身是否拥有该属性。</p><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>Javascript Object Notation用字符串表示一个对象。对象用<code>{}</code>表示，数组用<code>[]</code>表示。</p><p>JSON工具类用于转换JSON。（IE8+）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(json);</span><br><span class="line"><span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(obj);</span><br></pre></td></tr></table></figure><p>IE7解决案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="built_in">eval</span>(<span class="string">"("</span> + str + <span class="string">")"</span>);</span><br></pre></td></tr></table></figure><p>不过还是引入一个JSON库比较好。</p><h2 id="内建对象"><a href="#内建对象" class="headerlink" title="内建对象"></a>内建对象</h2><h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><p>数组也是对象。使用数字索引作为属性名存储元素。数组的存储性能要比普通对象要好。<code>typeof</code>检查数组对象会给出object。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>();<span class="comment">//创建数组</span></span><br><span class="line"><span class="keyword">var</span> arr2 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">var</span> arr3 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>);<span class="comment">//创建长度为10的数组</span></span><br><span class="line"><span class="keyword">var</span> arr4 = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>];<span class="comment">//用字面量创建数组</span></span><br><span class="line"><span class="keyword">var</span> arr5 = [&#123;<span class="attr">name</span>:<span class="string">"steve"</span>&#125;,&#123;<span class="attr">name</span>:<span class="string">"alex"</span>&#125;];</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">10</span>;<span class="comment">//修改元素</span></span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">0</span>]);<span class="comment">//读取元素</span></span><br><span class="line"><span class="built_in">console</span>.log(arr.length)<span class="comment">//数组长度</span></span><br><span class="line">arr.length = <span class="number">10</span>;<span class="comment">//修改长度，如果小于当前长度，则会删除多余元素</span></span><br><span class="line">arr[arr.length] = <span class="number">20</span>;<span class="comment">//向数组末尾添加元素</span></span><br></pre></td></tr></table></figure><p>数组方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">arr.push(obj);<span class="comment">//向数组末尾添加一个或多个元素，返回长度</span></span><br><span class="line">arr.pop();<span class="comment">//删除并返回最后一个元素</span></span><br><span class="line">arr.unshift(obj);<span class="comment">//向数组开头添加一个或多个元素，返回长度</span></span><br><span class="line">arr.shift();<span class="comment">//删除并返回第一个元素</span></span><br><span class="line">arr.slice(start, end);<span class="comment">//切片，返回新数组，第二个参数不写时截取到末尾，负数时从右向左计算</span></span><br><span class="line">arr.splice(start, len, obj...);<span class="comment">//删除指定切片的元素，返回删除的数组，并把新元素添加到删除的位置</span></span><br><span class="line">arr.concat(arr2/obj...);<span class="comment">//合并数组，返回新数组</span></span><br><span class="line">arr.join(<span class="string">"-"</span>);<span class="comment">//将所有元素转换为字符串，使用连接符连接，默认是逗号</span></span><br><span class="line">arr.reverse();<span class="comment">//翻转数组</span></span><br><span class="line">arr.sort();<span class="comment">//排序，转换为字符串升序排序，可以加入回调函数，返回前者减后者之差</span></span><br></pre></td></tr></table></figure><p>数组遍历使用<code>forEach()</code>，需要传入回调函数，回调函数的三个参数分别代表当前元素、索引和数组。IE8及以下不支持。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, array</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"arr["</span> + <span class="string">"index"</span> + <span class="string">"]="</span> + value);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">//默认当前时间</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"12/06/2016 11:10:30"</span>);</span><br><span class="line">v = d.getDate();<span class="comment">//日期</span></span><br><span class="line">v = d.getDay();<span class="comment">//返回星期，星期日是0</span></span><br><span class="line">v = d.getMonth();<span class="comment">//返回月份，一月是0</span></span><br><span class="line">v = d.getFullYear();<span class="comment">//2016</span></span><br><span class="line">v = d.getHours();</span><br><span class="line">v = d.getMinutes();</span><br><span class="line">v = d.getSeconds();</span><br><span class="line">v = d.getMilliseconds();</span><br><span class="line">v = d.getTime();<span class="comment">//时间戳</span></span><br><span class="line">v = <span class="built_in">Date</span>.now();<span class="comment">//当前时间</span></span><br></pre></td></tr></table></figure><h3 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h3><p><code>Math</code>不是构造函数，不用创建对象，是一个工具类。属性为数学常量，方法为数学函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Math</span>.PI;</span><br><span class="line"><span class="built_in">Math</span>.E;</span><br><span class="line"><span class="built_in">Math</span>.abs(x);</span><br><span class="line"><span class="built_in">Math</span>.ceil(x);</span><br><span class="line"><span class="built_in">Math</span>.floor(x);</span><br><span class="line"><span class="built_in">Math</span>.round(x);</span><br><span class="line"><span class="built_in">Math</span>.random(x);<span class="comment">//[0, 1)随机数</span></span><br><span class="line"><span class="built_in">Math</span>.max(x...);</span><br><span class="line"><span class="built_in">Math</span>.min(x...);</span><br><span class="line"><span class="built_in">Math</span>.pow(x, y);</span><br><span class="line"><span class="built_in">Math</span>.sqrt(x);</span><br></pre></td></tr></table></figure><h3 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h3><p>可以将基本数据类型包装为对象，开发中不常用。浏览器会临时使用包装类处理基本数据类型调用的方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"Hello wrold!"</span>);</span><br><span class="line"><span class="keyword">var</span> num = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> flag = <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><p>String类的底层实现是字符数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"Hello world"</span>;</span><br><span class="line">str.length;<span class="comment">//字符串长度</span></span><br><span class="line">str[<span class="number">0</span>];</span><br><span class="line">str.charAt(pos);</span><br><span class="line">str.charCodeAt(pos);<span class="comment">//Unicode编码</span></span><br><span class="line"><span class="built_in">String</span>.fromCharCode(code);<span class="comment">//Unicode转汉字</span></span><br><span class="line">str.concat(str2...);<span class="comment">//返回字符串的合并</span></span><br><span class="line">str.indexOf(substr, start);<span class="comment">//没有找到返回-1</span></span><br><span class="line">str.lastIndexOf(subset, start);<span class="comment">//倒序查找</span></span><br><span class="line">str.slice(start, end);</span><br><span class="line">str.substring(start, end);<span class="comment">//不接受负值，变为0，会自动交换两个参数的位置</span></span><br><span class="line">str.substr(start, len);</span><br><span class="line">str.split(<span class="string">","</span>);<span class="comment">//将字符串拆分为数组，空串会按每个字符拆分</span></span><br><span class="line">str.toUpperCase();<span class="comment">//返回大写字符串</span></span><br><span class="line">str.toLowerCase();<span class="comment">//返回小写字符串</span></span><br></pre></td></tr></table></figure><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>匹配模式包括<code>&quot;i&quot;</code>和<code>&quot;g&quot;</code>，指忽略大小写和全局匹配模式，可以多个匹配。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> r = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"正则表达式"</span>,<span class="string">"匹配模式"</span>);</span><br><span class="line"><span class="keyword">var</span> r = <span class="regexp">/ab/i</span>;<span class="comment">//使用字面量</span></span><br><span class="line">r.test(str);<span class="comment">//检测是否符合正则表达式</span></span><br></pre></td></tr></table></figure><p>基本语法</p><ul><li><code>/a/</code> 含有a</li><li><code>/ab/</code> 含有ab</li><li><code>/a|b/</code> 含有a或b</li><li><code>/[ab]/</code> 含有a或b</li><li><code>/[a-z]/</code> 含有小写字母</li><li><code>/[A-z]/</code> 含有任意字母</li><li><code>/[0-9]/</code> 含有任意数字</li><li><code>/a[bcd]z/</code> 含有abz或acz或adz</li><li><code>/[^0-9]/</code> 含有非数字的字符</li></ul><p>量词</p><ul><li><code>/a{3}/</code> 含有aaa</li><li><code>/ab{3}/</code> 含有abbb</li><li><code>/(ab){3}/</code> 含有ababab</li><li><code>/a{1,3}/</code> 含有a或aa或aaa</li><li><code>/a{3,}/</code> 含有aaa或aaaa或aaaaa…</li><li><code>/ab+c/</code> 含有abc或abbc或abbbc…</li><li><code>/ab*c/</code> 含有ac或abc或abbc或abbbc…</li><li><code>/ab?c/</code> 含有ac或abc</li></ul><p>开头结尾</p><ul><li><code>/^a/</code> 以a开头</li><li><code>/a$/</code> 以a结尾</li><li><code>/^a$/</code> 只匹配a</li></ul><p>元字符</p><ul><li><code>.</code> 除了换行和结束的任意字符</li><li><code>\.</code> 匹配”.”</li><li><code>\w</code> 任意字母、数字、下划线</li><li><code>\W</code> 非字母、数字、下划线</li><li><code>\d</code> 任意数字 </li><li><code>\D</code> 非数字</li><li><code>\s</code> 空格</li><li><code>\S</code> 非空格</li><li><code>\b</code> 单词边界，如<code>\bchild\b</code>查找单词child</li><li><code>\B</code> 非单词边界</li></ul><p>例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> phoneReg = <span class="regexp">/^1[3-9][0-9]&#123;9&#125;$/</span>;</span><br><span class="line">str = str.replace(<span class="regexp">/^s*|^s$/g</span>, <span class="string">""</span>);<span class="comment">//去除开头和结尾的空格</span></span><br><span class="line"><span class="keyword">var</span> mailReg = <span class="regexp">/^\w&#123;3,&#125;@[A-z0-9]+\.[A-z]&#123;2,5&#125;$/</span></span><br></pre></td></tr></table></figure><p>支持正则表达式的String类方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str.split(reg);<span class="comment">//以正则表达式拆分字符串，默认全局匹配拆分</span></span><br><span class="line">str.search(reg);<span class="comment">//类似indexOf()，检索正则表达式，不支持全局匹配</span></span><br><span class="line">str.match(reg);<span class="comment">//将符合正则表达式的内容提取出来，如果设置为全局匹配模式则会检索整个字符串，返回数组</span></span><br><span class="line">str.replace(reg, str);<span class="comment">//返回替换后的字符串，可以设置全局匹配模式</span></span><br></pre></td></tr></table></figure><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p>文档对象模型，文档指整个网页，网页中的所有元素都转换为对象。</p><h3 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h3><p>常用节点：</p><ul><li>文档节点：整个HTML文档</li><li>元素节点：HTML标签</li><li>属性节点：元素属性</li><li>文本节点：标签中的文本内容</li></ul><table><thead><tr><th></th><th>nodeName</th><th>nodeType</th><th>nodeValue</th></tr></thead><tbody><tr><td>文档节点</td><td>#document</td><td>9</td><td>null</td></tr><tr><td>元素节点</td><td>标签名</td><td>1</td><td>null</td></tr><tr><td>属性节点</td><td>属性名</td><td>2</td><td>属性值</td></tr><tr><td>文本节点</td><td>#text</td><td>3</td><td>文本内容</td></tr></tbody></table><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">class</span>=<span class="string">"butn"</span>&gt;</span>我是一个按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span></span><br><span class="line"><span class="actionscript">  btn.innerHTML = <span class="string">"I'm a Button"</span>;<span class="comment">//返回内部html代码，对自结束标签没有意义</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>元素的属性可以直接用对象的属性获取，除了<code>class</code>需要使用<code>className</code>。</p><ul><li><code>innerHTML</code> 获取内部HTML代码</li><li><code>innerText</code> 获取内部文本</li></ul><h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><h4 id="响应函数"><a href="#响应函数" class="headerlink" title="响应函数"></a>响应函数</h4><p>可以在HTML标签中使用事件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">onclick</span>=<span class="string">"alert('Ouch!');"</span>&gt;</span>我是一个按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>应该在JS中处理事件，这时调用的回调函数称为响应函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(<span class="string">"Ouch!"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应函数需要在对象加载后再绑定，否则无法获取到对象。</p><h4 id="冒泡"><a href="#冒泡" class="headerlink" title="冒泡"></a>冒泡</h4><p>当后代的事件触发时，祖先的元素相同事件会依次触发，称为冒泡。可以用<code>event.cancelBubble = true</code>取消冒泡。</p><p>将事件绑定给元素的共同的祖先，这样当后代元素上的事件触发时会一直冒泡到祖先，称为事件的委派。</p><p>事件触发时，如果事件由内向外触发，称为事件冒泡，而事件从外向内的过程是捕获阶段。默认在捕获阶段不会触发事件，捕获结束后才开始触发冒泡。可以设置在捕获阶段就触发。</p><h4 id="绑定响应函数"><a href="#绑定响应函数" class="headerlink" title="绑定响应函数"></a>绑定响应函数</h4><p><code>addEventListener()</code>也可以绑定响应函数（IE9+）。事件以字符串传入，不需要”on”。第三个参数表示是否在捕获阶段触发事件。可以绑定多个事件，先绑定者先执行。IE8使用<code>attachEvent()</code>，后绑定者先执行，且函数中的this表示window。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params">obj, eventStr, func</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(obj.addEventListener)&#123;</span><br><span class="line">    obj.addEventListener(eventStr, func, <span class="literal">false</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    obj.attatchEvent(<span class="string">"on"</span> + eventStr, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      func.call(obj);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h4><p>当事件的响应函数被触发时，浏览器会将事件对象传入响应函数（IE9+），事件对象中封装了事件的信息。事件对象也会作为window的event属性保存（火狐除外）。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  event = event || <span class="built_in">window</span>.event;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件-1"><a href="#事件-1" class="headerlink" title="事件"></a>事件</h4><ul><li><code>onload</code>表示加载完成，响应函数会在页面加载完成后调用。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><code>onsroll</code> 滚动条滚动。</li><li><code>onmousewheel</code> 鼠标滚轮滚动。<ul><li>火狐不支持，需要用<code>addEventListener()</code>加入<code>DOMMouseScroll</code>。</li><li>浏览器若有滚动条也会一起滚，要设置<code>return false</code>。</li><li><code>addEventListener()</code>绑定的事件无法用<code>return false</code>取消默认行为，可以用<code>event.preventDefault()</code>。</li><li>IE8不支持<code>event.preventDefault()</code>。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">obj.onmousewheel = func;</span><br><span class="line">bind(obj, <span class="string">"DOMMouseScroll"</span>, obj.onmousewheel);</span><br></pre></td></tr></table></figure></li></ul></li><li><code>onmousemove</code> 鼠标移动。</li><li><code>onmousedown</code> 鼠标按下。<ul><li>浏览器会默认在搜索引擎中搜索内容，可以用<code>return false</code>取消这一默认行为（IE9+）。</li><li>在IE8可以使用只有IE支持的<code>setCapture()</code>。其将下一次的任意鼠标按下事件变为对自身的按下事件。<code>releaseCapture()</code>释放捕获。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">obj.setCapture &amp;&amp; obj.setCapture();</span><br><span class="line">obj.releaseCapture &amp;&amp; obj.releaseCapture();</span><br></pre></td></tr></table></figure></li></ul></li><li><code>onmouseup</code> 鼠标松开。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drag</span>(<span class="params">obj</span>) </span>&#123;<span class="comment">//构建一个可以拖拽元素的函数</span></span><br><span class="line">  obj.onmousedown = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    event = event || <span class="built_in">window</span>.event;</span><br><span class="line">    obj.setCapture &amp;&amp; obj.setCapture();<span class="comment">//IE8设置捕获</span></span><br><span class="line">    <span class="keyword">var</span> oLeft = event.clientX - obj.offsetLeft;</span><br><span class="line">    <span class="keyword">var</span> oTop = event.clientY - obj.offsetTop;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">      event = event || <span class="built_in">window</span>.event;</span><br><span class="line">      <span class="keyword">var</span> left = event.clientX - oLeft;</span><br><span class="line">      <span class="keyword">var</span> top = event.clientY - oTop;</span><br><span class="line">      obj.style.left = left + <span class="string">"px"</span>;</span><br><span class="line">      obj.style.top = top + <span class="string">"px"</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">      <span class="built_in">document</span>.onmouseup = <span class="literal">null</span>;</span><br><span class="line">      obj.releaseCapture &amp;&amp; obj.releaseCapture();<span class="comment">//IE8取消捕获</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>onkeydown</code> 键盘按下。<ul><li>一般绑定给可以获取焦点的对象或document。</li><li>一直按会一直触发。</li><li>默认行为是给文本框中输入字符。</li></ul></li><li><code>onkeyup</code>键盘弹起。</li></ul><p>在<code>&lt;a&gt;</code>的onclick事件中，如果返回false，则不会跳转。</p><h4 id="event属性"><a href="#event属性" class="headerlink" title="event属性"></a>event属性</h4><ul><li><code>button</code> 鼠标按下的键。</li><li><code>clientX</code> 鼠标横坐标，相对于视口，下同。</li><li><code>clientY</code> 鼠标纵坐标</li><li><code>pageX</code> 鼠标横坐标，相对于页面，下同。（IE9+）</li><li><code>pageY</code> 鼠标纵坐标</li><li><code>target</code> 触发事件的节点</li><li><code>wheelDelta</code> 鼠标滚轮方向，向上为正。火狐使用<code>detail</code>， 向上为负。</li><li><code>alyKey</code> 是否按下Alt。</li><li><code>ctrlKey</code> 是否按下Ctrl。</li><li><code>shiftKey</code> 是否按下Shift。</li><li><code>metaKey</code> 是否按下meta。</li><li><code>keyCode</code> 按键的编码。</li></ul><h3 id="DOM查找方法"><a href="#DOM查找方法" class="headerlink" title="DOM查找方法"></a>DOM查找方法</h3><ul><li>文档节点<ul><li><code>getElementById()</code> 通过id获取一个元素节点对象</li><li><code>getElementsByTagName()</code> 通过标签名获取一组对象</li><li><code>getElementsByName()</code> 通过name属性获取一组对象</li><li><code>getElementsByClassName()</code> 通过类名获取一组对象（IE9+）</li><li><code>body</code> <code>&lt;body&gt;</code>标签</li><li><code>document</code> <code>&lt;html&gt;</code>标签</li><li><code>all</code> 所有元素</li><li><code>getElementsByTagName(&quot;*&quot;)</code> 同上</li><li><code>querySelector()</code>根据CSS选择器查询一个元素节点对象（IE8+）</li><li><code>querySelectorAll()</code>根据CSS选择器查询一组元素节点对象（IE8+）</li></ul></li><li>元素节点<ul><li><code>getElementdByTagName()</code> 通过标签名获取后代节点</li><li><code>childNodes</code> 所有子节点，包括文本节点。HTML中标签间的空白也被算在内（IE8及以下不算空白）</li><li><code>children</code> 所有子元素</li><li><code>firstChild</code> 第一个子节点</li><li><code>firstElementChild</code> 第一个元素节点（IE9+）</li><li><code>lastChild</code> 最后一个子节点</li><li><code>parentNode</code> 父节点</li><li><code>previousSibling</code> 前一个兄弟节点</li><li><code>previousElementSibling</code> 前一个兄弟元素节点（IE9+）</li><li><code>nextSibling</code> 后一个兄弟节点</li></ul></li></ul><h3 id="DOM修改方法"><a href="#DOM修改方法" class="headerlink" title="DOM修改方法"></a>DOM修改方法</h3><ul><li><code>appendChild()</code> 把新的子节点添加到指定节点</li><li><code>removeChild()</code> 删除子节点</li><li><code>replaceChild()</code> 替换子节点</li><li><code>insertBefore()</code> 在指定子节点前插入子节点</li><li><code>createElement()</code> 创建元素节点</li><li><code>createTextNode()</code> 创建文本节点</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nli = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">"文本"</span>);</span><br><span class="line">nli.appendChild(text);</span><br><span class="line"><span class="keyword">var</span> ul = documnt.getElementById(<span class="string">"list"</span>);</span><br><span class="line"><span class="keyword">var</span> oli = <span class="built_in">document</span>.getElementById(<span class="string">"li1"</span>);</span><br><span class="line">ul.insertChild(nli, oli);</span><br></pre></td></tr></table></figure><h3 id="DOM操作CSS"><a href="#DOM操作CSS" class="headerlink" title="DOM操作CSS"></a>DOM操作CSS</h3><p>使用<code>元素.style.样式</code>。所有样式需要使用驼峰命名。这种修改和读取的是内联样式。</p><p><code>元素.currentStyle.样式</code>，获取的是当前样式。只有IE支持，返回值可能是<code>auto</code>。</p><p>在其他浏览器（IE9+）中使用，总会返回具体数值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> style = getComputedStyle(obj, <span class="literal">null</span>);<span class="comment">//第二个参数可传递伪元素</span></span><br><span class="line">alert(style.width);</span><br></pre></td></tr></table></figure><p>通用写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj, name</span>)</span></span><br><span class="line"><span class="function">  <span class="title">if</span> (<span class="params">window.getComputedStyle</span>)</span>&#123;<span class="comment">//属性如果不存在返回undefined</span></span><br><span class="line">    <span class="keyword">return</span> getComputedStyle(obj, <span class="literal">null</span>)[name];</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> obj.currentStyle[name]; </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><code>clientHeight</code> 可见高度，不带<code>px</code>，包括内容区和内边距，下同。</li><li><code>clientWidth</code> 可见宽度</li><li><code>offsetHeight</code> 包括内容区，内边距和边框，下同。 </li><li><code>offsetHeight</code></li><li><code>offsetParent</code> 获取用于定位的父元素</li><li><code>offsetLeft</code> 左偏移量</li><li><code>offsetTop</code> 上偏移量</li><li><code>scrollHeight</code> 滚动区域的完全高度。</li><li><code>scrollWidth</code> 滚动区域的完全宽度。</li><li><code>scrollTop</code> 滚动条的垂直位置。<ul><li>当<code>scrollTop == scrollHeight - clientHeight</code>时滚动条就滚动到底部了。</li><li>火狐等浏览器认为页面的滚动条属于<code>&lt;html&gt;</code>；旧版Chrome认为页面滚动条属于<code>&lt;body&gt;</code>。</li></ul></li><li><code>scrollLeft</code> 滚动条的水平位置。</li></ul><p>应该用切换类的方式切换CSS样式，使得行为与样式分离。</p><h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><p>浏览器对象模型。</p><ul><li>window 浏览器窗口</li><li>navigator 浏览器信息</li><li>history 历史记录，只能向前和向后翻页</li><li>location 地址栏</li><li>screen 屏幕</li></ul><p>所有其他对象都是window的属性。</p><h3 id="Navigator"><a href="#Navigator" class="headerlink" title="Navigator"></a>Navigator</h3><p>由于历史原因，navigator中大部分信息已经没用了。一般只用<code>userAgent</code>返回的字符串来判断浏览器信息。</p><p>IE11</p><ul><li>Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; rv:11.0) like Gecko</li></ul><p>IE10</p><ul><li>Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)</li></ul><p>IE8</p><ul><li>Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)</li></ul><p>Chrome</p><ul><li>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36</li></ul><p>Edge</p><ul><li>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18363</li></ul><p>可以用浏览器特有对象来判断。</p><p>IE : <code>window.ActiveXObject</code> 但这个对象在IE11转布尔会返回false，所以要用<code>&quot;ActiveXObject&quot; in window</code>。</p><h3 id="Histroy"><a href="#Histroy" class="headerlink" title="Histroy"></a>Histroy</h3><ul><li><code>length</code> 浏览器中保存的URL数量。</li><li><code>back()</code> 回退。</li><li><code>forward()</code> 前进。</li><li><code>go()</code> 跳转到指定页面，正数向前跳，负数向后跳。</li></ul><h3 id="Lacation"><a href="#Lacation" class="headerlink" title="Lacation"></a>Lacation</h3><p>直接打印location可以得到地址栏的完整页面。修改时会直接跳转，生成相应的历史记录。</p><ul><li><code>assign()</code> 加载新的文档，跳转到新的页面。</li><li><code>reload()</code> 重新加载当前页面，相当于F5。可传入true，强制清空浏览器缓存，相当于ctrl+F5。</li><li><code>replace()</code> 使用新的页面替代本页面，不会生成历史记录。</li></ul><h3 id="Window定时器"><a href="#Window定时器" class="headerlink" title="Window定时器"></a>Window定时器</h3><ul><li><code>setInterval(func, time)</code> 开启定时器，将函数每隔一段时间执行一次，单位毫秒。返回定时器的标志。</li><li><code>clearInterval(n)</code> 关闭定时器，传入标志。</li><li><code>setTimeout()</code> 延迟调用。</li><li><code>clearTimeout()</code> 关闭延迟调用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>矩阵论</title>
      <link href="/2020/03/13/%E7%9F%A9%E9%98%B5%E8%AE%BA/"/>
      <url>/2020/03/13/%E7%9F%A9%E9%98%B5%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="线性空间与线性映射"><a href="#线性空间与线性映射" class="headerlink" title="线性空间与线性映射"></a>线性空间与线性映射</h2><p>给定非空集合$V$和域$F$<br>定义加法$\sigma:V\times V\rightarrow V,(v_1,v_2)\mapsto\sigma(v_1,v_2)$.</p><ul><li>加法满足交换律,即$a+b=b+a,\forall a,b\in V$</li><li>加法满足结合律,即$(a+b)+c=a+(b+c),\forall a,b,c\in V$</li><li>$\exists e\in V,e+v=v,\forall v\in V$</li><li>$\forall a\in V,\exists -a,-a+a=e$</li><li>数乘分配律,$(v_1+v_2)k=v_1k+v_2k,v(k_1+k_2)=vk_1+vk_2$</li><li>$v(kl)=(vk)l$</li><li>$v\cdot 1=v$</li></ul><p>由此构成线性空间.</p><p>称向量组$\alpha_1,\alpha_2,\cdots,\alpha_n$线性无关,如果存在不全为0的系数$k_1,k_2,\cdots,k_n\in K$,满足$k_1\alpha_1+k_2\alpha_2+\cdots+k_n\alpha_n=0$.</p><p>称向量$\beta$可由向量组$\alpha_1,\alpha_2,\cdots,\alpha_n$线性表示,如果$\exists k_1,k_2,\cdots k_n\in K,\beta=k_1\alpha_1+k_2\alpha_2+\cdots+k_n\alpha_n$,即$$\begin{bmatrix}\alpha_1\quad\alpha_2\quad\cdots\quad\alpha_n\end{bmatrix}\begin{bmatrix}k_1\\k_2\\\vdots\\k_n\end{bmatrix}=\beta$$</p><p>称某一子组为向量组的极大线性无关组,如果该子组线性无关,且任何真包含该子组的子组线性相关.</p><p>定理:向量组的任意极大线性无关组中的向量个数相同,称为秩.</p><p>若有集合$V$和数域$F$,$V$中任意向量都可以由极大无关组$\alpha_1,\alpha_2,\cdots,\alpha_n$线性表示,则称$V$为$n$维线性空间,极大无关组为一组基,表示系数$k_1,k_2,\cdots k_n$称为坐标.$V$中的任意向量都与$K^n$中的坐标一一对应.</p><p>若$V$是线性空间,$W$为$V$的非空子集,若$W$也为线性空间,称为$V$的子空间.只需保证$W$对加法和乘法封闭.</p><p>对向量组$\alpha_1,\alpha_2,\cdots,\alpha_n$,记$\mathbf{span}(\alpha_1,\alpha_2,\cdots,\alpha_n)={\beta|\beta=k_1\alpha_1+k_2\alpha_2+\cdots+k_n\alpha_n,k_1,k_2,\cdots k_n\in K}$,称为向量组$\alpha_1,\alpha_2,\cdots,\alpha_n$张成的子空间.</p><p>对$A\in F^{m\times n}$,称{$x|Ax=0,x\in F^n$}为$A$的核,记作$\mathbf{Ker}(A)$,${Ax|x\in F^n}$为$A$的像集,记作$\mathbf{Im}(A)$.</p><p>若$U,W$是$V$的子空间,则$U\cap W$也为子空间,称为$U,W$的交.</p><p>若$U,W$是$V$的子空间,则$U+V=\mathbf{span}(U,W)={u+w|u\in U,w\in W}$称为$U,W$的和.</p><p>若有线性空间$V_1,V_2$,若有映射$\varphi:V_1\rightarrow V_2$,满足$\varphi(v_1+v_2)=\varphi(v_1)+\varphi(v_2)$及$\varphi(kv)=k\varphi(v)$,则称$\varphi$为线性映射.若$\varphi$为可逆映射,则称$\varphi$为同构映射.</p><p>设$\mathscr{A}$表示$F^m$到$F^n$之间的全部线性映射,则$\mathscr{A}$与$F^{m\times n}$同构.</p><p>称$A,B\in F^{m\times n}$等价,如果存在可逆矩阵$P\in F^{n\times n},Q\in F^{m\times m}$,使得$A=PBQ$.</p><p>任何矩阵$A\in F^{m\times n}$总和如下的矩阵等价,其中$r$是$A$的秩.</p><p>$$\begin{bmatrix}I_r&amp;O\\O&amp;O\end{bmatrix}$$</p><p>称$A,B\in F^{n\times n}$相似,如果存在可逆矩阵$P\in F^{n\times n}$,使得$P^{-1}AP=B$.</p><p>$A\in F^{n\times n}$,子空间$W\subseteq F^{n}$,如果$A(W)\subseteq W$,称$W$是$A$的不变子空间.</p><p>$A,B\in F^{n\times n}$相似,$AP=PB$,$P=\begin{bmatrix}P_1&amp;P_2\end{bmatrix}$,$B=\begin{bmatrix}B_{11}&amp;B_{12}\\B_{21}&amp;B_{22}\end{bmatrix}$,则:</p><ul><li>$B_{21}=0\Leftrightarrow \mathbf{Im}P_1$是$A$的不变子空间</li><li>$B_{12}=0\Leftrightarrow \mathbf{Im}P_2$是$A$的不变子空间</li></ul><p>$A$相似与对角矩阵$\Leftrightarrow$对$P$的每个列向量$p_j$,$\mathbf{Im}p_j$是$A$的不变子空间,即$A$有$n$个线性无关的特征向量.</p><p>称$v\neq0\in F^n$是$A\in F^{n\times n}$的特征向量,如果$\exists\lambda\in K,Av=\lambda v$,$\lambda$为相应于$v$的特征值,$\mathbf{Im}v$称为特征子空间.</p><h2 id="lambda-矩阵与Jordan标准型"><a href="#lambda-矩阵与Jordan标准型" class="headerlink" title="$\lambda$矩阵与Jordan标准型"></a>$\lambda$矩阵与Jordan标准型</h2><p>以多项式为元素的矩阵称为$\lambda$矩阵.</p><p>$\lambda$矩阵的秩定义为不为零多项式的子式的最大阶数.$\lambda$矩阵的秩大于等于将$\lambda$取一定数时矩阵的秩.</p><p>称$A(\lambda)\in F^{n\times n}(\lambda)$为幺模矩阵,如果$A(\lambda)$的逆矩阵也是$\lambda$矩阵.$A(\lambda)$是幺模矩阵当且仅当$A(\lambda)$的模是非零常数多项式.</p><p>$A(\lambda)\in F^{m\times n}(\lambda)$的所有$k$阶子式的最高公因式称为$k$阶行列式因子$D_k(\lambda)$.初等行变换不改变行列式因子.</p><p>在初等行变换下,$\lambda$矩阵等价于它的Smith标准型,即$A(\lambda)\sim\begin{bmatrix}\varDelta(\lambda) &amp; O \\ O &amp; O \end{bmatrix}$,其中$\varDelta(\lambda)=\begin{bmatrix}d_1(\lambda) &amp; &amp; \\ &amp; \ddots &amp; \\ &amp; &amp; d_r(\lambda)\end{bmatrix}$,$r$为$A(\lambda)$的秩,$d_i(\lambda)$称为不变因子,且有:$$d_1(\lambda)=D_1(\lambda)$$$$d_i(\lambda)=D_i(\lambda)/D_{i-1}(\lambda)$$</p><p>单位模阵的Smith型为单位矩阵,对$\lambda$作初等行变化相当于乘单位模阵.</p><p>给定$A\in F^{n\times n}$,称多项式矩阵$\lambda I-A$为$A$的特征矩阵.</p><p>特征矩阵的秩为$n$,Smith标准型为$\begin{bmatrix}d_1(\lambda) &amp; &amp; \\ &amp; \ddots &amp; \\ &amp; &amp; d_n(\lambda)\end{bmatrix}$,且$D_n(\lambda)=|\lambda I-A|$,不变因子的次数和为$n$.</p><p>这个Smith标准型也可以写为$\begin{bmatrix}H_1(\lambda)&amp; &amp;\&amp;\ddots&amp;\&amp; &amp;H_p(\lambda)\end{bmatrix}$,其中$H_i(\lambda)=\begin{bmatrix}1 &amp; &amp; &amp; \\ &amp; \ddots &amp; &amp; \\ &amp; &amp; 1 &amp; \\ &amp; &amp; &amp; h_{n_i}(\lambda)\end{bmatrix}$,$h_{n_i}$的次数为$n_i$.</p><p>将不变因子$h_i(\lambda)$在$F[\lambda]$中作质因式分解时得到的各次方幂称为初等因子组.初等因子组和不变因子互相唯一确定.</p><p>矩阵相似,当且仅当特征矩阵等价,当且仅当特征矩阵有相同的Smith型,当且仅当特征矩阵有相同的不变因子,当且仅当特征矩阵有相同的行列式因子,当且仅当特征矩阵有相同的初等因子组.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>方块更新与延迟理论的拓展</title>
      <link href="/2020/03/11/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/"/>
      <url>/2020/03/11/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>在基础红石原理中，我们将方块的亚稳态称为BUD态，能够更新处于BUD态的方块的信号称为方块更新信号，能够检测方块更新信号的装置称为BUD。但事实上，其他的一些装置如TEUD，观察者等似乎可以对其他信号做出相应，这意味着游戏存在更多类型的方块更新信号。对更多更新信号的研究对启动更新理论进行了拓展。</p><p>TEUD是一种BUD，但不同于常规BUD，它检测的内容不止是方块更新，本质上与BUD“检测方块更新”这一最初的概念不相符合，因此BUD这一词的概念应当有所扩大。现在我们认为，BUD是一种直接或间接检测方块变化的装置，检测方块更新信号的BUD称为常规BUD，其余称为非常规BUD。在一些资料中，常规BUD被直接简称为BUD，《基础红石原理》也是这样做的。而现在BUD一词已经拥有较多含义，为使读者不至混淆而产生歧义，本书之后不再做这种简称。TEUD就是最典型、最常见、最具有代表性的非常规BUD。</p><p>基础的延迟理论旨在解释红石元器件和活塞的运行规律，但游戏中的红石元件显然不仅限于此。漏斗和观察者也是非常重要的红石元件，延迟理论的拓展将主要研究这两个元件。</p><!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 --><ul><li><a href="#第一节-teud">第一节 TEUD</a><ul><li><a href="#teud的简介">TEUD的简介</a></li><li><a href="#teud的制作">TEUD的制作</a></li><li><a href="#teud的功能">TEUD的功能</a></li></ul></li><li><a href="#第二节-观察者">第二节 观察者</a><ul><li><a href="#观察者的输出特性">观察者的输出特性</a></li><li><a href="#观察者的输入特性">观察者的输入特性</a></li></ul></li><li><a href="#第三节-方块更新信号">第三节 方块更新信号</a><ul><li><a href="#方块更新信号与方块变化的辩证关系">方块更新信号与方块变化的辩证关系</a></li><li><a href="#红石线更新顺序">红石线更新顺序</a><ul><li><a href="#空间稳定性">空间稳定性</a></li><li><a href="#方块更新顺序">方块更新顺序</a></li><li><a href="#红石线与哈希算法">红石线与哈希算法</a></li><li><a href="#特异点">特异点</a></li><li><a href="#方块更新和深度优先">方块更新和深度优先</a></li></ul></li><li><a href="#线路稳定性">线路稳定性</a></li><li><a href="#nc更新与pp更新还没写">NC更新与PP更新（还没写）</a></li><li><a href="#更新抑制还没写">更新抑制（还没写）</a></li></ul></li><li><a href="#第四节-漏斗理论">第四节 漏斗理论</a><ul><li><a href="#漏斗概述">漏斗概述</a></li><li><a href="#即时更新理论对漏斗的修正">即时更新理论对漏斗的修正</a></li><li><a href="#漏斗理论">漏斗理论</a></li></ul></li><li><a href="#第五节-0t脉冲">第五节 0t脉冲</a><ul><li><a href="#0t脉冲的细化">0t脉冲的细化</a></li><li><a href="#活塞更新深度">活塞更新深度</a></li><li><a href="#超频时钟">超频时钟</a></li></ul></li></ul><!-- /TOC --><h1 id="第一节-TEUD"><a href="#第一节-TEUD" class="headerlink" title="第一节 TEUD"></a>第一节 TEUD</h1><h2 id="TEUD的简介"><a href="#TEUD的简介" class="headerlink" title="TEUD的简介"></a>TEUD的简介</h2><p>TEUD（Tile Entity Data Update Detector），又称DUD（Data Update Detector）或CUD（Comparator Update Detector），即比较器更新检测器，是一种BUD的拓展衍生物，其检测的不只是方块更新信号。</p><p>游戏需要检测方块是否处于正常的状态，因而有了方块更新信号，检测方块更新信号的检测器就是方块更新检测器。同样，比较器具有满箱检测的功能，其可以检测容器、炼药锅、物品展示框、末地传送门框架及探测铁轨上的矿车等诸多项目，可以预想到这些项目的检测依赖于另一种更新信号，也就是比较器更新信号，检测比较器更新信号的检测器就是比较器更新检测器了。TEUD的核心元件是比较器，因此TEUD比常规BUD有更广的检测范围。</p><p>最早已知且仍然稳定可用的一种TEUD实现是由NiceMarkMC给出的，时间不晚于2013年5月初。在此之前的若干研究与讨论都为TEUD的成型做出了铺垫。</p><p>比较器更新信号具有和方块更新信号不同的性质。最大的不同就是方块更新信号一般的更新范围是方块的毗邻，即使红石元件有较大的更新范围，这个更新范围也是由产生更新的方块主导的；比较器更新信号则允许更新信号沿四周的实体方块传递一格，如果不存在实体方块，比较器更新信号也就不会产生。这显然是因为比较器可以通过实体方块进行满箱检测。</p><h2 id="TEUD的制作"><a href="#TEUD的制作" class="headerlink" title="TEUD的制作"></a>TEUD的制作</h2><p>TEUD的核心是陷入BUD态的比较器，而TEUD必须实现自复位功能，这是TEUD的根本原理。让比较器陷入BUD态的方式多种多样，但大多数方案都使用了比较器检测戴尔功能。其中，箱基TEUD的制作最为简便。</p><p>箱子可以被红石比较器直接检测或隔着一个实体方块被红石比较器检测，当箱子内有物品且箱子没有被实体方块压住时，比较器才会输出信号。如果在内含物品的箱子上方拿实体方块压住箱子，比较器理论上讲应该会熄灭，但是由于这一行为往往无法更新到比较器，比较器就会陷入BUD态。这样一来，比较器就可以检测比较器更新信号了。用活塞控制实体方块压箱子可以将这一原理自动化。下图就是一个箱基TEUD。当更新比较器时，比较器熄灭，活塞收回，收回结束更新到比较器，比较器点亮，活塞伸出，压住箱子，TEUD复位。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-880a3460.png" alt=""></p><p>若使得箱基TEUD的活塞不会更新到比较器，便可以制作出双稳态箱基TEUD，可以使用大箱子做到这一点。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-2e508404.png" alt=""></p><p>物品展示框可以被比较器检测。物品展示框作为一个实体可以与其他碰撞不完整的方块共处一个方块内，但是此时比较器无法检测物品展示框，因此可以做出TEUD。 值得一提的是，这是一个双稳态TEUD。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-f85f8547.png" alt=""></p><p>炼药锅可以用于制作TEUD，其可以被比较器检测，但重点在于其可以被活塞移动，这就给出了一种极佳的自复位方法。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-a2d9feec.png" alt=""></p><p>比较器可以检测探测铁轨上的矿车，而粘性活塞可以移动探测铁轨。这一过程主要是探测铁轨在产生比较器更新信号。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-f1de4f0a.png" alt=""></p><p>箱基TEUD也可以不使用实体方块而使用猫，猫会主动坐在箱子、床及燃烧的熔炉上，当猫坐在箱子上时，箱子无法被打开，比较器也无法进行检测。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-f8955afc.png" alt=""></p><p>利用红石指向BUD可以使一切输出元件陷入BUD态，比较器也不例外。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-c3f44a3d.png" alt=""></p><h2 id="TEUD的功能"><a href="#TEUD的功能" class="headerlink" title="TEUD的功能"></a>TEUD的功能</h2><p>在TEUD中，比较器陷入了BUD态，这意味着TEUD也能检测常规BUD所能检测的事项，为将比较器更新信号从方块更新信号中分离出来，我们可以利用比较器更新信号特殊的传递方式，隔着一个实体方块用特定事项更新比较器，这一过程称为TEUD的分离，隔着一个实体方块使TEUD动作的过程称为TEUD的响应。但红石元件往往具有较大的更新范围，即使隔着一个实体方块有时也无法成功分离方块更新信号和比较器更新信号，这种情况称为TEUD的分离失效。</p><p>除TEUD分离失效外，TEUD可以分离出许多比较器更新信号，从这一点来说，TEUD可以使纯红石系统的认知范围扩大。BUD现象的出现证实了游戏内存在方块更新信号，而TEUD则证实了游戏内存在着另一种更新信号——比较器更新信号。如果没有BUD和TEUD，这些更新信号像幽灵一样在游戏内运行而无法为人感知。因此是某些方块的变化，产生了特定的更新信号，这些更新信号由BUD或TEUD检测，才间接得知方块变化的发生，这是BUD和TEUD扩展纯红石系统的认知范围的原理。</p><p>TEUD主要检测容器及类容器的“内容物”发生变化。TEUD会响应箱子、熔炉、酿造台等容器的内容物信息变化。放置或破坏容器、直接取走或放入物品、通过漏斗取走或放入物品、投掷器或发射器投出物品、用其他物品替代已有物品甚至是在容器内左键或右键均会使TEUD响应。投掷器的空投、按住Shift左键或右键容器内部、打开和关闭容器、在容器内拖动左键或右键但不放开不会造成内容物的变化，TEUD不会响应。工作台、末影箱、花盆和音符盒不是容器，TEUD不会响应。</p><p>“类容器”是指类似容器的方块或实体，其没有类似箱子的GUI界面，但仍可以存储比较器可以检测的信息。其中如炼药锅、末地传送门框架等方块利用方块数据值存储信息，唱片机等方块使用方块实体值存储信息，物品展示框使用实体数据存储信息。探测铁轨可以“容纳”矿车，可以把探测铁轨也视为类容器，本小节会在最后对其进行研究。类容器方块会在被放置时产生比较器更新信号，破坏时不会产生；物品展示框在放置时不会产生比较器更新信号，破坏时会产生。</p><p>以下展示了常见的TEUD响应项：</p><ul><li>将末影之眼放入末地传送门框架</li><li>将唱片插入唱片机或从中取出</li><li>炼药锅的水位变化</li><li>在讲台上放置或取下书籍、翻书</li></ul><p>不过由于比较器本身就可以检测类容器的“内容物”变化，TEUD在这些项目的检测上并没有带来新的拓展。</p><p>TEUD和探测铁轨搭配时，会产生令人吃惊的效果：TEUD不再检测容器的内容物，转而成为一个实体检测器——当探测铁轨所在方块与某一实体碰撞箱有交集时，TEUD便会响应。因此，即使是浮空的实体也会触发TEUD。物品展示框、闪电不会使TEUD响应。如下图右侧的箭会触发TEUD，而左侧不会。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-f2c2be17.png" alt=""></p><p>如下是一个角度刁钻的例子：</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-eb1ef670.png" alt="">。</p><p>当实体与探测铁轨所在的方块接触时，实体会促使探测铁轨发出比较器更新信号，除箭外，这个信号是周期性的，但不同实体的周期不同：所有矿车的周期是20gt;物品为6gt；生物、钓鱼竿吊钩等大多数实体的周期为4gt；玩家的周期小于4gt，可以认为小于TEUD的自复位时间；箭只会在射到其上时产生1次比较器更新信号。<del>（在这一方面似乎需要更多的研究。）</del></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-1e2721d3.png" alt=""></p><h1 id="第二节-观察者"><a href="#第二节-观察者" class="headerlink" title="第二节 观察者"></a>第二节 观察者</h1><p>观察者拥有一个检测端和一个输出端，其中检测端可以检测检测面方块的方块变化。当观察者认可该方块变化时，以15强度强充能其指向，给予毗邻及指向的毗邻方块更新，脉冲长度为2gt。另外，放置观察者不会引起检测端输入。</p><p>虽然观察者的确可以对红石信号做出响应，但该响应是由于观察者检测到了方块变化，因而不认为观察者是输出元件，观察者是一个输入元件。</p><h2 id="观察者的输出特性"><a href="#观察者的输出特性" class="headerlink" title="观察者的输出特性"></a>观察者的输出特性</h2><p>观察者是一个NTE元件，优先级为0，有2gt的启动延迟，换句话说，其会在检测端输入后的第二个NTE事件开始输出信号，信号持续2gt，并在第四个NTE事件停止输出信号。在检测端输入到停止输出这段时间内，观察者无视一切方块变化。观察者开始输出信号时，先给予毗邻更新信号，随后输出15强度红石信号；结束输出信号时，先结束红石信号的输出，随后给予毗邻更新信号。<em>（有待考察）</em></p><p>观察者的一个重要特性是观察者可以被活塞推动，下面介绍观察者被活塞推动时的输出特性。</p><ul><li><strong>当观察者处于未触发态时（包括启动延迟），若观察者被活塞推动，其会将推动结束的BE事件或TE事件作为观察者的检测端输入。</strong></li><li><strong>当观察者处于触发态时，若观察者被活塞推动，其在结束推动后保持无信号输出。</strong></li></ul><p>在1.11引入观察者后，狼顾之鬼怪才（Joker_小狼）在《观察者性质总结》中率先研究了观察者的诸多性质，如下的两道例题便引自该文献。</p><p><em>例 2 计算上下路延迟，判断时序比较器的输出情况。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-1.png" alt=""></p><p><em>解：粘性活塞启动延迟1gt，观察者启动延迟2gt，因而在观察者未触发时，粘性活塞开始推动观察者。推动结束后，观察者于TE事件开始进入启动延迟，启动延迟2gt，故上路延迟5gt。下路延迟4gt，从而时序比较器激活锁定。<br>由于时序比较器在延迟相等时处于未激活锁定，这就证明了上路延迟一定大于4gt，从而说明观察者在被活塞推动结束后，启动延迟仍为2gt。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-2.png" alt=""></p><p><em>例 3 拉杆拉下后，TNT能否爆炸？为什么？</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-3.png" alt=""></p><p><em>解： 中继器延迟2gt，活塞无启动延迟，故活塞将在观察者触发的第一个BE事件推动观察者，推出结束后无信号输出，TNT不会爆炸。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-4.png" alt=""></p><p>下面介绍“脸对脸”的观察者时钟，这种时钟构造简单，在观察者被引入后得到了许多玩家的喜爱。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-5.png" alt=""></p><p>两个观察者“脸对脸”，互相检测对方的变化，两个输出端给出的是互补的，周期为4gt，占空比为50%的高频时钟信号。一般配合粘性活塞来关闭或开启这种时钟。</p><p>下面应用红石更新延迟理论对该时钟进行分析。</p><p>拉杆拉下，粘性活塞有1gt启动延迟，随后粘性活塞于BE事件伸出，左边的观察者以此为检测端输入，启动延迟为2gt。其于拉杆拉下3gt，也就是第三个NTE事件开始输出信号。粘性活塞总延迟3gt，其于第三个NTE事件后的TE事件将右边的观察者推出到位，观察者以此作为检测端输入。5gt后，左边观察者结束输出，右面观察者开始输出，由于左边观察者于3gt NTE事件进入NTE列表，右边观察者于3gt TE事件进入NTE列表，左边观察者先于右边观察者更新，因此在5gt时，左边观察者先结束输出，右边观察者后开始输出。因此右边观察者由非触发态转变为触发态的方块变化可以被左边的观察者检测到，左边观察者重新进入启动延迟。两个观察者以此往复，可以得出周期为4gt，占空比为50%的结论。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/paint1.png" alt="1-3-6 （草稿）"></p><p>一个有意思的现象是，如果第二个观察者不是由活塞推入的，而是由玩家放置的，我们可以明显觉察到时钟变慢了，而且可以观察到两个观察者同时熄灭的瞬间，此时时钟周期不再是4gt，而是更慢的6gt。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-7.png" alt="1-3-7"></p><p>下面对玩家放置的观察者时钟进行分析。</p><p>玩家放置第二个观察者后，其本身不会响应，但第一个观察者会以此为检测端输入，2gt后，更新第二个观察者，同时自身开始输出信号。4gt后，第二个观察者开始输出信号，但第一个观察者结束输出晚于第二个观察者，故第一个观察者不会响应此次方块变化，而第二个观察者此时正处于激活态，不响应第一个观察者结束输出带来的方块变化。第一个观察者会在6gt后检测到第二个观察者结束输出的方块变化，并以此往复。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/paint2.png" alt="1-3-8（草稿）"></p><h2 id="观察者的输入特性"><a href="#观察者的输入特性" class="headerlink" title="观察者的输入特性"></a>观察者的输入特性</h2><p>观察者的输入特性指的是观察者会对怎样的方块变化产生响应，亦即观察者可以检测到哪些方块变化。在1.15版本(1.13+)中观察者的输入特性较为简单，可以被总结为：</p><blockquote><p><strong>观察者检测一切方块名称和状态的变化。</strong></p></blockquote><p>在1.13的扁平化进程后，方块的英文ID被用来区分不同的方块，不同的方块一定有着不同的英文ID；方块的数据值用于区分同一方块的不同状态，如不同朝向的火把，或不同水量的炼药锅；方块的实体值用于记录方块的附加属性，如告示牌的文字，或箱子里的物品。那么，观察者检测是的英文ID的变化及方块数据值的变化。一切ID的变化或数据值的变化都能引起观察者的响应。打开F3界面可以轻易看出这一点。</p><p>从观察者的引入到特性逐渐稳定，期间经过了若干个版本，但最后的观察者所保留的特性是较为简明的，我们可以简单地理解为：</p><blockquote><p><strong>观察者并不检测方块更新信号，观察者响应方块变化。</strong></p></blockquote><p>即使如此，我们仍有必要对一些特殊的示例具体分析。</p><p>由于观察者检测的是方块变化，而非方块更新，而活塞推动方块会在开始推动时就将趋势位设置为36号方块，观察者就可以捕捉到这一变化。因此右侧的两个红石灯会同时亮起，而左侧的两个红石灯会有3gt的延迟差，这3gt相差在了前一个活塞的2gt推出延迟和后一个活塞的1gt启动延迟。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-9.png" alt="1-3-9"></p><p>投掷器和发射器以及漏斗，在F3界面的triggered或enabled数据值往往不能反映其的真实状态，需要玩家查看其内容其才能被更新到正确的值，暂不明确这是否为一个bug。但观察者可以正常检测投掷器、发射器和漏斗工作状态。特别是投掷器的空投和漏斗的锁定解锁，这是非观察者所不能检测的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-10.png" alt="1-3-10"></p><p>栅栏，红石线，拌线等方块是依据自身的方块数据值来区分自己的连接情况的，因此观察者可以检测这些方块的连接状态是否发生改变，例如下图1的装置就可以区分一个方块能否与栅栏相连接，而下图2的示例中，无论破坏哪一个红石线，观察者都会响应。<br><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-11.png" alt="1-3-11"></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-12.png" alt="1-3-12"></p><p>酿造台的数据值仅用于说明酿造台当前的瓶子数量及位置，因此观察者也只能检测这些。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-13.png" alt="1-3-13"></p><p>在1.13的扁平化进程后，树叶使用1-7的distance数据值用于标明其与最近原木的距离，这个值最大是7。同理，观察者可以检测到树叶distance数据值的变化，这一特性最早由2No2Name于2018年7月23日发现。关于观察者检测树叶，下一节会做更多详细的描述。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-14.png" alt="1-3-14"></p><p>脚手架于1.14被加入游戏，值得注意的是其拥有的两个数据值——bottom数据值和distance数据值。bottom数据值用于指示脚手架下方的方块是否能够支撑脚手架，0-7的distance数据值用于标明其累计横向拓展的距离，最大可以拓展6格，这个数据值与树叶的distance数据值具有相似的性质，但其只计量横向距离。观察者自然可以响应这两个数据值的变化。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-ee5f1bdd.png" alt=""></p><p>可含水方块拥有waterlogged数据值，水流拥有level数据值，观察者可以检测这些方块或流体的数据值变化。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-3-15.png" alt="1-3-15"></p><h1 id="第三节-方块更新信号"><a href="#第三节-方块更新信号" class="headerlink" title="第三节 方块更新信号"></a>第三节 方块更新信号</h1><h2 id="方块更新信号与方块变化的辩证关系"><a href="#方块更新信号与方块变化的辩证关系" class="headerlink" title="方块更新信号与方块变化的辩证关系"></a>方块更新信号与方块变化的辩证关系</h2><p>面对常规BUD，我们可以说某些方块变化引起了方块更新信号，从而更新常规BUD，使其响应。也可以说常规BUD检测某些相对位置上特定的方块变化，这就是方块变化与更新信号的辩证关系。实践证明这种关系在研究观察者的检测时提供了很好的思维动力。换句话讲，我们不再关心方块更新的底层实现，而只把BUD作为拓展纯红石体系认知能力的一种手段。</p><p>事实上，这种思想在输出元件的激活上也有体现，我们分别使用两种角度对待元件的激活：红石灯等较为简单地元件使用的是“红石线激活红石灯则亮起”的思路，而活塞等实则是“活塞激活位上有信号则推出”的思路。我们把这一点类比到方块更新理论中。从更新信号的角度看，是方块变化引起更新信号，不同的更新信号更新到不同类型的BUD，从而使其响应。从方块变化的角度，是不同类型的BUD检测特定的方块变化项，在属于这个特性方块变化项集合的某一个方块变化项发生时，该类型BUD响应。</p><p>那么，什么样的方块变化能够引起一类BUD的相应呢？很不幸，这两者之间没有绝对的关系。</p><p>举例来说，红石元器件所产生方块更新信号范围都较大因而产生BUD覆盖，例如红石线的强度变化，TEUD和常规BUD会有相同的响应。漏斗传输物品并不会产生方块更新，因此能被TEUD分离，而且漏斗内部的物品变更，本身就是一个方块变化，因此可以被观察者检测。投掷器的撤销激活不会产生任何方块更新或附加值更新信号，其内部的物品甚至没有变化，但是我们曾在投掷器的激活判定一节中提到：投掷器被激活后会变为激活的投掷器，撤销激活会变回。这显然是一个变化，可以用观察者检测。而中继器充能方块激活红石线的过程，实质上是中继器借助了实体方块而激活红石线，我们只把这种充能看做玩家对电路的分析方式，实体方块本身并没有什么变化，因此不会被观察者响应。</p><p>通常来说，常规BUD、TEUD、以及观察者的检测范围都是不一样的，需要根据不同的需求采取不同的检测方式。而观察者也带来了超出方块更新体系的一面，观察者作为可移动的信号方式，并且有着奇特的激活方式。这样说来，观察者是1.11加入的新方块，其具有的特殊价值，以及新的利用方式还有待玩家积极开发，观察者有着非常大的应用前景。</p><h2 id="红石线更新顺序"><a href="#红石线更新顺序" class="headerlink" title="红石线更新顺序"></a>红石线更新顺序</h2><h3 id="空间稳定性"><a href="#空间稳定性" class="headerlink" title="空间稳定性"></a>空间稳定性</h3><p>一个很无奈的事实是，如下的装置具有空间随机性，玩家无法预测装置的行为。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-d2ab6124.png" alt=""></p><p>即便如此，玩家依然尝试寻找该装置背后的规律，尤其是在活塞被引入游戏的若干年后。最简单的想法就是将上图的装置在各处测试，以期发现装置运行和位置、方向以及其他一些相关因素之间的规律。即使这样的实验很多人都做过，即便他们将控制变量法运用到精细到可怕的程度，但得到的无非是一些诸如“红石线熄灭时，大致是由远至近更新的”这样模棱两可的规律。事实是，许多人都追求理论的完整、精细甚至是复杂，但真正令人遗憾的是他们都忘记了研究应当经历一个从简单到复杂，从具体到普适的过程。在这一“竞争”现象被发现的两三年内，没有人提出应当从单个点状红石开始实验，研究方块更新产生的顺序。</p><p>然而，几个与稳定性有关的名词却伴随实验逐渐映入玩家们的眼帘，并成为了如今玩家所熟识的常识。</p><ul><li><strong>空间稳定性</strong>：如果一个装置具有空间稳定性，则意味着装置不会随位置的改变而产生不同的运行结果。大多数方块更新理论和延迟理论都是在空间稳定性的前提下进行研究的。如果某一现象不遵循空间稳定性，玩家会尝试修改装置使之成为空间稳定的装置。空间稳定性包括平移稳定性，后者指某一装置不会因平移而改变行为。除此之外，有不少装置具有方向性，即不能在旋转下保持行为不变（没有旋转稳定性）。还有一些装置会在区块的边缘运行失败。</li><li><strong>时间稳定性</strong>：如果一个装置具有时间稳定性，则意味着相同的装置在相同的位置运行，无论运行多少次，总会得到相同的结果。除了刻意被设计为具有随机性的元件（如投掷器、发射器）外，其他元件、装置、理论、Java版整体都具有时间稳定性。这是Java版和基岩版红石电路最大的不同之处——基岩版不具有时间稳定性。</li><li><strong>版本稳定性</strong>：游戏具有版本稳定性，这意味着即使是不具有空间稳定性的装置，在相同版本（包括游戏版本和Java版本）也会具有相同的表现。这说明理论对于不同计算机是普适的，因为在相同版本之下，游戏的内容和运行环境是相同的。</li></ul><h3 id="方块更新顺序"><a href="#方块更新顺序" class="headerlink" title="方块更新顺序"></a>方块更新顺序</h3><p>下面考察单个点状红石对其毗邻进行方块更新时的顺序。为了保持版本稳定性，我们使用1.15.2（至少包括1.13-1.15.2，可能包括1.5-1.15.2）和Java8。</p><p>在如下的装置中，拉下拉杆，红石线激活，开始更新活塞，而活塞激活的顺序就可以反映出红石线进行方块更新的顺序。实验证明，该装置具有平移稳定性，且在不同朝向上的运行有规律可循。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-5a572430.png" alt=""></p><p>事实上，所有方块更新（1.13后，NC更新）对毗邻进行更新的顺序都是相同的，以下称之为<strong>方块更新顺序</strong>，即：<strong>西、东、下、上、北、南</strong>，或 <strong>-X、+X、-Y、+Y、-Z、+Z</strong>，或<strong>W、E、D、U、N、S</strong>。因而如果上图面朝北方的话，总会是右手侧，即东侧活塞伸出，因为E要优先于N更新。这也是放置方块和破坏方块产生方块更新的顺序。</p><p>对于其它方向，我们可以采用处于BUD态的活塞配合命令方块来进行实验。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-d7119261.png" alt=""></p><p>红石元件通常具有较为特殊的更新范围，如下是《基础红石原理》中曾出现的一道例题，其证明中继器激活时只以指向为中心更新一阶毗邻。现在指出，这种更新也遵循上述更新顺序规律，只是唯独不更新信号的来源方向，也就是中继器本身。遗憾的是目前没有实验可以证明这一点。如果下述中继器指向东侧，那么更新顺序就是：东、下、上、北、南。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-6911cbcf.png" alt=""></p><p>红石线的更新就要复杂得多，这是因为点状红石在激活时会更新二阶毗邻，具体实现过程为将本身及一阶毗邻共七个位置作为更新源，每一个更新源都遵循如上的方块更新顺序，但七个更新源之间的先后顺序，也就是<strong>更新源顺序</strong>是随机的，这也是“红石线瞎更新”真正“瞎”的地方。</p><p><em>例 面朝北方，拉下拉杆尝试分析如下装置的运行结果。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-15797f39.png" alt=""></p><p><em>在如上的电路中，两个活塞都不处于点状红石的一阶毗邻，故我们必须考虑点状红石的七个更新源，在这里，东侧更新源可能更新到右方活塞，而北侧更新源可能更新到前方活塞。如果东侧更新源先更新，毫无疑问右方活塞先伸出；如果北侧更新源先更新，根据方块更新顺序，E将优于N，也会是右方活塞先伸出。综上所述，右方活塞先伸出</em></p><p><em>有的读者可能会有疑惑：“东侧更新源不是空气吗，难道红石信号可以穿过空气传给活塞吗”？这里必须注意，充能理论是玩家用于分析电路所提出的理论，实体方块并不存在充能态和非充能态。拉下拉杆后，不存在一个时刻之后实体方块就被充能了，而是如果活塞收到更新，其会检测自己是否应该伸出。方块更新信号并不区分实体方块或非实体方块。在这里，无论哪个更新源先更新，都是北侧实体方传递红石信号。</em></p><p>以下我们提到更新源时，会将原位更新源记作O，毗邻更新源分别记作+X、-X、+Y、-Y、+Z、-Z。希望读者不要混淆方块更新顺序和更新源顺序。</p><p>上述装置几乎具有空间稳定性，在面朝北方或南方，装置总会使右方活塞先伸出；而东方或西方也几乎是这样，只有极为特殊的几个点，会使得前方活塞先伸出。下图左侧就是一例。这暗示我们，红石线的更新源顺序还有更深层的规律可寻。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-b0dac3f9.png" alt=""></p><p>最后，实验证明，<strong>某点处红石线更新源顺序仅与该红石线所在的绝对坐标有关</strong>。</p><h3 id="红石线与哈希算法"><a href="#红石线与哈希算法" class="headerlink" title="红石线与哈希算法"></a>红石线与哈希算法</h3><p>sharir1701在2015年发表了《红石更新顺序》，指出红石线存在随机性的原因是其使用了数据结构中的HashSet，并尝试以此解释某些红石线的更新现象。</p><p>HashSet是一种哈希表（hash table），最底层是一个数组，对象可以存入其中，就像标了序号的许多格子。序号的计算需要通过散列函数，也就是通常所说的<strong>哈希函数</strong>，其可以为对象计算得出尽可能随机的哈希值，随后依据哈希值对数组长度取余得到序号，将对象存储在哈希表中。读者只需知道，这有利于对这些对象进行查找、插入和删除。</p><p>对象的哈希值仅取决于对象本身，相同的对象总会得到相同的哈希值。不同的对象也可能拥有相同的哈希值，这被称为冲突，但一般情况下这种事情发生的概率较小，在HashSet中，如果对象拥有相同序号，会被存到同一个格子中挂成一串，新加入的对象被挂在末尾。</p><p>HashSet的数组默认长度为16，当存储的对象过多时便会考虑扩列，但在存储红石线的更新源是一件模式固定且简单的事，不会扩列，本被设定为无序的HashSet也呈现出一定的规律。</p><p>在红石线更新源中，一个坐标的哈希值的计算公式由游戏决定，应用如下公式计算：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h = x + <span class="number">31</span> * (y + <span class="number">31</span> * z)</span><br></pre></td></tr></table></figure><p>通过哈希值计算坐标在数组中存储序号的公式由Java决定，应用如下公式计算：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hash = h ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">n = (length - <span class="number">1</span>) &amp; hash</span><br></pre></td></tr></table></figure><p>关于上述公式，有以下几点需要解释和注意：</p><ul><li>Java在运行时，所有数字都以二进制存储，因而有一个取值范围，也就是32个二进制位所能表示的数字。在这里可以认为取值范围是 $[0,2^{32})$ ,即0~4294967295，超出这个范围的会取余数，例如-1便会被存储为4294967295，表示为二进制就是<code>1111 1111 1111 1111 1111 1111 1111 1111</code>。</li><li>哈希值的计算仅与坐标有关，且更新源顺序仅与哈希值有关，因此<strong>某点处红石线更新源顺序仅与该红石线所在位置的哈希值有关</strong>。例如(0,64,0)处的红石线应当与(31,63,0)处的红石线有相同的表现，因为二者的哈希值相同，都是 $64\times31=1984$。</li><li>关于Java中从哈希值计算序号的具体方式将放在最后，这里只通过例子介绍序号的计算方式。如果要求的坐标为(100,64,2000)。<ul><li>首先计算哈希值，$h=100+31\times(64+31\times2000)=1924084$。</li><li>将哈希值除以65536，再求16的余数，即 $1924084=29\times65536+23540, 29=1\times16+13$，最后我们需要的就是这个13。它代表了高16位。</li><li>将哈希值对16取余数，即 $1924084=120255\times16+4$，这次需要的是4。它代表了低16位。</li><li>将刚才计算得出的两个数表示为二进制，即1101和0100，再做一次异或操作，即对应位如果相同则取0，不同则取1，最后得到1001，也就是9，这个坐标的序号就是9。</li></ul></li></ul><p><em>如果需要对理解代码的实现方式，可以阅读本条目。不要求一般的读者掌握。</em></p><ul><li><p><em><code>h &gt;&gt;&gt; 16</code>是Java中的无符号右移16位的意思，可以理解为取高的16位，如<code>1010 1010 1010 1010 1100 1100 1100 1100</code>无符号右移16位得到的结果就是<code>0000 0000 0000 0000 1010 1010 1010 1010</code>，换句话说是这个数字除以65536所得到的商。</em></p></li><li><p><em><code>^</code>是按位异或，在这里表示将哈希值和哈希值的高16位进行异或。这一操作的目的是让结果更加散列。</em></p></li><li><p><em>如前所说，存储红石线更新源是一个十分简单的模式，不会扩列，这里<code>length = 16</code>，因此<code>length - 1 = 15</code>，即二进制的<code>0000 0000 0000 0000 0000 0000 0000 1111</code>。<code>&amp;</code>是按位与，由于是对15进行按位与，也就相当于取最后四位，结果就是对16的余数。这里使用按位与运算是因为比起除法和求余数，按位与要快得多。</em></p></li></ul><p>当红石线开始更新后，游戏会将其本身放入HashSet中，再把六个毗邻放入，顺序依据游戏所指定的<strong>方向的默认顺序</strong>，即：<strong>下、上、北、南、西、东</strong>。分别计算这7个位置的哈希值，就可以得到他们在数组中的存储序号。以(100,64,2000)为例，在这里分别是</p><table><thead><tr><th>方向</th><th>更新源</th><th>序号</th></tr></thead><tbody><tr><td>原点</td><td>O</td><td>9</td></tr><tr><td>下</td><td>-Y</td><td>8</td></tr><tr><td>上</td><td>+Y</td><td>14</td></tr><tr><td>北</td><td>-Z</td><td>14</td></tr><tr><td>南</td><td>+Z</td><td>8</td></tr><tr><td>西</td><td>-X</td><td>14</td></tr><tr><td>东</td><td>+X</td><td>8</td></tr></tbody></table><p>接着，便是游戏从HashSet中取出这些位置，依次对它们的毗邻产生方块更新。取出的顺序以序号较小为优先，相同序号这以先加入者为优先（因为后加入者被挂在了同一格子的末尾）。以(100,64,2000)为例，更新顺序就是：下、南、东、原点、上、北、西。即-Y、+Z、+X、O、+Y、-Z、-X。</p><h3 id="特异点"><a href="#特异点" class="headerlink" title="特异点"></a>特异点</h3><p>读者可能注意到了，在如上所举的例子中，虽然序号给出了16个格子，但七个坐标却仅放在了序号为8、9、14三个格子中。而这还不是个别现象。97%的情况下，7个坐标仅会被存在3个格子之中。</p><p>一个点的哈希值仅由一个点的坐标确定，而一个点毗邻的六个点，坐标不过是在x，y，z三个分量上 $\pm1$罢了。体现在哈希值上，就是哈希值 $\pm1,\pm31,\pm961$罢了。很有可能的是，这7个数值拥有完全相同的高16位！这意味着在进行得出序号的异或操作时，它们很有可能是在和相同的高16位进行异或运算，而我们知道 $x+31(y+31z)\equiv x-(y+31z)\equiv x-y+z(\text{mod}\quad16)$，这就意味着具有相同$x-y+z$值的坐标很有可能就被存储在同一个格子之中！</p><p>sharir1701注意到了这一点，其后Earthcomputer在2018年发布了《红石粉更新顺序》（Redstone Dust Update Order），其与WARBEN和KaptainWutax指出，将七个坐标分为具有相同$x-y+z$值的三组是可行的，原点独自成组，-Y、+Z、+X一组，而+Y、-Z、-X一组。组间的顺序难以捉摸，但组内总存在先后顺序，这一顺序是由坐标加入HashSet的顺序决定的。</p><p>Earthcomputer还指出，这一规律成立的概率大约是97%，这一数字可以这样估算：如果异或时高16位不同，最有可能是+961和-961除以65536得到的商不同，这意味着在这1922的跨度里横跨了65536的边缘。考虑到哈希值计算的散列性，这一现象发生的概率大致是 $\dfrac{1922}{65536}\approx2.9%$，那么规律生效的概率大约为 $97%$ 了。</p><p>此外，也容易得出，如果一个点是规律失效点<del>特异点</del>，那么其南北两格之外就不可能是失效点了，但东西方向可能有几百格甚至上千格都是规律失效点。规律失效点的分布在局部上并不均匀。</p><p>下图面朝西方，第四列的红石全部处于特异点。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-e31cf0cf.png" alt=""></p><p>KaptainWutax随后穷举了哈希值的取值范围，给出了如下的表格（部分）：</p><table><thead><tr><th>更新源顺序</th><th>概率</th></tr></thead><tbody><tr><td>-Y, +Z, +X, O, +Y, -Z, -X</td><td>24.267%</td></tr><tr><td>+Y, -Z, -X, O, -Y, +Z, +X</td><td>24.267%</td></tr><tr><td>O, -Y, +Z, +X, +Y, -Z, -X</td><td>12.133%</td></tr><tr><td>O, +Y, -Z, -X, -Y, +Z, +X</td><td>12.133%</td></tr><tr><td>-Y, +Z, +X, +Y, -Z, -X, O</td><td>12.133%</td></tr><tr><td>+Y, -Z, -X, -Y, +Z, +X, O</td><td>12.133%</td></tr><tr><td>其余每项</td><td>&lt; 0.2%</td></tr></tbody></table><p>附加结论是，Y坐标先更新的概率高达72.8%，而X坐标不可能最先更新。</p><p>笔者随后穷举了-2048 ~ 2048，0 ~ 256，-2048 ~ 2048范围内的全部方块，结果如下（部分）：</p><table><thead><tr><th>更新源顺序</th><th>概率</th></tr></thead><tbody><tr><td>-Y, +Z, +X, O, +Y, -Z, -X</td><td>24.242%</td></tr><tr><td>+Y, -Z, -X, O, -Y, +Z, +X</td><td>24.243%</td></tr><tr><td>O, -Y, +Z, +X, +Y, -Z, -X</td><td>12.161%</td></tr><tr><td>O, +Y, -Z, -X, -Y, +Z, +X</td><td>12.123%</td></tr><tr><td>-Y, +Z, +X, +Y, -Z, -X, O</td><td>12.161%</td></tr><tr><td>+Y, -Z, -X, -Y, +Z, +X, O</td><td>12.123%</td></tr><tr><td>其余每项</td><td>&lt; 0.2%</td></tr></tbody></table><h3 id="方块更新和深度优先"><a href="#方块更新和深度优先" class="headerlink" title="方块更新和深度优先"></a>方块更新和深度优先</h3><p>下面介绍存在多个红石线时的更新规律。拉下拉杆。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-151f8e8b.png" alt=""></p><p>拉杆的充能范围是附着，更新范围是本身的毗邻外加附着的毗邻。这其中包含了第一格红石线，那么拉杆的更新会被暂时中断，待到第一格红石完成之后才会继续完成拉杆剩余的更新。同理，如果一个方块的更新波及到了另一个方块的更新，那么原方块的更新进程会中断，待后一个方块更新完成后才会继续完成原方块剩余的更新，而后一个方块又有可能波及到再其他的方块，于是更新就又深了一层。这一个过程被称为深度优先。</p><p>所以拉杆可能会在所有红石线更新完成之后才会结束它的更新，但由于其没有什么别的可以更新的方块，因此我们忽略这些无用的更新。</p><p>第一格红石线亮起，开始更新，创建7个更新源。这时我们不知道具体的更新源顺序，所以有可能是第三格红石线先受到更新，也有可能是第二格红石线先受到更新。但即使第三格红石线先被更新，其也不能激活，因为第二格红石线尚未亮起，第三格红石线没有信号。所以第一格红石线一定会让第二格红石线亮起，此后第二格红石线又会让第三格亮起，第三格红石线激活活塞，让其进入启动延迟。随后，再完成所有红石线和拉杆无用的更新。</p><p>熄灭时的过程要复杂一些，拉杆更新到第一格红石线，第一格红石线意识到自己没有来自拉杆的能量了，但其并不会简单地将信号强度降为0，而只是减一变为14，因为其认为第二格红石线仍可以给它供给能量！</p><p>在经历复杂的更新之后，其会更新到第二格红石线，而第二格红石线又会认为第一格和第三格红石线会给它供给信号，所以也只是减一。所以红石线将会经历从自身强度到0之间的每一个信号强度，带来大量重复无用的更新。</p><p>panda4994解释了为何红石线会产生如此多的无用更新，并尝试从修改游戏代码的角度解决这一问题，这里不多赘述。</p><h2 id="线路稳定性"><a href="#线路稳定性" class="headerlink" title="线路稳定性"></a>线路稳定性</h2><p>接下来，Earthcomputer尝试根据如上得到的结论，解决空间随机性的问题。</p><p>首先解释如下的电路为何会具有空间随机性。这里我们假定面朝北方，其他朝向的分析是类似的，请读者自行完成。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-d6899383.png" alt=""></p><p>拉杆更新到其附着方块上的红石线（记为中心），其激活，产生七个更新源，但二阶毗邻的位置即使可以更新到红石线也不会激活，因为没有能量。最后只有原位的更新源可以激活西一或者东一红石线，具体的顺序要依据方块更新顺序。</p><p>面朝北方，W优先于E，西侧先更新，西一红石线激活，产生七个更新源。这里需要着重注意的是O更新源（位于西一）和+X更新源（位于中心）。如果原位更新源先更新，其会更新到西二红石线，深度优先会使得左侧活塞先伸出；如果东侧更新源先更新，其会更新到东一红石线，深度优先会使得右侧活塞先伸出。那么关键就在于西一红石线的更新源顺序。也就是O和+X的更新顺序。这无法比较，且可以认为有50%概率左侧伸出，50%的概率右侧伸出。</p><p>如果希望左侧活塞先伸出，那么就要O先于+X更新。这很难做到，因为二者不在同一个组中。不能期望O优先于+X更新，但-Y优先于+X。将西二红石线降低一格，就可以让-Y更新到它，这样就在97%的程度上解决了这一问题。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-e112b9f0.png" alt=""></p><p>在之前的论述中，我们证明了，特异点哈希值相差1922及以上的点就不可能是特异点，换句话说特异点南北两格之外不可能是特异点。现在电路就被修改成了如下的状态。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-56ed3f3f.png" alt=""></p><p>拉杆拉下，红石线激活，向前传递，在第一个分叉处，W优先于E，信号进入第一个可能是特异点的淡蓝色混凝土。如果其不是特异点，-Y优先于+X，深度优先使得红石信号一路向左，激活左侧活塞。但如果其是特异点，就不能保证-Y优先于+X。现在假设+X先更新，那么信号向前，到达第二个分叉，W优先于E，信号进入第二个淡蓝色混凝土，但事实上它不可能是特异点了，因为它们哈希值相差了2882,。在这里，-Y优先于+X，信号还是会优先向左传递，依然是左侧活塞先伸出。这样就100%地解决了这一问题。</p><p>如下是另一种通用的解决案。第一个分叉点处，淡蓝色混凝土上的红石线开始更新时，我们期望它向西传递信号，但更新仍然有可能跳到分叉点以北，且-Z和+X的更新源都有可能先更新。为了解决这一问题，有必要同时动用-Y和+Y这两个组内优先级较高的方向，最后的结论也就如下图了。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-649c20a1.png" alt=""></p><p>如何让右侧活塞先伸出？这就要求+X优先于O先更新，这难度更大。所以我们被迫放弃在左一红石线上解决这一问题，将视线放回中心红石线，尝试让右一红石线先更新，并让右一红石线先更新右侧，这就必须取消左一红石线，同时根据方向使用+Y或者-Y。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-f7407b5b.png" alt=""></p><p>将左一红石线放到北侧（北一位置），现在E优先于N，淡蓝色混凝土上的红石线先更新。从该位置跳到北一位置可以通过-X更新源和-Z更新源，好在+Y优先于这二者。将东二红石线抬高一格，就在97%程度上解决了这一问题。</p><p>如果要100%解决这一问题，还需要增加一条线路，解决案如下。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-4c364271.png" alt=""></p><p>至此，我们就完成了所有红石线更新的内容。</p><h2 id="NC更新与PP更新（还没写）"><a href="#NC更新与PP更新（还没写）" class="headerlink" title="NC更新与PP更新（还没写）"></a>NC更新与PP更新（还没写）</h2><h2 id="更新抑制（还没写）"><a href="#更新抑制（还没写）" class="headerlink" title="更新抑制（还没写）"></a>更新抑制（还没写）</h2><h1 id="第四节-漏斗理论"><a href="#第四节-漏斗理论" class="headerlink" title="第四节 漏斗理论"></a>第四节 漏斗理论</h1><h2 id="漏斗概述"><a href="#漏斗概述" class="headerlink" title="漏斗概述"></a>漏斗概述</h2><p>漏斗是于1.5版本中加入的红石输出元件，其具有5格的存储空间。漏斗的主要功能被称为漏斗的输出特性，简述如下：</p><ul><li>将其上1×1×1范围内的物品实体吸入自己的存储空间。</li><li>漏斗可以从上方的容器中抽取物品，如果漏斗上方有容器，漏斗不再尝试吸入物品实体。</li><li>漏斗可以将存储空间中的物品，传输至自己指向的容器中。漏斗的指向只能是下方或四周，因此只用漏斗是不可能将物品向上传递的。</li></ul><p>当漏斗被激活时，称漏斗被“锁”住，此时失去如上的功能。漏斗被激活时可以发生变化，因此是一个输出元件。</p><p>能与漏斗进行互动的容器或类容器有包括：</p><ul><li>箱子和陷阱箱，但不包括末影箱，漏斗能简单地从箱子中取出，或放入物品。</li><li>发射器、投掷器、末影盒。</li><li>箱子矿车、漏斗矿车。（尽管它们是实体而非方块）</li><li>熔炉，在熔炉上方并指向熔炉的漏斗会将物品输入到待烧炼的物品格，在侧面并指向熔炉的漏斗会将物品输入到燃料的物品格，在熔炉下方的漏斗会将物品从成品的物品格中取出，不过，当使用岩浆桶作为燃料时，漏斗也可以将空桶取出。</li><li>酿造台，漏斗可以向酿造台中输入水瓶、烈焰粉及酿造原料，同时也会将药水取出，不过值得注意的是只要输出栏中有药水，无论酿造是否完成，漏斗都会直接取出。</li><li>其他漏斗，漏斗也可以将物品输入其他漏斗，或是从其他漏斗中将物品取出，两个漏斗可以同时进行自己的工作，相互独立。</li></ul><p>漏斗具有很多功能，而这些功能在实现时需要运算，也就会带来卡顿。激活漏斗可以禁用漏斗的一切功能，此时卡顿最小 <del>（有待考据）</del>。如果某些漏斗仅用作物品传输而非吸入物品，或不希望杂物导入物品中，可以在漏斗上放置容器，此时漏斗不再尝试吸入物品。但多放置的容器也会带来一定的卡顿，因为此时不仅漏斗要尝试从容器中取出物品，熔炉等方块还会尝试是否开始燃烧，选择合适的容器是有必要的。漏斗上的容器物品格数越少，漏斗取出物品时检测越少，卡顿也就越小，因此投掷器优于小箱子，后者又优于大箱子。熔炉、炼药台等容器物品栏较为特殊，需要特殊处理，最终效果与投掷器类似。堆肥桶没有物品栏，漏斗直接检测堆肥桶的方块数据值，带来的卡顿是极小的，这也是目前最合适的放置在漏斗上用于减小卡顿的类容器。</p><p>漏斗的延迟是8gt，这是一个值得记忆的数据，这一延迟限制了物品在漏斗内的传输速率，换算成常用单位，也就是2.5物品每秒，或150物品每分钟，或9000物品每小时。</p><p>漏斗是一个方块实体，统一在Tile Entity事件更新，同一游戏刻内的更新顺序取决于加载顺序，如玩家先放置的漏斗总先更新。必须注意的是区块重载会破坏已有的加载顺序，重载的顺序具有随机性。</p><h2 id="即时更新理论对漏斗的修正"><a href="#即时更新理论对漏斗的修正" class="headerlink" title="即时更新理论对漏斗的修正"></a>即时更新理论对漏斗的修正</h2><p>Sancarn和Selulance尝试将漏斗纳入即时更新理论的范畴。</p><p>必须研究漏斗对于不同同步性的下降沿信号，将物品开始漏下需要多久的延迟。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-36edd094.png" alt=""></p><p>事实证明，对大部分信号，漏斗是一个同步元件，延迟为1pt。这意味着漏斗和活塞类似，有着1pt的固定延迟。</p><p>接下来，必须研究比较器从漏斗中读取有信号时，漏斗作为输入元件的同步性。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-7c0a0eb0.png" alt=""></p><p>事实证明，漏斗也是一个同步性输入元件，其会减少比较器的1pt延迟。</p><p>然而漏斗并非是严格意义上的同步元件。换句话说，同步信号会减少非同步元件的1pt延迟，但不会对同步信号产生影响，漏斗却会被优先的几种同步信号减少1pt延迟，且这些同步信号总与实体有关，如掉落沙。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-c7777872.png" alt=""></p><p>可以预料到，掉落沙这种同步性输入方式会使得漏斗的延迟减少1pt，从而是无延迟的。这意味着上下两路都仅花费1pt，活塞同时收回。</p><p>Sancarn和Selulance所做的诸多实验都指向一个事实，漏斗既非如中继器、比较器一类的非同步元件，又非如活塞一类的同步元件。漏斗更新的位置介于Block Event和下一游戏刻的Next Tick Entry之间，而掉落沙实验证明，漏斗更新的位置位于Entity Update之后。这与我们在《基础红石原理》中认识到的更新顺序一致。</p><p>漏斗在Tile Entity事件工作，当漏斗被撤销激活时，会立即在下一个Tile Entity事件漏下一个物品，不过在时间轴顺序中，Tile Entity事件离活塞刻节点非常接近，因此大部分激活方式在更新到漏斗前都要先经过一个活塞刻节点，因此大部分激活方式都会使漏斗产生1pt的延迟。不过仍然有一小部分时间介乎于活塞刻节点与Tile Entity事件，Entity Update事件就是这样的。Entity Update事件提供信号下降沿时，按照更新顺序，漏斗会在下一个Tile Entity事件漏下物品，而没有跨过活塞刻节点，这就出现了我们上述实验中漏斗延迟消失的现象。</p><p>这是一个具有启示意义的结论，因为我们知道玩家的活动是在Network Update事件进行更新，而其他实体的更新是在Entity Update事件，因此，利用漏斗，便可以做到检测一个实体是否是玩家。</p><p>同样的事情也发生在上升沿，也就是说，只要漏斗被撤销激活，总会在下一个Tile Entity事件处理第一个物品，无论是取出、漏下、吸入物品。因此对于大部分输入方式，漏斗具有同步性，延迟为1pt，对少部分事件，漏斗没有延迟。而使用比较器检测漏斗时，无论是检测上升沿、下降沿，或是检测漏斗本身、上方的容器、指向的容器，信号都是同步的，比较器延迟恒为1pt，并输出一个在Next Tick Entry事件的非同步信号。</p><p>以上结论只适合于漏斗处理第一个物品，当漏斗持续地工作时，延迟为8gt。</p><h2 id="漏斗理论"><a href="#漏斗理论" class="headerlink" title="漏斗理论"></a>漏斗理论</h2><p>事实是，漏斗和中继器等NTE元件有着类似的工作方式，漏斗有着8的冷却值倒计时，这和中继器有着2、4、6、8的冷却值倒计时类似。每游戏刻的Tile Entity事件，漏斗的冷却值倒计时都减少1，接着漏斗都要检查自己的冷却值倒计时，为0时尝试处理物品，并在处理成功时将冷却值倒计时重设为8，否则没有任何响应。中继器只会在激活与撤销激活时使用它的冷却值倒计时，而漏斗无时不刻运行着它的倒计时。</p><p>当漏斗的冷却值倒计时为0，但漏斗没有物品可供处理时，漏斗不会将冷却值倒计时设为8而是保持在0，这意味着漏斗会在之后的每一个Tile Entity事件尝试处理物品，包括漏下、取出或吸入物品。</p><p>很明显，这个新的理论是兼容漏斗被撤销激活时的行为的，因为漏斗冷却值倒计时为0时，自然是在下一个Tile Entity事件立即尝试处理物品。</p><p>通过漏斗理论，我们可以解释如下的现象：漏斗内物品的流动情况与两个漏斗的放置顺序有着一定区别。现在在上方漏斗放入一定量的物品。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-c71e1370.png" alt=""></p><p>当下方漏斗先被放置时，其首先更新。下方漏斗内没有物品，其取出上方漏斗的一个物品。紧随其后，上方漏斗将物品送入下方漏斗。整体效果就是每8游戏刻上方漏斗减少2个物品。</p><p>当上方漏斗先被放置时，其首先更新，将物品送入下方漏斗，而下方漏斗会因此将冷却倒计时重置为8，在这一游戏刻中，冷却倒计时被减少为7。7gt后，下方漏斗将其中的物品放入箱子，再将一个物品从上方取出。8gt时，上方漏斗再将一个物品放入下方漏斗之中。因此物品虽然也是两个两个向下流的，但这两个物品间存在1gt的时间差。这就是说，如果漏斗将物品送入一个空漏斗，该空漏斗将物品送出需要7gt。</p><p>《基础红石原理》对漏斗时钟有了初步的介绍，下面有必要详细计算漏斗时钟的周期。</p><p>如下是一个尚未放入物品的漏斗时钟。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-cbb27eda.png" alt=""></p><p>现在假设漏斗时钟中有一个物品在流动。当漏斗将左侧物品送入右侧，7游戏刻时右侧漏斗将物品漏回左侧。同理，14游戏刻时物品再次送往右侧，周期为14gt。</p><p>现在假设漏斗时钟中有两个物品在流动，左侧和右侧漏斗各有一个物品，红石块锁住右侧漏斗，现在左侧漏斗将物品送入右侧漏斗，左侧漏斗内空。2gt后，比较器熄灭，活塞开始推出，红石块位置移动，右侧漏斗会在这一游戏刻将物品送回左侧漏斗，第二个物品则需要8gt。同理，恢复原位需要同样的10gt，总延迟为20gt。</p><p>当漏斗内物品多于2个时，计算就和两个相同了。除了移走红石块同时流入的物品，其他物品都需要8gt来传输，比较器则需要2gt，当漏斗内共有n（n&gt;1）个物品时，漏斗时钟的周期为16n-12 gt。以此计算，单个漏斗时钟所能达到的周期最长是255.4秒。</p><p>除了漏斗时钟外，另外一种常用的时钟是漏斗链时钟。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-3af5cef5.png" alt=""></p><p>漏斗链时钟最大的特点在于无论不会因输入控制而产生混乱，因为拉杆仅控制一个漏斗的激活状态。拉杆拉回时，物品在漏斗链中循环，拉杆拉下时，物品会在若干游戏刻后被锁在开关控制的漏斗中。而下面的中继器时钟虽然拥有相同的周期和相近的占空比，但想做到这一点就比较困难了。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-2d1b5bbc.png" alt=""></p><p>漏斗链时钟中，大多数漏斗都是空着的，这意味着漏斗可以在接收到物品的同一游戏刻进行一次更新，随后7游戏刻将物品送入下一漏斗。对n的漏斗的漏斗链时钟，周期为7n gt。</p><p>漏斗移位器的原理与漏斗链时钟类似，向被锁住的漏斗链中输入短负脉冲，这一信号仅允许物品移动一个漏斗，从而达到移位的功能。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-002411ca.png" alt=""></p><h1 id="第五节-0t脉冲"><a href="#第五节-0t脉冲" class="headerlink" title="第五节 0t脉冲"></a>第五节 0t脉冲</h1><h2 id="0t脉冲的细化"><a href="#0t脉冲的细化" class="headerlink" title="0t脉冲的细化"></a>0t脉冲的细化</h2><p>《基础红石原理》介绍了若干短脉冲，主要侧重于短脉冲作用于粘性活塞的若干情形，下面对0t脉冲进行细化。</p><p>在一个标准游戏刻中，选取不同的事件充当上升沿和下降沿，就可以获得不同类型的短脉冲。除去Network Update事件，分别以其余五个事件作为上升沿和下降沿，便可以得到25种0t脉冲。这里的0t脉冲是相较于标准游戏刻长度而言的，有些0t脉冲甚至跨过了游戏刻节点，也可以被称为1gt脉冲；而有些0t脉冲由于无法使活塞响应，也可以被称为短0t脉冲。0t脉冲就是这样的一个种类丰富的大家族。</p><p>不同元件对不同0t脉冲会有不同的反应，在《基础红石原理》中我们就已经认识到，中继器总会响应0t脉冲，无论它有多短；而比较器和红石火把则会在点亮前先检测是否仍有信号，否则不会亮起；活塞顺推的延迟取决于经过的Block Event事件个数。举例来说，NTE-TE的0t脉冲使得粘性活塞在本游戏刻的Block Event事件开始伸出，下一游戏刻的Block Event事件伸出完成，也就是1pt顺推；NTE-BE的0t脉冲使得粘性活塞在本游戏刻的Block Event事件开始推出并推出完成，也就是0t顺推；而NTE-NTE的0t脉冲不经过Block Event事件，活塞不会响应。</p><p>红石线、动力铁轨、活板门、栅栏门等方块都是即时响应的，同时游戏总会播放栅栏门等开关的音效，但游戏会渲染其是否亮起或是否打开则是在Block Event事件之前，换句话说如果希望红石线闪烁或栅栏门打开，所使用的的0t脉冲就必须经过Block Event事件之前，如NTE-BE脉冲或NTE-TE脉冲，而BE-BE脉冲就不能让红石线闪烁。这一点至少对于1.12-1.13是成立的。<del>（在1.15中似乎在NTE前更新，有待考据）</del></p><p><em>例 分析如下的短脉冲发生器，按下按钮，判断中继器和粘性活塞的响应情况。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-406d1ed2.png" alt=""></p><p><em>很明显，这是一个NTE-BE脉冲，中继器响应，粘性活塞0t顺推。</em></p><p><em>例 分析如下的短脉冲发生器，拉回拉杆，判断中继器和粘性活塞的响应情况。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-e320c52d.png" alt=""></p><p><em>很明显，这是一个TE-NTE脉冲，中继器响应，粘性活塞无响应。</em></p><p>Defanive中继器也可以用于制作短脉冲发生器，拉下拉杆，Defanive中继器给出NTE-BE短脉冲，随后信号常亮。如果只需要NTE-BE短脉冲，可以考虑输入一个短脉冲。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-f1c22351.png" alt=""></p><p>pi314159265358978串联了多个Defanive中继器，并说明这种NTE-BE短脉冲可以通过如下的装置。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-47a04b76.png" alt=""></p><h2 id="活塞更新深度"><a href="#活塞更新深度" class="headerlink" title="活塞更新深度"></a>活塞更新深度</h2><p>由于红石线更新具有随机性，如下的装置无法准确判断拉杆拉下后的情况。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-b0a72c33.png" alt=""></p><p>但如下的装置却并非如此，两个面对面的活塞处于BUD态，谁可以伸出取决于谁先受到更新。在拉杆拉下时，其后的四个普通活塞激活，可以确定这四个活塞从左向右更新，因此左侧活塞一定可以伸出而右侧无法伸出。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-752f76cf.png" alt=""></p><p>和NTE元件类似地，每游戏刻中的Block Event事件，所有需要更新的活塞也会被加入一个列表，但这个列表的更新顺序并不仅仅取决于活塞加入列表的顺序，还取决于活塞更新的深度。活塞更新的深度指的是从信号源到活塞间需要几个活塞作为更新，如上图后侧的四个普通活塞，深度分别为0,1,2,3。从同一0深度活塞开始更新的更高深度的活塞，深度小的一定优先于深度大的更新。这一过程被称为广度优先。</p><p>那么读者不难理解如下的装置，左侧在下降沿是一个BE-BE脉冲发生器，其下6个活塞深度从右至左分别为0,1,2,3,4,5。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-f3559190.png" alt=""></p><p>BE-BE脉冲于0深度活塞开始收回后产生，5深度活塞开始收回后结束。0深度活塞不仅会更新到1深度活塞，其还会更新到右侧的脉冲深度检测器，深度检测器中最左侧的活塞也会是1深度的，而受其影响，深度检测器中的活塞从左到右分别为1,2,3…且脉冲发生器中的各活塞优先于同深度的深度检测器中的活塞更新。因此右侧仅有深度为1-4的活塞会响应。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-94305299.png" alt=""></p><p>因此，如果希望激活下图右侧的两个活塞，左侧的短脉冲发生器需要使用4个活塞。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-669d9885.png" alt=""></p><p>并非所有BE-BE短脉冲发生器都能得到合理的深度，举例来说，如下的BE-BE短脉冲发生器就是如此。上升沿到来后，两个普通活塞深度分别为0和1，这就意味着被该短脉冲直接激活的活塞深度也为0，但一条红石线上的红石线更新顺序具有随机性，不能判断该活塞是否优先于复位的两个普通活塞先更新。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-c8bff7aa.png" alt=""></p><p>在上升沿和下降沿之间串联若干无延迟中继器便可以解决这一问题了。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-33de880b.png" alt=""></p><h2 id="超频时钟"><a href="#超频时钟" class="headerlink" title="超频时钟"></a>超频时钟</h2><p>既然存在0t脉冲，那么就一定存在20Hz的时钟，这样的时钟被称为超频时钟。超频时钟是游戏中可以获得的周期最短的时钟，一般而言只有命令方块可以在这种时钟下如期工作，中继器、栅栏门等方块可以响应这种时钟信号。</p><p>有各式各样的0t脉冲，就会有各式各样的超频时钟，而从0t脉冲发生器到超频时钟，只需要将若干短脉冲发生器错位并联而得到不同的相位，使用常规时钟驱动，保证每gt产生一次短脉冲即可。</p><p>这是一个BE-BE超频，观察者时钟周期为4gt，故需要4个BE-BE短脉冲发生器来生成超频信号，两个观察者时钟错开1gt，时钟信号又由中继器错开2gt，就得到了BE-BE超频。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-b630f9e5.png" alt=""></p><p>如下是NTE-BE超频，由于比较器不能响应过短的脉冲，这里用2挡中继器激活它们，也就用到了更多的NTE-BE短脉冲发生器。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-d218f51b.png" alt=""></p><p>如下的BE-TE超频使用了压线的思路，每个粘液块时钟每6gt会给出一个TE-BE的短负脉冲，树叶电路使得6个粘液块时钟分别相差1gt，最后按正脉冲来记，得到的就是BE-TE超频。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95/%E6%96%B9%E5%9D%97%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%BB%B6%E8%BF%9F%E7%90%86%E8%AE%BA%E7%9A%84%E6%8B%93%E5%B1%95-03284ef1.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 红石原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>点集拓扑学</title>
      <link href="/2020/03/04/%E7%82%B9%E9%9B%86%E6%8B%93%E6%89%91%E5%AD%A6/"/>
      <url>/2020/03/04/%E7%82%B9%E9%9B%86%E6%8B%93%E6%89%91%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<style>.wow{    color:red;}</style><!-- TOC --><ul><li><a href="#拓扑空间">拓扑空间</a><ul><li><a href="#度量空间">度量空间</a></li><li><a href="#拓扑空间-1">拓扑空间</a></li><li><a href="#邻域">邻域</a></li><li><a href="#导集闭集闭包内部边界">导集,闭集,闭包,内部,边界</a></li><li><a href="#基">基</a></li><li><a href="#序列">序列</a></li></ul></li><li><a href="#子空间积空间商空间">子空间、积空间、商空间</a><ul><li><a href="#子空间">子空间</a></li><li><a href="#有限积空间">有限积空间</a></li><li><a href="#商空间">商空间</a></li></ul></li><li><a href="#连通性">连通性</a><ul><li><a href="#连通空间">连通空间</a></li><li><a href="#连通空间的应用">连通空间的应用</a></li><li><a href="#局部连通">局部连通</a></li><li><a href="#道路连通空间">道路连通空间</a></li></ul></li><li><a href="#可数性公理">可数性公理</a><ul><li><a href="#可数性公理-1">可数性公理</a></li><li><a href="#可分空间">可分空间</a></li><li><a href="#lindelöff空间">Lindelöff空间</a></li></ul></li><li><a href="#分离性公理">分离性公理</a><ul><li><a href="#t_0t_1hausdorff空间">$T_0$,$T_1$,Hausdorff空间</a></li><li><a href="#正则正规t_3t_4空间">正则,正规,$T_3$,$T_4$空间</a></li><li><a href="#urysohn引理tietze扩张定理">Urysohn引理,Tietze扩张定理</a></li><li><a href="#完全正则空间tychonoff空间">完全正则空间,Tychonoff空间</a></li><li><a href="#分离性公理与子空间有限积空间商空间">分离性公理与子空间,有限积空间,商空间</a></li><li><a href="#可度量化空间">可度量化空间</a></li></ul></li><li><a href="#紧致性">紧致性</a><ul><li><a href="#紧致空间">紧致空间</a></li><li><a href="#紧致性与分离性公理">紧致性与分离性公理</a></li><li><a href="#\mathbbr^n中的紧致子集">$\mathbb{R}^n$中的紧致子集</a></li><li><a href="#其他的紧致性">其他的紧致性</a></li><li><a href="#度量空间的紧致性">度量空间的紧致性</a></li><li><a href="#局部紧致空间仿紧致空间">局部紧致空间,仿紧致空间</a></li></ul></li><li><a href="#完备度量空间">完备度量空间</a><ul><li><a href="#度量空间的完备化">度量空间的完备化</a></li><li><a href="#度量空间的完备性和紧致性baire定理">度量空间的完备性和紧致性,Baire定理</a></li></ul></li></ul><!-- /TOC --><!--拓扑学研究一般的图形:集合图形的变形:映射弹性变形:一一映射所谓相近:邻域,开集相近变相近:连续图形全等:同胚不变性:连通性,可数性分离性等拓扑学分支:点集拓扑学,代数拓扑学,微分拓扑学,几何拓扑学--><h1 id="拓扑空间"><a href="#拓扑空间" class="headerlink" title="拓扑空间"></a>拓扑空间</h1><h2 id="度量空间"><a href="#度量空间" class="headerlink" title="度量空间"></a>度量空间</h2><p>设$X$为一集合,$\rho:X\times X\rightarrow \mathbb{R}$若对$\forall x,y,z\in X$,有</p><ul><li>$\rho(x,y)\ge0$</li><li>$\rho(x,y)=0\Leftrightarrow x=y$</li><li>$\rho(x,y)=\rho(y,x)$</li><li>$\rho(x,z)\le\rho(x,y)+\rho(y,z)$</li></ul><p>称$\rho$为$X$的一个<strong>度量</strong>,$X$为带度量$\rho$的<strong>度量空间</strong>,$\rho(x,y)$称为$x,y$的<strong>距离</strong>.</p><blockquote><p>在实数集$\mathbb{R}$上,定义度量$\rho(x,y)=|x-y|$,称为实数空间.<br>在$\mathbb{R}^n$上,定义度量$\rho(x,y)=\sqrt{\sum(x_i-y_i)^2}$,称为$n$维实数空间.<br>记$\mathbb{H}=\lbrace x=(x_1,x_2\cdots)|x_i\in \mathbb{R},i\in N,\sum{x^2_i}&lt;\infty\rbrace$,$\rho(x,y)=\sqrt{\sum(x_i-y_i)^2}$,称为Hilbet空间.</p></blockquote><p>称度量空间$X$<strong>离散</strong>,如果$\forall x\in X,\exists \delta_x&gt;0,\forall y\neq x\in X,\rho(x,y)&gt;\delta_x$.有限集上的度量空间都是离散空间.</p><hr><p>设$X$为度量空间,$x\in X$,给定$\varepsilon&gt;0$,$\lbrace y\in X|\rho(x,y)&lt;\varepsilon\rbrace$称为$x$的$\varepsilon$-<strong>球形邻域</strong>,记作$B_\varepsilon(x)$或$B(x,\varepsilon)$.</p><ul><li>$x\in X$,至少有一个球形邻域,且$x$属于它的每一个球形邻域.</li><li>$x\in X$的任意两个球形邻域,存在$x$的一个球形邻域包含于二者.</li><li>若$y\in B(x)$,则$y$有一个球形邻域包含于$B(x)$.</li></ul><p>设$A$是度量空间$X$的一个子集,如果$A$中的每一点都有球形邻域包含于$A$,称$A$是度量空间的一个<strong>开集</strong>(开集是由内点组成的集合).</p><blockquote><p>实数空间中的开集是任意开区间的并集.</p></blockquote><ul><li>全集$X$和空集$\varnothing$都是开集.</li><li>开集的有限交是开集.</li><li>开集的任意并是开集.</li></ul><p>设$x\in X$,$U$是$X$的一个子集,如果存在开集$V$使得$x\in V\subset U$,则称$U$是$x$的一个<strong>邻域</strong>($x$是$U$的内点).</p><p>$U$是$x$的一个邻域的充要条件是$x$有某一个球形邻域包含于$U$.</p><hr><p>设$X$和$Y$是两个度量空间$f:X\rightarrow Y,x_0\in X$若对$f(x_0)$的任意球形邻域$B(f(x_0),\varepsilon)$,存在一个$x_0$的球形邻域$B(x,\delta)$,有$f(B(x_0,\delta))\subset B(f(x_0),\varepsilon)$,则称$f$在$x_0$处<strong>连续</strong>.若$f$在$X$内每一点连续,称$f$为一个<strong>连续映射</strong>.</p><ul><li>$f$在$x_0$连续$\Leftrightarrow$$f(x_0)$的每一个邻域的原像都是$x_0$的一个邻域.</li><li>$f$连续$\Leftrightarrow$$Y$中的每个开集的原像都是$X$中的开集.</li></ul><h2 id="拓扑空间-1"><a href="#拓扑空间-1" class="headerlink" title="拓扑空间"></a>拓扑空间</h2><p>设$X$是一非空集合,$\mathscr{T}$是$X$d的一个子集族,若满足</p><ul><li>$X,\varnothing\in\mathscr{T}$</li><li>若$A,B\in\mathscr{T}$,则$A\cap B\in\mathscr{T}$</li><li>若$\mathscr{T_1}\subset\mathscr{T}$,则$\bigcup_{A\in\mathscr{T}}A\in\mathscr{T}$</li></ul><p>则称$\mathscr{T}$是$X$的一个<strong>拓扑</strong>,$\mathscr{T}$中的元素称为开集.</p><blockquote><p>由空集和全集构成的集合$\mathscr{T}=\lbrace X,\varnothing\rbrace$称为平庸拓扑.<br>设$X$是一个非空集合,令$\mathscr{T}=P(X)$,称为离散拓扑.<br>设$X$是一个非空集合,令$\mathscr{T}=\lbrace U|U\subset X,\mathrm{card}(\bar U)&lt;\infty\rbrace\cup\lbrace\varnothing\rbrace$,称为余有限空间.<br>设$X$是一个非空集合,令$\mathscr{T}=\lbrace U|U\subset X,\mathrm{card}(\bar U)=\aleph_0\rbrace\cup\lbrace\varnothing\rbrace$,称为余可列空间.<br>设$X$是度量空间,$\mathscr{T}_\rho$为$X$中所有开集构成的子集族,称为$X$由度量$\rho$诱导出的拓扑.</p></blockquote><p>设$\mathscr{T}$是$X$的一个拓扑,若存在$X$的一个度量$\rho$使得$\mathscr{T}$是度量拓扑$\mathscr{T}_\rho$,则称$(X,\mathscr{T})$可度量化.</p><blockquote><p>$X={1,2},\mathscr{T}=\lbrace\varnothing,X\rbrace$不可度量.<br>$X={1,2},\mathscr{T}=\lbrace\varnothing,X,\lbrace1\rbrace\rbrace$不可度量.</p></blockquote><hr><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,若$Y$中每一个开集$U$的原像$f^{-1}(U)$是$X$的一个开集,则称$f$<strong>连续</strong>.</p><ul><li>恒等映射$i_X:X\rightarrow X$是一个连续映射.</li><li>若$f:X\rightarrow Y$和$g:Y\rightarrow Z$都是连续映射,则$g\circ f:X\rightarrow Z$也是连续映射.</li></ul><p>设$X$和$Y$是两个拓扑空间,如果$f:X\rightarrow Y$是一个一一映射,并且$f$和$f^{-1}$都是连续的,则称$f$为<strong>同胚映射</strong>.</p><ul><li>恒等映射$i_X:X\rightarrow X$是一个同胚映射.</li><li>若$f:X\rightarrow Y$是一个同胚映射,则若$f^{-1}:Y\rightarrow X$也是一个同胚映射.</li><li>若$f:X\rightarrow Y$和$g:Y\rightarrow Z$都是同胚映射,则$g\circ f:X\rightarrow Z$也是同胚映射.</li></ul><p>设$X,Y$是两个拓扑空间,如果存在一个同胚映射$f:X\rightarrow Y$,则称$X$与$Y$<strong>同胚</strong>,记作$X\cong Y$.</p><p><span class="wow">拓扑空间的某种性质$P$,如果为某一个拓扑空间所具有,则所有与其同胚的拓扑空间都具有,则称性质$P$为拓扑不变性质,拓扑学的中心任务就是研究拓扑不变性质.</span></p><h2 id="邻域"><a href="#邻域" class="headerlink" title="邻域"></a>邻域</h2><p>设$X$为拓扑空间,$x\in X$,如果$U$是$X$的一个子集,存在空集$V$使得$x\in V\subset U$,则称$U$是点$x$的一个邻域.点$x$的所有邻域构成的子集族称为$x$的<strong>邻域系</strong>,记作$\mathscr{U}_x$.</p><blockquote><p>$X=\lbrace1,2,3\rbrace,\mathscr{T}=\lbrace\varnothing,X,\lbrace1\rbrace\rbrace$<br>1的开邻域有$\lbrace1\rbrace,X$<br>1的邻域还有$\lbrace1,2\rbrace,\lbrace1,3\rbrace$<br>3的开邻域有$X$</p></blockquote><p>子集$U$是开集的充要条件是$U$是它的每一点的邻域.</p><p>设$X$为拓扑空间,$\mathscr{U}_x$为$x$的邻域系,则</p><ul><li>$\forall x\in X,\mathscr{U}_x\neq\varnothing$.</li><li>若$U\in\mathscr{U}_x$,则$x\in U$.</li><li>若$U,V\in\mathscr{U}_x$,则$U\cap V\in\mathscr{U}_x$.</li><li>若$U\in\mathscr{U}_x,U\subset V$,则$V\in\mathscr{U}_x$.</li><li>若$U\in\mathscr{U}_x$,则存在$V\in\mathscr{U}_x$,使得$V\subset U$,且$\forall y\in V,V\in\mathscr{U}_y$.</li></ul><p>设$X$是一个非空集合,又设出每一点$x\in X$的一个子集族$\mathscr{U}_x$满足如上定理的若干条性质,则$X$有唯一一个拓扑$\mathscr{T}$使得对每一点$x$,$\mathscr{U}_x$恰是$x$在拓扑空间中的邻域系.可以证明$\mathscr{T}=\lbrace U|U\in\mathscr{U}_x,\mathrm{if}:x\in U\rbrace$.</p><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,若$f(x)$的每一个邻域$U$的原像$f^{-1}(U)$是$X$的一个邻域,则称$f$于$x$<strong>连续</strong>.</p><ul><li>恒等映射$i_X:X\rightarrow X$在任意点$x\in X$连续.</li><li>若$f:X\rightarrow Y$在点$x\in X$处连续,$g:Y\rightarrow Z$在点$g(x)$处连续,则$g\circ f:X\rightarrow Z$在点$x$处连续.</li></ul><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,则映射$f$连续当且仅当其在每一点处连续.</p><h2 id="导集-闭集-闭包-内部-边界"><a href="#导集-闭集-闭包-内部-边界" class="headerlink" title="导集,闭集,闭包,内部,边界"></a>导集,闭集,闭包,内部,边界</h2><p>设$X$是一个拓扑空间,$A\subset X$,若点$x\in X$的每一个邻域$U$中都有$A$中异于$x$的点,即$U\cap(A-\lbrace x\rbrace)\neq\varnothing$,则称$x$为集合$A$的一个<strong>聚点</strong>.$A$的所有聚点构成的集合称为$A$的<strong>导集</strong>,记作$A’$.若$x\in A$但$x$不是$A$的凝聚点,即存在$x$的某个邻域$U$使得$U\cap(A-\lbrace x\rbrace)=\varnothing$,则称$x$为$A$的<strong>孤立点</strong>.</p><ul><li>$\varnothing’=\varnothing$</li><li>若$A\subset B$,则$A’\subset B’$</li><li>$(A\cup B)’=A’\cup B’$</li><li>$(A’)’=A\cup A’$</li></ul><p>$\bar A=A\cup A’$,称为$A$的<strong>闭包</strong>.闭包都是闭集.</p><ul><li>$\bar\varnothing=\varnothing$</li><li>$A\subset \bar A$</li><li>$\overline{A\cup B}=\bar A\cup\bar B$</li><li>$\overline{\overline{A}}=\bar A$</li></ul><blockquote><p>离散空间中的单点集是开集,因而任意离散空间的自己没有聚点,从而导集为$\varnothing$.<br>平庸空间$X$中,空集没有凝聚点,导集为空集;单点集$A$的邻域为$X$,导集为$X-A$;若$A$中包含多余一个点,则$A$的导集为$X$</p></blockquote><p>设$X$为拓扑空间,$A\subset X$,若$A’\subset A$,则称$A$为<strong>闭集</strong>.$A$是闭集当且仅当$\complement A$为开集,当且仅当$A=\bar A$.$x\in\bar A$当且仅当$x$的任何一个邻域$U$都有$U\cap A=\varnothing$.</p><blockquote><p>离散空间的任何子集都是闭集.<br>平庸空间的任何非空真子集都不是闭集.<br>实数空间中的闭区间都为闭集,$(-\infty,a]$和$[b,+\infty)$和$(-\infty,+\infty)$都是闭集.</p></blockquote><p>设$X$是一个拓扑空间,记$\mathscr{F}$为所有闭集构成的族,则</p><ul><li>$X,\varnothing\in\mathscr{F}$</li><li>若$A,B\in\mathscr{F}$,则$A\cup B\in\mathscr{F}$</li><li>若$\varnothing\neq\mathscr{F}_1\subset\mathscr{F}$,则$\bigcap\limits_{A\in\mathscr{F}_1}A\in\mathscr{F}$</li></ul><blockquote><p>Cantor集是实数空间的一个闭集.</p></blockquote><p>设$X$是一个拓扑空间,记$\mathscr{F}$为所有闭集构成的族,则对于$X$的每一个子集$A$,有$$\bar A=\bigcap_{B\in\mathscr{F},B\supset A}B$$即$A$的闭包等于包含$A$的所有闭集之交,即包含这个集合的最小闭集.</p><p>设$X$是一个集合,映射$c:P(X)\rightarrow P(x)$若满足$\forall A,B\in P(X)$</p><ul><li>$c(\varnothing)=\varnothing$</li><li>$A\subset c(A)$</li><li>$c(A\cup B)=c(A)\cup c(B)$</li><li>$c(c(A))=c(A)$</li></ul><p>则称为一个<strong>闭包运算</strong>.上述四条通称Kuratovski闭包公理.</p><p>设$X$是一个集合,$c:P(X)\rightarrow P(x)$是一个闭包运算,则存在$X$的唯一一个拓扑$\mathscr{T}$,使得在拓扑空间下,对每个$A\subset X$,有$c(A)=\bar A$.即Kuratovski闭包公理与拓扑定义等价.</p><hr><p>设$X$是一个度量空间,$X$中的点$x$到非空子集$A$的距离$\rho(x,A)$定义为$\mathrm{inf}(\rho(x,y)),\forall y\in A$.</p><p>设$A$是度量空间$X$的一个非空子集,则</p><ul><li>$x\in A’\Leftrightarrow\rho(x,A-\lbrace x\rbrace)=0$</li><li>$x\in\bar A\Leftrightarrow\rho(x,A)=0$</li></ul><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,则以下条件等价</p><ul><li>$f$是一个连续映射</li><li>$Y$中的任何一个闭集$B$的原像$f^{-1}(B)$是一个闭集</li><li>对于$X$中的任何一个子集$A$,$A$的闭包的像包含于$A$的像的闭包,即$f(\bar A)\subset\overline{f(A)}$</li><li>对于$Y$中的任何一个子集$B$,$B$的闭包的原像包含$B$的原像的闭包,即$f^{-1}(B)\supset\overline{f^{-1}(B)}$</li></ul><hr><p>设$X$是一个拓扑空间,$A\subset X$,若$A$是点$x$的一个邻域,即存在空集$V$使得$x\in V\subset A$,则称$x$是集合$A$的<strong>内点</strong>.集合$A$的全部内点构成的集合称为$A$的<strong>内部</strong>,记作$A^o$.内部都是开集.</p><p>设$X$是一个拓扑空间,$A\subset X$,则$A^o=\overline{A^c}^c$,$\bar A=A^{coc}$</p><p>拓扑空间$X$的子集$A$是开集当且仅当$A=A^o$.</p><p>设$X$是一个拓扑空间,则对任意$A,B\in X$</p><ul><li>$X^o=X$</li><li>$A\supset A^o$</li><li>$(A\cap B)^o=A^o\cap B^o$</li><li>$A^{oo}=A^o$</li></ul><p>设$X$是一个拓扑空间,记$\mathscr{T}$为$X$的拓扑,则对于$X$的每一个子集$A$,有$$A^o=\bigcup_{B\in\mathscr{T},B\supset A}B$$即$A$的内部等于包含于$A$的所有空集之并,即含于这个集合的最大开集.可仿照闭包运算定义内部运算.</p><hr><p>设$X$是一个拓扑空间,$A\subset X$,$x\in X$.如果在$x$的任何邻域中既有$A$中的点又有$A^c$中的点,即有$U\cap A=\varnothing$和$U\cap A^c=\varnothing$,则称$x$是集合$A$的边界点.$A$的全体边界点构成的集合称为$A$的边界,记作$\partial A$.</p><ul><li>$\bar A=\overline{\bar A^o}=A^o\cup\partial A$</li><li>$A^o=\overline{A^c}^c=\bar A-\partial A$</li><li>$\partial A=\bar A\cap \overline{A^c}=\partial(A^c)$</li></ul><h2 id="基"><a href="#基" class="headerlink" title="基"></a>基</h2><p>设$X$是一个拓扑空间,$\mathscr{B}$是$\mathscr{T}$的一个子族,如果$\mathscr{T}$中的每一个元素(即$X$的每一个开集)都可表示成$\mathscr{B}$中某些元素的并,即$\forall U\in\mathscr{T},\exists\mathscr{B}_1\subset\mathscr{B},U=\cup_{B\in\mathscr{B}_1}B$,则称$\mathscr{B}$是拓扑$\mathscr{T}$的一个<strong>基</strong>.</p><blockquote><p>一个度量拓扑空间中的所有球形邻域是这个度量空间的一个基.<br>实数空间的所有开区间构成一个基.<br>离散空间的所有单点集构成一个基.</p></blockquote><p>设$\mathscr{B}$是拓扑空间$X$的一个开集族($\mathscr{B}\subset\mathscr{T}$),则$\mathscr{B}$是拓扑空间的一个基当且仅当对每一个$x\in X$和$x$的每一个邻域$U_x$,存在$V_X\in\mathscr{B}$使得$x\in V_x\subset U_x$.</p><p>设$X$是一个集合,$\mathscr{B}$是集合$X$的一个子集族($\mathscr{B}\subset P(X)$),有</p><ul><li>$\bigcup\limits_{B\in\mathscr{B}}B=X$</li><li>$B_1,B_2\in\mathscr{B}$,则对于任何$x\in B_1\cap B_2$,存在$B\in\mathscr{B}$使得$x\in B\subset B_1\cap B_2$</li></ul><p>则子集族$$\mathscr{T}=\lbrace U\subset X|\exists \mathscr{B}_U\subset\mathscr{B},U=\bigcup_{B\in\mathscr{B}_U}B\rbrace$$是集合$X$的唯一一个以$\mathscr{B}$为基的拓扑;反之,若$\mathscr{B}$是$X$某一个拓扑的基,则$\mathscr{B}$一定满足上述条件.</p><blockquote><p>在实数集上,$\mathscr{B}=\lbrace[a,b)|a,b\in \mathbb{R},a&lt;b\rbrace$是拓扑$\mathscr{T}_l$的基,该拓扑称为实数下限拓扑.$\mathscr{T}\subsetneqq\mathscr{T}_l$.</p></blockquote><hr><p>设$(X,\mathscr{P})$是一个拓扑空间,$\mathscr{S}$是$\mathscr{P}$的一个子族,如果$\mathscr{S}$的所有非空有限子族之交构成的集族$$\mathscr{B}=\lbrace \bigcap_{i=1}^{n}S_i|S_i\in\mathscr{S},n\in \mathbb{Z}_+\rbrace$$是拓扑$\mathscr{P}$的一个基,则称集族$\mathscr{S}$是拓扑$\mathscr{P}$的一个<strong>子基</strong>.</p><blockquote><p>实数集的一个子集族$\mathscr{S}=\lbrace(a,+\infty)|a\in \mathbb{R}\rbrace\cup\lbrace(-\infty,b)|b\in \mathbb{R}\rbrace$是实数空间的一个子基.</p></blockquote><p>设$X$是一个集合,$\mathscr{S}$是$X$的一个子集族($\mathscr{S}\subset P(X)$),若$X=\bigcup_{S\in\mathscr{S}}S$,则$X$有唯一的一个拓扑$\mathscr{P}$以$\mathscr{S}$为子基.若令$$\mathscr{B}=\lbrace \bigcap_{i=1}^{n}S_i|S_i\in\mathscr{S},n\in \mathbb{Z}_+\rbrace$$则$$\mathscr{P}=\lbrace\bigcup_{B\in\mathscr{B}_1}B|\mathscr{B}_1\subset\mathscr{B}\rbrace$$</p><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,则以下条件等价</p><ul><li>$f$是一个连续映射</li><li>$Y$中的有一个基$\mathscr{B}$,使得$\forall B\in\mathscr{B}$,原像$f^{-1}(B)$是一个开集</li><li>$Y$中的有一个子基$\mathscr{S}$,使得$\forall S\in\mathscr{S}$,原像$f^{-1}(S)$是一个开集</li></ul><hr><p>设$X$是一个拓扑空间,$x\in X$.记$\mathscr{U}_x$为$x$的邻域系.$\mathscr{U}_x$的子族$\mathscr{V}_x$若$\forall U\in\mathscr{U}_x,\exists V\in\mathscr{V}_x,V_x\subset U_x$,则称$\mathscr{V}_x$是点$x$的一个<strong>邻域基</strong>.$\mathscr{U}_x$的子族$\mathscr{W}_x$的每一个有限非空子集之交的全体构成的集族,即$$\lbrace \bigcap_{i=1}^{n}W_i|W_i\in\mathscr{W},n\in \mathbb{Z}_+\rbrace$$是$\mathscr{U}_x$的一个邻域基,则$\mathscr{W}_x$是$x$的一个<strong>邻域子基</strong>.</p><blockquote><p>度量空间某个点的全体球形邻域是这个点的一个邻域基.<br>度量空间某个点的全体有理数半径球形邻域是这个点的一个邻域基.</p></blockquote><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,$x\in X$,则以下条件等价</p><ul><li>$f$在点$x$处连续</li><li>$f(x)$有一个邻域基$\mathscr{V}_{f(x)}$,使得$\forall V\in\mathscr{V}_{f(x)}$,原像$f^{-1}(V)$是一个邻域</li><li>$f(x)$有一个邻域子基$\mathscr{W}_{f(x)}$,使得$\forall V\in\mathscr{W}_{f(x)}$,原像$f^{-1}(W)$是一个邻域</li></ul><p>设$X$是一个拓扑空间,$x\in X$,则</p><ul><li>若$\mathscr{B}$是$X$的一个基,则$\mathscr{B}_x=\lbrace B\in\mathscr{B}|x\in B\rbrace$是点$x$的一个邻域基</li><li>若$\mathscr{S}$是$X$的一个子基,则$\mathscr{S}_x=\lbrace S\in\mathscr{S}|x\in S\rbrace$是点$x$的一个邻域子基</li></ul><h2 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h2><p>设$X$为一个拓扑空间,映射$S:\mathbb{Z}_+\rightarrow X$叫做$X$的一个<strong>序列</strong>,记作$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$.</p><p>设$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$是拓扑空间$X$的一个序列,$x\in X$.若对$x$的每一个邻域$U$,存在$M\in \mathbb{Z}_+$,当$i&gt;M$时有$x_i\in U$,则称点$x$是序列$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$的一个<strong>极限点</strong>,记作$\lim\limits_{i\rightarrow\infty}x_i=x$.如果序列至少有一个极限,称序列<strong>收敛</strong>.</p><p>设$X$是一个拓扑空间,$S,S_1:\mathbb{Z}_+\rightarrow X$是$X$中的两个序列.如果存在一个严格递增的映射$N:\mathbb{Z}_+\rightarrow \mathbb{Z}_+$,使得$S_1=S\circ N$,则称$S_1$是$S$的一个<strong>子序列</strong>,记作$\lbrace x_{N(i)}\rbrace_{i\in \mathbb{Z}_+}$.</p><p>$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$是拓扑空间$X$的一个序列,则</p><ul><li>若$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$是一个常值序列,即对于某个$x$,有$x_i=x,i\in \mathbb{Z}_+$,则$\lim\limits_{i\rightarrow\infty}x_i=x$</li><li>若$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$收敛于$x\in X$,则$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$的每一个子序列都收敛于$x$.</li></ul><p>设$X$是一个拓扑空间,$A\subset X,x\in X$.如果有一个序列$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$在$A-\lbrace x\rbrace$中,并收敛于$x$,则$x$是$A$的一个聚点.反之则不然.</p><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$,则</p><ul><li>如果$f$在点$x_0\in X$处连续,则$X$中的一个序列$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$收敛于$x_0$蕴含$Y$中的序列$\lbrace f(x_i)\rbrace_{i\in \mathbb{Z}_+}$收敛于$f(x_0)$</li><li>若$f$连续,则$X$中的一个序列$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$收敛于$x\in X$蕴含$Y$中的序列$\lbrace f(x_i)\rbrace_{i\in \mathbb{Z}_+}$收敛于$f(x_0)$</li></ul><p>逆命题不成立.</p><p>设$X$是一个度量空间,$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$是$X$中的一个序列,$x\in X$,则以下条件等价:</p><ul><li>序列$\lbrace x_i\rbrace_{i\in \mathbb{Z}_+}$收敛于$x$</li><li>$\forall\varepsilon&gt;0,\exists N\in \mathbb{Z}_+,\forall i&gt;N,\rho(x_i,x)&lt;\varepsilon$</li><li>$\lim\limits_{i\rightarrow\infty}\rho(x_i,x)=0$</li></ul><h1 id="子空间、积空间、商空间"><a href="#子空间、积空间、商空间" class="headerlink" title="子空间、积空间、商空间"></a>子空间、积空间、商空间</h1><h2 id="子空间"><a href="#子空间" class="headerlink" title="子空间"></a>子空间</h2><p>设$(X,\rho)$为一个度量空间,$Y$是$X$的一个子集,$\rho|_{Y\times Y}$称为$\rho$诱导出来的度量,$(Y,\rho)$称为$(X,\rho)$的<strong>度量子空间</strong>.</p><blockquote><p>实数空间的子集如$(a,b)$,$(a,b]$,$[a,b]$等是度量子空间.<br>$n+1$维空间中的欧式球面.<br>$n$维开球,$n$维闭球等.</p></blockquote><p>设$Y$是度量空间$X$的度量子空间,则$Y$的子集$U$是$Y$的开集当且仅当存在一个$X$中的开集$V$使得$U=V\cap Y$.</p><p>设$Y$是拓扑空间$(X,\mathscr{T})$的子集,则集族$\mathscr{T}|_Y$是$Y$的一个拓扑,称为<strong>相对拓扑</strong>,$Y$是$X$的<strong>拓扑子空间</strong>.$\mathscr{T}|_Y$表示$\lbrace Y\cap T|T\in \mathscr{T}\rbrace$称为$\mathscr{T}$在$Y$上的<strong>限制</strong>.</p><p>设$Y$是度量空间$X$的度量子空间,则$Y$作为拓扑空间也是拓扑空间$X$的拓扑子空间.</p><p>设$Y$是拓扑空间$X$的子空间,设$Z$是拓扑空间$Y$的子空间,则设$Z$是拓扑空间$X$的子空间.</p><hr><p>设$Y$是拓扑空间$X$的子空间,$y\in Y$</p><ul><li>记$\mathscr{T}$和$\tilde{\mathscr{T}}$为$X$和$Y$的拓扑,则$\tilde{\mathscr{T}}=\mathscr{T}|_{Y}$</li><li>记$\mathscr{F}$和$\tilde{\mathscr{F}}$为$X$和$Y$的全体闭集族,则$\tilde{\mathscr{F}}=\mathscr{F}|_{Y}$.</li><li>记$\mathscr{U}_y$和$\tilde{\mathscr{U}_y}$为$y$在$X$和$Y$的邻域系,则$\tilde{\mathscr{U}}=\tilde{\mathscr{U}_y}$</li></ul><p>设$Y$是拓扑空间$X$的子空间,$A\subset Y$</p><ul><li>$A$在$Y$中的导集$d_Y(A)$是$A$在$X$中的导集与$Y$的交.</li><li>$A$在$Y$中的闭包$c_Y(A)$是$A$在$X$中的闭包与$Y$的交.</li></ul><p>设$Y$是拓扑空间$X$的子空间,$y\in Y$</p><ul><li>如果$\mathscr{B}$是$X$的一个基,则$\mathscr{B}|_{Y}$是$Y$的一个基.</li><li>如果$\mathscr{V}_y$是$y$在$X$的一个邻域基,则$\mathscr{B}_y|_{Y}$是$y$在$Y$的一个邻域基.</li></ul><hr><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$如果它是一个单射,并且是从$X$到它的像集$f(X)$的一个同胚,称为一个<strong>嵌入</strong>,此时称$X$可嵌入$Y$.($Y$与$X$的某个子空间同胚,$Y$在同胚意义下是$X$的子空间)</p><blockquote><p>含有多余一个点的离散空间不可能嵌入到任何一个平庸空间去,前者不可度量,后者可度量.<br>含有多余一个点的平庸空间不可能嵌入到任何一个离散空间去,前者不可度量,后者可度量.</p></blockquote><h2 id="有限积空间"><a href="#有限积空间" class="headerlink" title="有限积空间"></a>有限积空间</h2><p>设$(X_1,\rho_1),(X_2,\rho_2),\cdots,(X_n,\rho_n),n\ge1$为度量空间,令$X=X_1\times X_2\times\cdots\times X_n$,定义$\rho:X\times X\rightarrow \mathbb{R}$,有$\rho=\sqrt{\sum\limits_{i=1}^n\rho_i^2}$,称为<strong>积度量</strong>,$(X,\rho)$称为<strong>度量积空间</strong>.</p><blockquote><p>$n$维欧式空间$\mathbb{R}^n$是$n$个实数空间的度量积空间.</p></blockquote><p>设$(X_1,\rho_1),(X_2,\rho_2),\cdots,(X_n,\rho_n),n\ge1$为度量空间,$(X,\rho)$为度量积空间,设$\mathscr{T}_i$和$\mathscr{T}$分别为度量$\rho_i$和$\rho$所诱导出来的拓扑,则$X$的子集族$\mathscr{B}=\lbrace U_1\times U_2\times\cdots\times U_n|U_i\in\mathscr{T}_i\rbrace$是拓扑$\mathscr{T}$的一个基.</p><p>设$(X_1,\rho_1),(X_2,\rho_2),\cdots,(X_n,\rho_n),n\ge1$为拓扑,则$X=X_1\times X_2\times\cdots\times X_n$,有唯一一个拓扑$\mathscr{T}$以$X$的子集族$\mathscr{B}=\lbrace U_1\times U_2\times\cdots\times U_n|U_i\in\mathscr{T}_i\rbrace$为它的一个基,称为<strong>积拓扑</strong>,$(X,\mathscr{T})$称为<strong>拓扑积空间</strong>.</p><p>设$X$是度量积空间,则将$X$作为拓扑空间时也是拓扑积空间.</p><blockquote><p>$\mathbb{R}^n$是$n$个$\mathbb{R}$的拓扑积空间.</p></blockquote><hr><p>设$X=X_1\times X_2\times\cdots\times X_n$是$X_1,X_2,\cdots,X_n,n\ge1$的积空间,$\mathscr{B}_i$是$X_i$的基,则$X$的子集族$\tilde{\mathscr{B}}=\lbrace B_1\times B_2\times\cdots B_n|B_i\in\mathscr{B}_i\rbrace$是$X$的一个基.</p><blockquote><p>实数空间$\mathbb{R}$有一个基由全体开区间构成,$n$维欧式空间$\mathbb{R}^n$有一个基由所有开立方体构成.</p></blockquote><p>设$X=X_1\times X_2\times\cdots\times X_n$是$X_1,X_2,\cdots,X_n,n\ge1$的积空间,$\mathscr{T}_i$和$\mathscr{T}$分别为$X_i$和$X$的拓扑,则$X$以子集族$\mathscr{S}=\lbrace \pi_i^{-1}(U_i)|U_i\in\mathscr{T}_i$为它的一个子基.其中$\pi_i:X\rightarrow X_i$为投影.</p><p>设$X=X_1\times X_2\times\cdots\times X_n$是$X_1,X_2,\cdots,X_n,n\ge1$的积空间,则$\pi_i:X\rightarrow X_i$是满的连续开映射,即把任何开集映射为开集.</p><blockquote><p>$\pi_i:X\rightarrow X_i$未必是闭映射,如$\pi_i:\mathbb{R}^2\rightarrow \mathbb{R}$,闭集$B=\lbrace(x_1,x_2)\in \mathbb{R}^2|x_1x_2=1\rbrace$,但$\pi_1(B)=\mathbb{R}-\lbrace0\rbrace$不是$\mathbb{R}$的闭集.</p></blockquote><!-- 一个多元函数是连续的,当且仅当它的所有分量连续 --><p>设$X=X_1\times X_2\times\cdots\times X_n$是$X_1,X_2,\cdots,X_n,n\ge1$的积空间,$Y$为拓扑空间.则映射$f:Y\rightarrow X$连续当且仅当对每一个$i$,映射$\pi_i\circ f:Y\rightarrow X_i$连续.</p><p>设$X=X_1\times X_2\times\cdots\times X_n$是$X_1,X_2,\cdots,X_n,n\ge1$的积空间,$\mathscr{T}$是积拓扑.考虑$\tilde{\mathscr{T}}$满足$\pi_i:X\rightarrow X_i$是连续映射,则$\mathscr{T}\subset\tilde{\mathscr{T}}$.即<span class="wow">积拓扑是使得积空间到每一个做表空间的投影都连续的最小拓扑</span>.</p><p>设$X_1,X_2,\cdots,X_n,n\ge2$是拓扑空间,则积空间$X_1\times X_2\times\cdots\times X_n$同胚于$(X_1\times X_2\times\cdots\times X_{n-1})\times X_n$.即<span class="wow">积空间可以归纳地定义</span>.</p><h2 id="商空间"><a href="#商空间" class="headerlink" title="商空间"></a>商空间</h2><p>设$X$是一个拓扑空间,$Y$是一个集合,$f:X\rightarrow Y$是一个满射.则$Y$的子集族$\mathscr{T}_1=\lbrace U\subset Y|f^{-1}(U)\in\mathscr{T}\rbrace$是$Y$的一个拓扑,称为<strong>商拓扑</strong>.</p><p>设$X$是一个拓扑空间,$Y$是一个集合,$f:X\rightarrow Y$是一个满射.有</p><ul><li>若$\mathscr{T}_1$是$Y$的商拓扑,则$f:X\rightarrow Y$是一个连续映射.</li><li>若$\tilde{\mathscr{T}_1}$是$Y$的拓扑,且对于$\tilde{\mathscr{T}_1}$而言$f$是连续的,则$\tilde{\mathscr{T}_1}\subset\mathscr{T}_1$.即<span class="wow">商拓扑使$f$连续的最大拓扑</span>.</li></ul><p>设$X$和$Y$是拓扑空间,$f:X\rightarrow Y$是一个满射且$Y$的拓扑是对于$f$而言的商映射,则称$f$是一个<strong>商映射</strong>.</p><hr><p>设$X$,$Y$,$Z$是拓扑空间,$f:X\rightarrow Y$是一个商映射,则映射$g:Y\rightarrow Z$连续当且仅当映射$g\circ f:X\rightarrow Z$连续.</p><p>设$X$和$Y$是拓扑空间,$f:X\rightarrow Y$是一个商映射.令$R=\lbrace(x_1,x_2)\in X^2|f(x_1)=f(x_2)\rbrace$,则</p><ul><li>$R$是$X$中的一个等价关系</li><li>$Y$同胚于商空间$X/R$</li></ul><p>设$X$和$Y$是拓扑空间,$f:X\rightarrow Y$是一个连续的满射,并且是一个开映射或闭映射,则$Y$的拓扑便是相对于$f$的商拓扑.</p><p>设$X$是一个拓扑空间,$R$是$X$中的一个等价关系,商集$X/R$(相对于自然投影$\pi:X\rightarrow X/R$)的商拓扑$\mathscr{T}_R$称为$X/R$(相对于$R$的)商拓扑.$(X/R,\mathscr{T}_R)$称为$(X,\mathscr{T})$的<strong>商空间</strong>.</p><blockquote><p>在实数空间$\mathbb{R}$上给定$\sim=\lbrace(x,y)\in \mathbb{R}^2|x,y\in \mathbb{Q}\quad\text{or}\quad x,y\notin \mathbb{Q}\rbrace$,则$\mathbb{R}/\sim=\lbrace[0],[\sqrt2]\rbrace$,称为将实数空间中所有有理点和所有无理点分别粘合为一点得到的商空间,商拓扑是平庸拓扑.<br>在单位闭区间$I=[0,1]$上给定$\sim=\lbrace(x,y)\in I^2|x=y\quad\text{or}\quad \lbrace x,y\rbrace=\lbrace0,1\rbrace\rbrace$,则$I/\sim$称为将单位闭区间$I$中两个端点粘合为一点所得到的商空间,其与单位圆周$S^1$同胚.<br>将正方形的对边同向粘合,可以得到圆柱,其与$S^1\times I$同胚.<br>将正方形的对边反向粘合,可以得到Mobius带.<br>将圆柱两端同向粘合,可以得到环面,同胚于$S^1\times S^1$.<br>将圆柱两端反向粘合,可以得到Klein瓶.</p></blockquote><h1 id="连通性"><a href="#连通性" class="headerlink" title="连通性"></a>连通性</h1><h2 id="连通空间"><a href="#连通空间" class="headerlink" title="连通空间"></a>连通空间</h2><p>设$A$和$B$是拓扑空间的两个子集,若$(A\cap\bar B)\cup(B\cap\bar A)=\varnothing$,即<span class="wow">互不包含的对方凝聚点的不交子集</span>,则称$A$和$B$是<strong>隔离</strong>的.</p><blockquote><p>在$\mathbb{R}$中,$(0,1)$和$(1,2)$隔离,但$(0,1)$和$[1,2)$不隔离.<br>空集和任意子集隔离.<br>平庸空间中的任何子集都不隔离.<br>离散空间中的任意不交子集都是隔离的.</p></blockquote><p>设$X$是一个拓扑空间,如果$X$中有两个非空的隔离子集$A$和$B$使得$X=A\cup B$,则称$X$是一个<strong>不连通空间</strong>,否则称$X$是一个<strong>连通空间</strong>.</p><blockquote><p>多于一个点的离散空间是不连通空间<br>而任何平庸空间都是连通空间</p></blockquote><p>设$X$是一个拓扑空间,则以下条件等价:</p><ul><li>$X$是一个不连通空间</li><li>$X$中存在两个非空的闭子集$A$和$B$使得$A\cap B=\varnothing$和$A\cup B=X$成立</li><li>$X$中存在两个非空的开子集$A$和$B$使得$A\cap B=\varnothing$和$A\cup B=X$成立</li><li>$X$中存在一个既开又闭的非空真子集.</li></ul><blockquote><p>有理数集$\mathbb{Q}$是一个不连通空间.<br>实数空间$\mathbb{R}$是一个连通空间.</p></blockquote><hr><p>设$Y$是拓扑空间$X$的一个子集,如果$Y$作为$X$的子空间是一个连通空间,则称$Y$是$X$的一个<strong>连通子集</strong>,否则称为<strong>不连通子集</strong>.</p><p>设$X$是一个拓扑空间,且有$Y\subset Z\subset X$,则$Y$是$X$的连通子集,当且仅当$Y$是$Z$的连通子集.</p><p>设$Y$是拓扑空间$X$的一个子集,$A,B\subset Y$,则$A$和$B$是子空间$Y$中的隔离子集当且仅当它们是$X$中的隔离子集.</p><p>设$Y$是拓扑空间$X$中的一个连通子集,如果$X$中有隔离子集$A$和$B$使得$Y\subset A\cup B$,则有$Y\in A$或$Y\in B$.</p><p>设$Y$是拓扑空间$X$的连通子集,$Z\subset X$,且满足$Y\subset\bar Y$,则$Z$也是$X$的一个连通子集.</p><p>设$\lbrace Y_\gamma\rbrace_{\gamma\in\varGamma}$是拓扑空间$X$的连通子集构成的子集族,若$\bigcap\limits_{\gamma\in\varGamma}Y_\gamma\neq\varnothing$,则$\bigcup\limits_{\gamma\in\varGamma}Y_\gamma\neq\varnothing$是$X$的一个连通子集.</p><blockquote><p>$\mathbb{R}^2$中的若干条直线同胚于$\mathbb{R}$,交于一点,组成的图形是连通的.</p></blockquote><p>设$Y$是拓扑空间$X$中的一个子集,如果对于任意$x,y\in Y$,存在$X$中的一个连通子集$Y_{xy}$使得$x,y\in Y_{xy}\subset Y$,则$Y$是$X$中的一个连通子集.</p><hr><p>设$f:X\rightarrow Y$是从连通空间到拓扑空间$Y$的一个连续满射,则$Y$是连通空间.称连通性为<strong>在连续映射下保持不变</strong>的性质.</p><p>拓扑空间的某种性质,如果为一个拓扑空间所具有则必然为它的任何一个商空间所具有,则称这个性质是一个<strong>可商性质</strong>.</p><blockquote><p>连通性是可商性质,连通空间的商空间是连通的.</p></blockquote><p>设$f:X\rightarrow Y$是从连通空间到拓扑空间$Y$的一个连续映射,则$f(x)$是$Y$的一个连通子集.</p><p>拓扑空间的某种性质,如果为任意$n\ge1$个拓扑空间$X_1,X_2,\cdots,X_n$所具有则必然为积空间$X_1\times X_2\times\cdots\times X_n$所具有,则称这个性质是一个<strong>有限可积性质</strong>.</p><blockquote><p>离散空间的积空间还是离散空间,平庸空间的积空间还是平庸空间,离散性和平庸性是有限可积性质.<br>连通空间的积空间还是连通空间.<br>$\mathbb{R}^n$是连通空间.</p></blockquote><hr><p>设$X$是一个拓扑空间,$x,y\in X$,如果存在$X$中的一个连通子集包含$x$和$y$,则称$x$和$y$<strong>连通</strong>.连通关系是一个等价关系.对于$X$中的点的连通关系而言,每一个等价类称为拓扑空间$X$的一个<strong>连通分支</strong>.</p><blockquote><p>平庸空间只有一个连通分支.<br>离散空间每一个单点集都是一个连通分支.</p></blockquote><p>设$X$是一个拓扑空间,$C$是$X$的一个连通分支,则</p><ul><li>如果$Y$是$X$的一个连通子集,且$Y\cap C\neq\varnothing$,则$Y\subset C$.</li><li>$C$是一个连通子集.</li><li>$C$是闭集.</li></ul><p>即每一个连通分支都是最大的连通子集.</p><blockquote><p>连通空间可以不是开集,如$\mathbb{Q}$的单点集.<br>当连通分支数目有限时,$C$也一定是开集.</p></blockquote><p>连通空间的数目是拓扑不变性质.</p><h2 id="连通空间的应用"><a href="#连通空间的应用" class="headerlink" title="连通空间的应用"></a>连通空间的应用</h2><p>设$E$是实数空间$\mathbb{R}$的一个子集,则$E$是一个连通子集当且仅当$E$是一个区间.</p><p>设$X$是一个连通空间,$f:X\rightarrow \mathbb{R}$是一个连续映射,则$f(x)$是$\mathbb{R}$中的一个区间.因此,若有$x,y\in X$,则对于$f(x)$和$f(y)$之间的任意实数$t$,总有$z\in X$使得$f(z)=t$.</p><p><span class="wow">(介值定理)</span>.设$f:[a,b]\rightarrow \mathbb{R}$是一个连续映射,则对于$f(a)$和$f(b)$之间的任何一个实数$r$,存在$z\in[a,b]$使得$f(z)=r$.</p><p><span class="wow">(不动点定理)</span>设$f:[0,1]\rightarrow[0,1]$,则存在$z\in[0,1]$使得$f(z)=z$.</p><p><span class="wow">(Brouwer不动点定理)</span>设$f:D^n\rightarrow D^n$是一个连续映射,则存在$z\in D^n$,使得$f(z)=z$.</p><p><span class="wow">(Borsuk-Ulam定理)</span>设$f:S^1\rightarrow \mathbb{R}$是一个连续映射,则在$S^1$中存在一对对径点$x$和$-x$,使得$f(x)=f(-x)$.</p><p><span class="wow">(Borsuk-Ulam定理)</span>设$f:S^n\rightarrow \mathbb{R}^l(n\ge l)$是一个连续映射,则存在$x\in S^n$,使得$f(x)=f(-x)$.</p><blockquote><p>地球上总存在对称的两点,它们的温度和大气压的值正好都相同.</p></blockquote><p>$n&gt;1$维欧式空间$\mathbb{R}^n$的子集$\mathbb{R}^n-\lbrace0\rbrace$是一个连通子集.</p><p>$\mathbb{R}^2$和$\mathbb{R}$是不同胚的.$(a,b)$和$[a,b]$不同胚,一个圆和两个相切的圆不同胚.</p><h2 id="局部连通"><a href="#局部连通" class="headerlink" title="局部连通"></a>局部连通</h2><p>设$X$是一个拓扑空间,$x\in X$,若$x$的每一个邻域$U$中都包含着$x$的某一个连通的邻域$V$,则称$X$在$x$处<strong>局部连通</strong>.$x$处局部连通当且仅当$x$的所有连通邻域构成$x$的一个邻域基.若$X$在其内的每一个点都局部连通,则称$X$是一个<strong>局部连通空间</strong>.</p><blockquote><p>每一个离散空间都是局部连通空间,但多于一个点的离散空间是不连通的.<br>$\mathbb{R}^n$的任何开子空间局部连通的,但两个不交开集并不是连通的.<br>令$S=\lbrace(x,\sin\dfrac1x)|x\in(0,1]\rbrace$,$T=\lbrace0\rbrace\times[-1,1]$,则$S$是连通的,$\bar S=S\cup T$也是连通的,但$\bar S$在$T$不局部连通,$\bar S$不是局部连通的.</p></blockquote><p>设$X$是一个拓扑空间,则以下条件等价:</p><ul><li>$X$是一个局部连通空间</li><li>$X$的任何一个开集的任何一个连通分支都是开集</li><li>$X$有一个基,它的每一个元素都是连通的</li></ul><p>从而,局部连通空间的每一个连通分支都是开集.</p><p>设$X$和$Y$都是拓扑空间,其中$X$局部连通,又设$f:X\rightarrow Y$是一个连续开映射,则$f(X)$是一个局部连通空间.</p><p>设$X_1,X_2,\cdots,X_n$是$n\ge1$个局部连通空间,则积空间$X_1\times X_2\times\cdots\times X_n$也是局部连通空间.</p><h2 id="道路连通空间"><a href="#道路连通空间" class="headerlink" title="道路连通空间"></a>道路连通空间</h2><p>设$X$是一个拓扑空间,从单位闭区间$[0,1]$到$X$的每一个连续映射$f:[0,1]\rightarrow X$叫做$X$中的一条<strong>道路</strong>,像集$f([0,1])$称作一条<strong>曲线</strong>.</p><p>设$X$是一个拓扑空间,若对于任何$x,y$,存在$X$中的一条从$x$到$y$的道路,则称$X$是一个<strong>道路连通空间</strong>.如$X$中的一个子集$Y$是一个道路连通空间,则称作$X$中的一个<strong>道路连通子集</strong>.</p><p>如果拓扑空间$X$是一个道路连通空间,在$X$也是连通空间.</p><p>设$X$和$Y$是两个拓扑空间,其中$X$是道路连通的,$f:X\rightarrow Y$是一个连续映射,则$f(X)$是道路连通的.</p><p>设$X_1,X_2,\cdots,X_n$是$n\ge1$个道路连通空间,则积空间$X_1\times X_2\times\cdots\times X_n$也是道路连通空间.</p><!--粘结引理--><p>设$X$是一个拓扑空间,$x,y\in X$,如果$X$中有一条从$x$到$y$的道路,则称$x$和$y$是<strong>道路连通</strong>的.道路连通关系是一个等价关系,对于$X$中的道路连通关系而言,每一个等价类称为$X$的一个<strong>道路连通分支</strong>.</p><blockquote><p>$\mathbb{R}^n$的任何一个连通开集都是道路连通的.<br>$\mathbb{R}^n$的任何开集的每一个道路连通分支同时也是一个连通分支.</p></blockquote><h1 id="可数性公理"><a href="#可数性公理" class="headerlink" title="可数性公理"></a>可数性公理</h1><p><svg xmlns="http://www.w3.org/2000/svg" width="526.84" height="322"><defs><marker id="a" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="b" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="c" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="d" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="e" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="f" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="g" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="h" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="i" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker></defs><path fill="#fff" stroke="#323232" stroke-width="2" d="M25.007 25h230v48h-230z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(25.007 25)" y="9.8"><tspan x="115" dy="22"><tspan>欧式子空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M29.22 113h48v154h-48z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(29.22 113)" y="28.3"><tspan x="24" dy="22"><tspan>度</tspan></tspan><tspan x="24" dy="22"><tspan>量</tspan></tspan><tspan x="24" dy="22"><tspan>空</tspan></tspan><tspan x="24" dy="22"><tspan>间</tspan></tspan></text><path fill="none" marker-end="url(&quot;#a&quot;)" stroke="#323232" stroke-width="2" d="M53.284 72.802v20.1h-.064V113"/><path fill="#fff" stroke="#323232" stroke-width="2" d="M115.072 113h48v154h-48z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(115.072 113)" y="5.3"><tspan x="24" dy="22"><tspan>第</tspan></tspan><tspan x="24" dy="22"><tspan>一</tspan></tspan><tspan x="24" dy="22"><tspan>可</tspan></tspan><tspan x="24" dy="22"><tspan>数</tspan></tspan><tspan x="24" dy="22"><tspan>空</tspan></tspan><tspan x="24" dy="22"><tspan>间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M201.93 112.897h48v154h-48z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(201.93 112.897)" y="5.3"><tspan x="24" dy="22"><tspan>第</tspan></tspan><tspan x="24" dy="22"><tspan>二</tspan></tspan><tspan x="24" dy="22"><tspan>可</tspan></tspan><tspan x="24" dy="22"><tspan>数</tspan></tspan><tspan x="24" dy="22"><tspan>空</tspan></tspan><tspan x="24" dy="22"><tspan>间</tspan></tspan></text><path fill="none" marker-end="url(&quot;#b&quot;)" stroke="#323232" stroke-width="2" d="M225.84 72.975v19.961h.09v19.961"/><path fill="#fff" stroke="#323232" stroke-width="2" d="M323.84 115h177.5v45.643h-177.5z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(323.84 115)" y="8.621"><tspan x="89" dy="22"><tspan>可分空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M323.84 215h177.5v45.643h-177.5z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(323.84 215)" y="8.621"><tspan x="89" dy="22"><tspan>Lindelöff空间</tspan></tspan></text><path fill="none" marker-end="url(&quot;#c&quot;)" stroke="#323232" stroke-width="2" d="M77.22 190h37.852"/><g><path fill="none" marker-end="url(&quot;#d&quot;)" stroke="#323232" stroke-width="2" d="M201.93 189.897h-19.429V190h-19.429"/></g><g><path fill="none" marker-end="url(&quot;#e&quot;)" stroke="#323232" stroke-width="2" d="M249.749 150.909h37.159v-.146h37.159"/></g><g><path fill="none" marker-end="url(&quot;#f&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M324.067 125.763h-37.159v-2.127h-37.159"/><path fill="#fff" d="M273.908 116.699h26v16h-26z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" y="114.749"><tspan x="286.908" dy="16"><tspan>度量</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#g&quot;)" stroke="#323232" stroke-width="2" d="M249.749 226.818h37.046v-.068h37.045"/></g><g><path fill="none" marker-end="url(&quot;#h&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M323.067 252.763h-36.613v-.013H249.84"/><path fill="#fff" d="M273.454 244.756h26v16h-26z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" y="242.806"><tspan x="286.454" dy="16"><tspan>度量</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#i&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M53.22 267v30h172.71v-30.103"/><path fill="#fff" d="M89.127 289h101v16h-101z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" y="287.05"><tspan x="139.627" dy="16"><tspan>可分 或 Lindelöff</tspan></tspan></text></g></svg></p><!--什么样的拓扑空间是可以度量化的--><h2 id="可数性公理-1"><a href="#可数性公理-1" class="headerlink" title="可数性公理"></a>可数性公理</h2><p>一个拓扑空间如果有一个可数基,则称这个拓扑空间是一个满足<strong>第二可数性公理</strong>的空间,简称为$A_2$空间.</p><blockquote><p>实数空间$\mathbb{R}$是一个$A_2$空间,选取所有有理数为端点的开区间作为基族.<br>不可数离散空间不是$A_2$空间.</p></blockquote><p>一个拓扑空间如果在每一点都有一个可数邻域基,则称这个拓扑空间是一个满足<strong>第一可数性公理</strong>的空间,简称为$A_1$空间.</p><blockquote><p>每一个度量空间都是一个$A_1$空间.<br>$X$是包含不可数个点的可数补空间,则$X$不是$A_1$空间.</p></blockquote><p>$A_2$空间都是$A_1$空间,但反之不成立.</p><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$是一个满的连续开映射,如果X满足第二(一)可数性公理,则$Y$也满足第二(一)可数性公理.</p><hr><p>拓扑空间的某种性质称为<strong>可遗传</strong>性质,如果一个拓扑空间具有则任何一个子空间也具有.拓扑空间的某种性质称为<strong>对于开(闭)子空间可遗传</strong>性质,如果一个拓扑空间具有则任何一个开(闭)子空间也具有.</p><blockquote><p>离散性,平庸性都是可遗传性质.<br>连通性不是可遗传性质,但连通性对于开子空间可遗传.<br>如下,两个可数公理是可遗传的,也是有限可积的.</p></blockquote><p>满足第二(一)可数性公理的空间的任何一个子空间也是满足第二(一)可数性公理的空间.</p><p>设$X_1,X_2,\cdots,X_n$是$n$个满足第二(一)可数性公理的空间,则积空间$X_1\times X_2\times\cdots\times X_n$也是满足第二(一)可数性公理的空间.</p><blockquote><p>$\mathbb{R}^n$的每一个子空间都是$A_2$空间.</p></blockquote><hr><p>设$X$是一个拓扑空间,如果在点$x\in X$处有一个可数邻域基,则在点$x$处有一个单调递减的可数邻域基$\lbrace U_i\rbrace_{i\in \mathbb{Z}_+}$,即$U_1\supset U_2\supset\cdots\supset U_i\supset U_{i+1}\supset\cdots$.</p><p>设$X$是一个满足第一可数性公理的,$A\subset X$,则点$x$是集合$A$凝聚点的充分必要条件是在集合$A-\lbrace x\rbrace$中有一个序列收敛于$x$.</p><p>设$X$和$Y$是两个拓扑空间,其中$X$满足第一可数性公理,$x\in X$,则映射$f:X\rightarrow Y$在点$x\in X$处连续的充分必要条件是若$X$中的序列$x_i$收敛于$x$,则$Y$中的序列$\lbrace f(x_i)\rbrace$收敛于$f(x)$.</p><p>设$X$和$Y$是两个拓扑空间,其中$X$满足第一可数性公理,则映射$f:X\rightarrow Y$在是一个连续映射的充分必要条件是若$X$中的序列$x_i$收敛于$x\in X$,则$Y$中的序列$\lbrace f(x_i)\rbrace$收敛于$f(x)$.</p><h2 id="可分空间"><a href="#可分空间" class="headerlink" title="可分空间"></a>可分空间</h2><p>设$X$是一个拓扑空间,$D\subset X$,如果$D$的闭包等于整个拓扑空间$X$,即$\bar D=X$,则称$D$是$X$的一个<strong>稠密子集</strong>.</p><p>设$X$是一个拓扑空间,$D$是$X$中的一个稠密子集,又设$f,g:X\rightarrow \mathbb{R}$都是连续映射.如果$f|_D=g|_D$,则$f=g$.</p><p>设$X$是一个拓扑空间,如果$X$有一个可数稠密子集,则称$X$是一个<strong>可分空间</strong>.</p><p>$A_2$空间都是可分空间.可分性不可遗传,但第二可数性可遗传,因此$A_2$空间的子空间也是可分空间.</p><p>每一个可分的度量空间都满足第二可数性公理.可分度量空间的子空间也是可分空间</p><blockquote><p>如果度量空间有有限稠密子集的话,则一定是离散空间.<br>不可数离散空间是不可分的.<br>$\mathbb{R}^n$的任何子空间都是可分空间.<br>设$(X,\mathscr{T})$是一个拓扑空间,$\infty$是任何一个不属于$X$的元素.令$X^\circ=X\cup\lbrace\infty\rbrace$和$\mathscr{T}^\circ=\lbrace A\cup\lbrace\infty\rbrace|A\in\mathscr{T}\rbrace\cup\lbrace\varnothing\rbrace$,则$(X^\circ,\mathscr{T}^\circ)$是一个拓扑空间,且</p><ul><li>$(X^\circ,\mathscr{T}^\circ)$可分,因为$\lbrace\infty\rbrace$稠密.</li><li>$(X^\circ,\mathscr{T}^\circ)$满足第二可数性公理当且仅当$(X,\mathscr{T})$满足第二可数性公理.</li><li>$(X,\mathscr{T})$是$(X^\circ,\mathscr{T}^\circ)$的一个子空间,因为$\mathscr{T}=\mathscr{T}^\circ|_X$<br>可分空间可以不满足第二可数性公理.<br>可分空间的子空间可以不是可分空间.</li></ul></blockquote><h2 id="Lindeloff空间"><a href="#Lindeloff空间" class="headerlink" title="Lindelöff空间"></a>Lindelöff空间</h2><p>设$\mathscr{A}$是一个集族,$B$是一个集合,如果$\bigcup\limits_{A\in\mathscr{A}}A\supset B$,则称集族$\mathscr{A}$是集合$B$的一个<strong>覆盖</strong>.当$\mathscr{A}$有限或可数时,称$\mathscr{A}$是$B$的一个<strong>有限覆盖</strong>或<strong>可数覆盖</strong>.</p><p>设集族$\mathscr{A}$是集合$B$的一个覆盖,若$\mathscr{A}$的一个子族$\mathscr{A}_1$也是$B$的覆盖,则称$\mathscr{A}_1$是$\mathscr{A}$的子覆盖.</p><p>设$X$是一个拓扑空间,如果由$X$中开(闭)子集构成的集族$\mathscr{A}$是$X$的子集$B$的一个覆盖,则称$\mathscr{A}$是$B$的一个<strong>开(闭)覆盖</strong>.</p><p>设$X$是一个拓扑空间,如果$X$的每一个开覆盖都有一个可数子覆盖,则称拓扑空间$X$是一个<strong>Lindelöff空间</strong>.</p><blockquote><p>不可数离散空间一定不是Lindelöff空间.</p></blockquote><p><span class="wow">(Lindelöff定理)</span>$A_2$空间都是Lindelöff空间.</p><p>$A_2$空间的每一个子空间都是Lindelöff空间.</p><blockquote><p>$\mathbb{R}^n$的每一个子空间都是Lindelöff空间.<br>设$X$是包含不可数个的可数补空间,其不满足第一和第二可数性公理,但它和它的子空间都是Lindelöff空间.</p></blockquote><p>Lindelöff度量空间都是$A_2$空间.</p><p>Lindelöff不可遗传,不满足有限可积.</p><blockquote><p>设$X$不可数,$z\in X$,令$X_1=X-\lbrace z\rbrace$,$\mathscr{T}=P(X_1)\cup\lbrace U\in P(X)|z\in U,\text{countable }U’\rbrace$,则$\mathscr{T}$是$X$的一个拓扑.$(X,\mathscr{T})$是一个Lindelöff空间,但$\mathscr{T}|_{X_1}=P(X_1)$,$X_1$作为$X$的子空间是一个不可数离散空间,故不是Lindelöff空间.<br>实数下限空间$\mathbb{R}_l$是Lindelöff空间,但实数下限空间的积$\mathbb{R}_l^2$不是Lindelöff空间.</p></blockquote><p>Lindelöff的闭子空间都是Lindelöff空间.</p><p>设拓扑空间$X$的任何一个子空间都是Lindelöff空间.如果$A\subset X$是一个不可数集,则$A$中必定包含$A$的某一个凝聚点,即$A\cap d(A)\neq\varnothing$.特别地,如果$X$是一个$A_2$空间,在$X$的每一个不可数子集$A$都包含$A$的某一个凝聚点.</p><h1 id="分离性公理"><a href="#分离性公理" class="headerlink" title="分离性公理"></a>分离性公理</h1><p><svg xmlns="http://www.w3.org/2000/svg" width="730" height="278"><defs><marker id="a" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="b" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="c" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="d" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="e" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="f" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="g" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="h" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="i" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="j" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="k" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="l" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="m" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="n" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="o" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker></defs><path fill="#fff" stroke="#323232" stroke-width="2" d="M105 25h120v48H105z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(105 25)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M25 25h48v228H25z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(25 25)" y="65.3"><tspan x="24" dy="22"><tspan>度</tspan></tspan><tspan x="24" dy="22"><tspan>量</tspan></tspan><tspan x="24" dy="22"><tspan>空</tspan></tspan><tspan x="24" dy="22"><tspan>间</tspan></tspan></text><path fill="none" d="M142 33h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(142 33)" y="10.05"><tspan x="10" dy="16"><tspan>4</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M265 25h120v48H265z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(265 25)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M300 33h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(300 33)" y="10.05"><tspan x="10" dy="16"><tspan>3.5</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M585 25h120v48H585z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(585 25)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M621 33h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(621 33)" y="10.05"><tspan x="10" dy="16"><tspan>2</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M585 115h120v48H585z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(585 115)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M621 123h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(621 123)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M585 205h120v48H585z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(585 205)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M621 213h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(621 213)" y="10.05"><tspan x="10" dy="16"><tspan>0</tspan></tspan></text><path fill="none" d="M131 29h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(131 29)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M283 29h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(283 29)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M610 29h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(610 29)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M610 119h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(610 119)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M610 209h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(610 209)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M425 25h120v48H425z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(425 25)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M450 29h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(450 29)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M461 33h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(461 33)" y="10.05"><tspan x="10" dy="16"><tspan>3</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M255 135h140v48H255z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(255 135)" y="9.8"><tspan x="70" dy="22"><tspan>完全正则空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M105 135h70v118h-70z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(105 135)" y="33.3"><tspan x="35" dy="22"><tspan>正规</tspan></tspan><tspan x="35" dy="22"><tspan>空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M475 135h70v118h-70z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(475 135)" y="33.3"><tspan x="35" dy="22"><tspan>正则</tspan></tspan><tspan x="35" dy="22"><tspan>空间</tspan></tspan></text><g><path fill="none" marker-end="url(&quot;#a&quot;)" stroke="#323232" stroke-width="2" d="M225 49h40"/></g><g><path fill="none" marker-end="url(&quot;#b&quot;)" stroke="#323232" stroke-width="2" d="M385 49h40"/></g><g><path fill="none" marker-end="url(&quot;#c&quot;)" stroke="#323232" stroke-width="2" d="M545 49h40"/></g><g><path fill="none" marker-end="url(&quot;#d&quot;)" stroke="#323232" stroke-width="2" d="M645 73v21h0v21"/></g><g><path fill="none" marker-end="url(&quot;#e&quot;)" stroke="#323232" stroke-width="2" d="M645 163v21h0v21"/></g><g><path fill="none" marker-end="url(&quot;#f&quot;)" stroke="#323232" stroke-width="2" d="M72.619 48.333h16.19V49H105"/></g><g><path fill="none" marker-end="url(&quot;#g&quot;)" stroke="#323232" stroke-width="2" d="M294.534 71.947v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#h&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M343.962 133.947v-31h0v-31"/></g><g><path fill="none" d="M328.368 87.737h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(328.368 87.737)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M317.368 83.737h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(317.368 83.737)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#i&quot;)" stroke="#323232" stroke-width="2" d="M485.472 70.895v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#j&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M534.901 132.895v-31h0v-31"/></g><g><path fill="none" d="M519.307 86.684h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(519.307 86.684)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M508.307 82.684h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(508.307 82.684)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#k&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M475 158.929h-40V159h-40"/><path fill="#fff" d="M422 150.964h26v16h-26z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" y="149.014"><tspan x="435" dy="16"><tspan>正规</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#l&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M175 158.929h40V159h40"/><path fill="#fff" d="M202 150.964h26v16h-26z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" y="149.014"><tspan x="215" dy="16"><tspan>正则</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#m&quot;)" stroke="#323232" stroke-width="2" d="M112.863 73.503v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#n&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M162.292 135.503v-31h0v-31"/></g><g><path fill="none" d="M146.698 89.293h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(146.698 89.293)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M135.698 85.293h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(135.698 85.293)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#o&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M475 228.478H325h0-150"/><path fill="#fff" d="M297.5 220.478h55v16h-55z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" y="218.528"><tspan x="325" dy="16"><tspan>Lindelöff</tspan></tspan></text></g></svg></p><!-- 度量空间里的任何两点都可以用不相交的邻域分开 --><h2 id="T-0-T-1-Hausdorff空间"><a href="#T-0-T-1-Hausdorff空间" class="headerlink" title="$T_0$,$T_1$,Hausdorff空间"></a>$T_0$,$T_1$,Hausdorff空间</h2><p>设$X$是一个拓扑空间,如果$X$中的任意两个不同的点中必有一个点有一个&#x5b;开&#x5d;邻域不包含另一个点(即若$x,y\in X,x\neq y$,则或者$x$有一个开邻域$U$使得$y\notin U$,或者$y$有一个开邻域$V$使得$x\notin V$),则称$X$是一个$T_0$<strong>空间</strong>.<em>在这个定义及后文类似的定义中,”开邻域”和”邻域”描述,定义是等价的.</em></p><blockquote><p>多于一个点的平庸空间不是$T_0$空间.</p></blockquote><p>拓扑空间$X$是一个$T_0$空间,当且仅当$X$中任何两个不同单点集有不同的闭包,即若$x,y\in X,x\neq y$,则$\overline{\lbrace x\rbrace}\neq\overline{\lbrace y\rbrace}$.</p><blockquote><p>两个点以上的离散空间是$T_0$空间.<br>$X$是有无穷多点的有限补空间,$X$是$T_0$空间.</p></blockquote><p>设$X$是一个拓扑空间,如果$X$中的任意两个不同的点中每一个点都有一个&#x5b;开&#x5d;邻域不包含另一个点(即若$x,y\in X,x\neq y$,则$x$有一个开邻域$U$使得$y\notin U$),则称$X$是一个$T_1$<strong>空间</strong>.</p><p>$T_1$空间都是$T_0$空间,反之则不一定.</p><p>设$X$是一个拓扑空间,则以下条件等价</p><ul><li>$X$是一个$T_1$空间</li><li>$X$中每一个单点集都是闭集</li><li>$X$中么一个有限子集都是闭集</li></ul><p>设$X$是一个$T_1$空间,则点$x\in X$是$X$的子集$A$的凝聚点当且仅当$x$的每一个邻域$U$中都含有$A$中的无限多个点,即$U\cap A$是一个无限集.</p><p>设$X$是一个$T_1$空间,则$X$中的一个由有限个点构成的序列$\lbrace x_i\rbrace$收敛于点$x\in X$当且仅当该序列最终仅取该收敛的值,即存在$N&gt;0$使得$x_i=x$对于任何$i\ge N$成立.</p><p>设$X$是一个拓扑空间,如果$X$中的任意两个不同的点中各自有一个&#x5b;开&#x5d;邻域使得这两个开邻域不相交,(即若$x,y\in X,x\neq y$,则$x$有一个开邻域$U$,$y$有一个开邻域$V$,使得$U\cap V=\varnothing$,则称$X$是一个$T_2$<strong>空间</strong>或<strong>Hausdorff空间</strong>.</p><p>$T_2$空间都是$T_1$空间,反之则不一定.</p><blockquote><p>设$X$是一个包含无限多个点的有限补空间,则$X$是$T_1$空间,但$X$不是Hausforff空间.</p></blockquote><p>Hausforff空间中的任何一个收敛序列只有一个极限点.</p><h2 id="正则-正规-T-3-T-4-空间"><a href="#正则-正规-T-3-T-4-空间" class="headerlink" title="正则,正规,$T_3$,$T_4$空间"></a>正则,正规,$T_3$,$T_4$空间</h2><p>设$X$是一个拓扑空间,如果$X$中的任意一个点$x$和任何一个不包含$x$的闭集$A$都各有一个&#x5b;开&#x5d;邻域$U,V$,使得$U\cap V=\varnothing$,则称$X$是一个<strong>正则空间</strong>.</p><p>设$X$是一个拓扑空间,则$X$是一个正则空间当且仅当对于任何点$x\in X$和$x$的任意一个开邻域$U$,存在一个$x$的开邻域$V$使得$\bar V\subset U$.</p><p>设$X$是一个拓扑空间,如果$X$中的任意两个互不相交的闭集都各自有一个&#x5b;开&#x5d;邻域使得这两个开邻域不相交,(即若$A,B\subset X,A\cap B=\varnothing$,则$A$有一个开邻域$U$,$B$有一个开邻域$V$,使得$U\cap V=\varnothing$,则称$X$是一个<strong>正规空间</strong>.</p><p>设$X$是一个拓扑空间,则$X$是一个正规空间当且仅当对于任何闭集$A\subset X$和$A$的任意一个邻域$U$,存在一个$A$的开邻域$V$使得$\bar V\subset U$.</p><blockquote><p>令$X=\lbrace1,2,3\rbrace$和$\mathscr{T}=\lbrace\varnothing,\lbrace1\rbrace,\lbrace2,3\rbrace,\lbrace1,2,3\rbrace\rbrace$,则$X$正则且正规,但不是$T_0$,$T_1$,$T_2$空间.<br>若有实数空间$(\mathbb{R},\mathscr{T})$,令$K=\lbrace\dfrac1n|n\in \mathbb{Z}_+\rbrace,\mathscr{T}_1=\lbrace G-E|G\in\mathscr{T},E\subset K\rbrace$,则$(\mathbb{R},\mathscr{T}_1)$是一个Hausdorff空间,但不是一个正则空间,也不是一个正规空间.<br>令$X=\lbrace1,2,3\rbrace,\mathscr{T}=\lbrace\varnothing,\lbrace1\rbrace,\lbrace2\rbrace,\lbrace1,2\rbrace,\lbrace1,2,3\rbrace\rbrace$,其是一个正规空间,但不是一个正则空间.</p></blockquote><p>正则的$T_1$空间称为$T_3$<strong>空间</strong>,正规的$T_2$空间称为$T_4$<strong>空间</strong>.</p><p>$T_4$空间一定是$T_3$空间,$T_3$空间一定是$T_2$空间.</p><blockquote><p>若有实数空间$(\mathbb{R},\mathscr{T})$,令$\mathscr{T}_1=\lbrace G-E|G\in\mathscr{T},E\in \mathbb{Q}\rbrace$,则$(\mathbb{R},\mathscr{T}_1)$是一个Horsdorff空间,但不是一个正则空间,也不是一个正规空间.<br>令$X=\lbrace(x_1,x_2)\in \mathbb{R}^2|x_2\ge0\rbrace,\mathscr{B}=\lbrace B(x,\varepsilon)|0&lt;\varepsilon&lt;x_2,x=(x_1,x_2)\in X\rbrace\cup\lbrace B(x,x_2)\cup\lbrace(x_1,0)\rbrace|x=(x_1,x_2)\in X\rbrace$.则拓扑$\mathscr{T}$以$\mathscr{B}$为基,拓扑空间$(X,\mathscr{T})$是一个$T_3$空间,正则空间,但不是正规空间.</p></blockquote><p>度量空间都是$T_4$空间.</p><h2 id="Urysohn引理-Tietze扩张定理"><a href="#Urysohn引理-Tietze扩张定理" class="headerlink" title="Urysohn引理,Tietze扩张定理"></a>Urysohn引理,Tietze扩张定理</h2><p><span class="wow">(Urysohn引理)</span>设$X$是一个拓扑空间,$[a,b]$是一个闭区间,则$X$是一个正规空间当且仅当对于$X$中任意两个无交的闭集$A$和$B$,存在一个连续的映射$f:X\rightarrow[a,b]$使得当$x\in A$时$f(x)=a$和当$x\in B$时$f(x)=b$.</p><p>$T_4$空间中任何一个连通子集如果包含着多余一个点,则它一定是一个不可数集.</p><p><span class="wow">(Tietze扩张定理)</span>设$X$是一个拓扑空间,$[a,b]$是一个闭区间,则$X$是一个正规空间当且仅当对于$X$中的任何一个闭集$A$和任何一个连续映射$f:A\rightarrow[a,b]$,有一个连续映射$g:X\rightarrow[a,b]$是$f$的扩张.</p><h2 id="完全正则空间-Tychonoff空间"><a href="#完全正则空间-Tychonoff空间" class="headerlink" title="完全正则空间,Tychonoff空间"></a>完全正则空间,Tychonoff空间</h2><p>设$X$是一个拓扑空间,如果对于任意$x\in X$和$X$中的任何一个不包含$x$的闭集$B$,存在一个连续映射$f:X\rightarrow[0,1]$使得$f(x)=0$以及对任何$y\in B$有$f(y)=1$,则称$X$是一个<strong>完全正则空间</strong>.完全正则的$T_1$空间称为<strong>Tychonoff空间</strong>,或$T_{3.5}$<strong>空间</strong>.</p><ul><li>完全正则空间都是正则空间.</li><li>Tychonoff空间都是$T_3$空间.</li><li>$T_4$空间都是Tychonoff空间.</li><li>正则且正规的空间都是完全正则空间.</li></ul><p><span class="wow">(Tychonoff定理)</span>正则的Lindelöff空间都是正规空间.</p><h2 id="分离性公理与子空间-有限积空间-商空间"><a href="#分离性公理与子空间-有限积空间-商空间" class="headerlink" title="分离性公理与子空间,有限积空间,商空间"></a>分离性公理与子空间,有限积空间,商空间</h2><p>分离性公理都是拓扑不变公理.</p><p>$T_0,T_1,T_2,T_3,T_{3.5}$和正则都是可遗传性质.正规和$T_4$对于闭子空间是可遗传的性质.</p><p>$T_0,T_1,T_2,T_3,T_{3.<br>5}$和正则都是有限可积性质.正规和$T_4$不是有限可积性质.</p><p>所有分离公理都不是可商性质.</p><h2 id="可度量化空间"><a href="#可度量化空间" class="headerlink" title="可度量化空间"></a>可度量化空间</h2><p><span class="wow">(Urysohn嵌入定理)</span>每一个满足第二可数性公理的$T_3$空间都同胚于Hilbert空间$\mathbb{H}$的某一个子空间.</p><p>Hilbert空间$\mathbb{H}$是一个可分空间.其满足第二可数性公理,也是Lindelöff空间.</p><p>设$X$是一个拓扑空间,则下列条件等价:</p><ul><li>$X$是一个满足第二可数性公理的$T_3$(或$T_{3.5}$,或$T_4$)空间.</li><li>$X$同胚于Hilbert空间$\mathbb{H}$的某一个子空间.</li><li>$X$是一个可分(或满足第二可数公理,或Lindelöff)的可度量化的空间.</li></ul><h1 id="紧致性"><a href="#紧致性" class="headerlink" title="紧致性"></a>紧致性</h1><h2 id="紧致空间"><a href="#紧致空间" class="headerlink" title="紧致空间"></a>紧致空间</h2><p>设$X$是一个拓扑空间,如果$X$的每一个开覆盖都有一个有限子覆盖,则称$X$是一个<strong>紧致空间</strong>.</p><blockquote><p>紧致空间都是Lindelöff空间,但反之未必.<br>可数离散空间是Lindelöff空间,但不是紧致空间.<br>$\mathbb{R}$不是紧致空间.</p></blockquote><p>设$X$是一个拓扑空间,$Y$是$X$的一个子集.如果$Y$作为$X$的子空间是一个紧致空间,则称$Y$是$X$的紧致子集.</p><p>设$X$是一个拓扑空间,$Y$是$X$的一个子集.则$Y$是$X$的紧致子集当且仅当每一个$X$中的开集构成的$Y$的覆盖都有有限子覆盖.</p><p>设$\mathscr{A}$是一个集族,如果$\mathscr{A}$的每一个有限子族都有非空的交(即如果$\mathscr{A}_1$是$\mathscr{A}$的一个有限子族,则$\bigcap\limits_{A\in\mathscr{A}_1}\neq\varnothing$),则称$\mathscr{A}$是一个具有<strong>有限交性质</strong>的集族.</p><p>设$X$是一个拓扑空间,则$X$是一个紧致空间当且仅当$X$中的每一个具有有限交性质的闭集族都有非空的交.<span class="wow">(对每一个开覆盖取补集,就是交空的闭集族,有限子覆盖对应有限交空闭集族,取逆否命题就是集族的每一有限子族交不空,则集族交不空.)</span></p><p>设$\mathscr{B}$是拓扑空间$X$的一个基,且$X$中由$\mathscr{B}$中的元素构成的每一个覆盖有一个有限子覆盖,则$X$是一个紧致空间.</p><p>设$X$和$Y$是两个拓扑空间,$f:X\rightarrow Y$是一个连续映射,如果$A$是$X$的一个紧致子集,则$f(A)$是$Y$的一个紧致子集.</p><blockquote><p>实数空间中的开区间与实数空间同胚,故不是紧致空间.</p></blockquote><p>紧致空间中的每一个闭子集都是紧致子集.</p><p>每一个拓扑空间必定是某一个紧致空间的开子空间.<span class="wow">(比如把直线单点紧化,生成圆周)</span><span class="wow">(紧致性不可遗传)</span></p><p>设$X_1,X_2,\cdots,X_n$是$n$个紧致空间,则积空间$X_1\times X_2\times\cdots\times X_n$也是一个紧致空间.</p><h2 id="紧致性与分离性公理"><a href="#紧致性与分离性公理" class="headerlink" title="紧致性与分离性公理"></a>紧致性与分离性公理</h2><p><svg xmlns="http://www.w3.org/2000/svg" width="727" height="278"><defs><marker id="a" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="b" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="c" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="d" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="e" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="f" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="g" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="h" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="i" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="j" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="k" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="l" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="m" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="n" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="o" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker></defs><path fill="#fff" stroke="#323232" stroke-width="2" d="M31 25.005h671V252.81H31z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(31 25.005)" y="99.703"><tspan x="335.5" dy="22"><tspan></tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M51 76.81h120v48H51z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(51 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M88 84.81h20v40H88z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(88 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>4</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M221 76.81h120v48H221z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(221 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M256 84.81h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(256 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>3.5</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M561 76.81h120v48H561z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(561 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M597 84.81h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(597 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>2</tspan></tspan></text><path fill="none" d="M77 80.81h20v40H77z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(77 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M239 80.81h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(239 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M586 80.81h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(586 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M391 76.81h120v48H391z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(391 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M415 80.81h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(415 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M426 84.81h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(426 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>3</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M211 186.81h140v48H211z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(211 186.81)" y="9.8"><tspan x="70" dy="22"><tspan>完全正则空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M51 186.81h120v48H51z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(51 186.81)" y="9.8"><tspan x="60" dy="22"><tspan>正规空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M391 186.81h120v48H391z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(391 186.81)" y="9.8"><tspan x="60" dy="22"><tspan>正则空间</tspan></tspan></text><path fill="none" marker-end="url(&quot;#a&quot;)" stroke="#323232" stroke-width="2" d="M256.534 123.757v31h0v31"/><path fill="none" marker-end="url(&quot;#b&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M305.962 185.757v-31h0v-31"/><path fill="none" d="M290.368 139.547h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(290.368 139.547)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text><path fill="none" d="M279.368 135.547h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(279.368 135.547)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><g><path fill="none" marker-end="url(&quot;#c&quot;)" stroke="#323232" stroke-width="2" d="M418.472 122.705v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#d&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M467.901 185.705v-31h0v-31"/></g><g><path fill="none" d="M452.307 138.494h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(452.307 138.494)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M441.307 134.494h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(441.307 134.494)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#e&quot;)" stroke="#323232" stroke-width="2" d="M95.863 125.313v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#f&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M145.292 187.313v-31h0v-31"/></g><g><path fill="none" d="M129.698 141.103h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(129.698 141.103)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M118.698 137.103h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(118.698 137.103)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" d="M25 26.81h113.698v39H25z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(25 26.81)" y="5.3"><tspan x="57" dy="22"><tspan>紧致空间</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#g&quot;)" stroke="#323232" stroke-width="2" d="M211 210.81h-20 0-20"/></g><g><path fill="none" marker-end="url(&quot;#h&quot;)" stroke="#323232" stroke-width="2" d="M391 100.81h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#i&quot;)" stroke="#323232" stroke-width="2" d="M341 100.81h50"/></g><g><path fill="none" marker-end="url(&quot;#j&quot;)" stroke="#323232" stroke-width="2" d="M561 100.81h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#k&quot;)" stroke="#323232" stroke-width="2" d="M511 100.81h50"/></g><g><path fill="none" marker-end="url(&quot;#l&quot;)" stroke="#323232" stroke-width="2" d="M221 100.81h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#m&quot;)" stroke="#323232" stroke-width="2" d="M171 100.81h50"/></g><g><path fill="none" marker-end="url(&quot;#n&quot;)" stroke="#323232" stroke-width="2" d="M391 210.81h-20 0-20"/></g><g><path fill="none" marker-end="url(&quot;#o&quot;)" stroke="#323232" stroke-width="2" d="M351 210.81h40"/></g></svg></p><p>设$X$是一个Hausdorff空间.如果$A$是$X$的一个不包含点$x\in X$的紧致子集,则点$x$和紧致子集$A$分别有开邻域$U$和$V$使得$U\cap V=\varnothing$.</p><p>从而,Hausdorff空间的每一紧致子集都是闭集.</p><p>整理如下:<br>|                     |                               |<br>| ——————- | —————————– |<br>| 紧致空间            | 闭集$\Rightarrow$紧致子集     |<br>| Hausdorff空间       | 闭集$\Leftarrow$紧致子集      |<br>| 紧致的Hausdorff空间 | 闭集$\Leftrightarrow$紧致子集 |</p><p>从而,每一个紧致的Hausdorff空间都是正则空间.从而是$T_3$空间.</p><p>设$X$是一个Hausdorff空间.如果$A$和$B$是$X$的两个无交的紧致子集,则它们分别有开邻域$U$和$V$使得$U\cap V=\varnothing$.</p><p>从而,每一个紧致的Hausdorff空间都是$T_4$的.</p><p>设$X$是一个正则空间.如果$A$是$X$中的一个紧致子集,$U$是$A$的一个开邻域,则存在$A$的一个开邻域使得$\bar V\subset U$.</p><p>从而,紧致的正则空间都是正规空间.<span class="wow">这是显然的,因为紧致空间都是Lindelöff空间.</span></p><p>从紧致空间到Hausdorff空间的任何一个连续映射都是闭映射.</p><p>从而,紧致空间到Hausdorff空间的任何一个一一的连续映射都是同胚.</p><h2 id="mathbb-R-n-中的紧致子集"><a href="#mathbb-R-n-中的紧致子集" class="headerlink" title="$\mathbb{R}^n$中的紧致子集"></a>$\mathbb{R}^n$中的紧致子集</h2><p>设$(X,\rho)$是一个度量空间,$A\subset X$.如果存在实数$M&gt;0$使得$\rho(x,y)&lt;M$对所有$x,y\in A$成立,则称$A$是$X$的一个<strong>有界子集</strong>;如果$X$本身是一个有界子集,则称$X$是一个<strong>有界度量空间</strong>.</p><p>紧致度量空间是有界的.</p><p>单位闭区间$[0,1]$是紧致空间.</p><p>设$A$是$\mathbb{R}^n$的一个子集,则$A$是一个紧致子集当且仅当$A$是一个有界闭集.</p><p>设$X$是一个非空的紧致空间,$f:X\rightarrow\mathbb{R}$是一个连续映射,则存在$x_1,x_2$使得对于任意$x\in X$,有$f(x_1)\le f(x)\le f(x_2)$.</p><blockquote><p>设$m,n\in\mathbb{Z}_+$,$n$维球面$S^n$和$m$维欧式空间$\mathbb{R}^m$不同胚.</p></blockquote><h2 id="其他的紧致性"><a href="#其他的紧致性" class="headerlink" title="其他的紧致性"></a>其他的紧致性</h2><p><svg xmlns="http://www.w3.org/2000/svg" width="620.44" height="212.76"><defs><marker id="a" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="b" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="c" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="d" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="e" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="f" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker></defs><path fill="#fff" stroke="#323232" stroke-width="2" d="M239.968 139.762h140v48h-140z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(239.968 139.762)" y="9.8"><tspan x="70" dy="22"><tspan>序列紧致空间</tspan></tspan></text><path fill="none" marker-end="url(&quot;#a&quot;)" stroke="#323232" stroke-width="2" d="M279.502 74.328v31h0v31"/><path fill="none" marker-end="url(&quot;#b&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M328.931 138.233v-31h0v-31"/><path fill="none" d="M427.146 52.975h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(427.146 52.975)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text><path fill="none" d="M416.146 48.975h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(416.146 48.975)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M344.047 90.245h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(344.047 90.245)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text><path fill="none" d="M333.047 86.245h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(333.047 86.245)" y="5.8"><tspan x="10" dy="22"><tspan>A</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M239.93 25h140v48h-140z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(239.93 25)" y="9.8"><tspan x="70" dy="22"><tspan>可数紧致空间</tspan></tspan></text><g><path fill="#fff" stroke="#323232" stroke-width="2" d="M475.444 25h120v48h-120z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(475.444 25)" y="9.8"><tspan x="60" dy="22"><tspan>列紧空间</tspan></tspan></text></g><g><path fill="#fff" stroke="#323232" stroke-width="2" d="M25.01 25h120v48h-120z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(25.01 25)" y="9.8"><tspan x="60" dy="22"><tspan>紧致空间</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#c&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M239.93 59h-45.2 0-45.2"/><path fill="#fff" d="M167.23 51h55v16h-55z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" y="49.05"><tspan x="194.73" dy="16"><tspan>Lindelöff</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#d&quot;)" stroke="#323232" stroke-width="2" d="M144.73 37h92"/></g><g><path fill="none" marker-end="url(&quot;#e&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M475.168 58.524h-45.2 0-45.2"/></g><g><path fill="none" marker-end="url(&quot;#f&quot;)" stroke="#323232" stroke-width="2" d="M379.968 36.524h92"/></g></svg></p><p>设$X$是一个拓扑空间.如果$X$的每一个可数开覆盖都有有限子覆盖,则称$X$是一个<strong>可数紧致空间</strong>.</p><p>每一个紧致空间都是可数紧致空间.</p><p>每一个Lindelöff的可数紧致空间都是紧致空间.</p><p>设$X$是一个拓扑空间.如果$X$的每一个无限子集都有凝聚点,则称$X$是一个<strong>列紧空间</strong>.</p><p>每一个可数紧致空间都是列紧空间.</p><p>设$X$是一个拓扑空间,则$X$是一个可数紧致空间当且仅当由$X$中任意一个非空闭集下降序列$\lbrace A_i\rbrace_{i\in\mathbb{Z}_+}$有非空的交,即$\bigcap\limits_{i\in\mathbb{Z}_+}A_i\neq\varnothing$.</p><p>每一个列紧的$T_1$空间都是可数紧致空间.</p><p>设$X$是一个拓扑空间.如果$X$中的每一个序列都有一个收敛的子序列,则称$X$是一个<strong>序列紧致空间</strong>.</p><p>每一个序列紧致空间都是可数紧致空间.</p><p>每一个满足第一可数性公理的可数紧致空间都是序列紧致空间.</p><p>从而,设$X$是一个满足第一可数性公理的$T_1$空间,$A$是$X$的一个子集,则下列条件等价</p><ul><li>$A$的每个开覆盖都有有限子覆盖</li><li>$A$的每一个可数开覆盖都有有限子覆盖</li><li>$A$中的每一个序列都有子序列收敛于$A$中的点</li><li>$A$中的每一个无限子集都有凝聚点在$A$中</li></ul><p>特别地,$\mathbb{R}^n$中上述推论也成立，且都等价于$A$是一个有界闭集.</p><h2 id="度量空间的紧致性"><a href="#度量空间的紧致性" class="headerlink" title="度量空间的紧致性"></a>度量空间的紧致性</h2><p><svg xmlns="http://www.w3.org/2000/svg" width="820" height="190"><defs><marker id="a" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="b" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="c" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="d" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="e" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="f" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker></defs><path fill="#fff" stroke="#323232" stroke-width="2" d="M25.009 25h770v140h-770z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(25.009 25)" y="55.8"><tspan x="385" dy="22"><tspan></tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M69.58 87h120v48h-120z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(69.58 87)" y="9.8"><tspan x="60" dy="22"><tspan>紧致空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M239.58 87h140v48h-140z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(239.58 87)" y="9.8"><tspan x="70" dy="22"><tspan>可数紧致空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M629.58 87h120v48h-120z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(629.58 87)" y="9.8"><tspan x="60" dy="22"><tspan>列紧空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M434.58 87h140v48h-140z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(434.58 87)" y="9.8"><tspan x="70" dy="22"><tspan>序列紧致空间</tspan></tspan></text><path fill="none" d="M28.58 35.462h113.698v39H28.58z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(28.58 35.462)" y="5.3"><tspan x="57" dy="22"><tspan>度量空间</tspan></tspan></text><g><path fill="none" marker-end="url(&quot;#a&quot;)" stroke="#323232" stroke-width="2" d="M434.58 111h-27.5 0-27.5"/></g><g><path fill="none" marker-end="url(&quot;#b&quot;)" stroke="#323232" stroke-width="2" d="M382.272 111h50"/></g><g><path fill="none" marker-end="url(&quot;#c&quot;)" stroke="#323232" stroke-width="2" d="M629.58 111h-27.5 0-27.5"/></g><g><path fill="none" marker-end="url(&quot;#d&quot;)" stroke="#323232" stroke-width="2" d="M577.657 111h50"/></g><g><path fill="none" marker-end="url(&quot;#e&quot;)" stroke="#323232" stroke-width="2" d="M239.58 111h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#f&quot;)" stroke="#323232" stroke-width="2" d="M188.426 111h50"/></g></svg></p><p>设$(X,\rho)$是一个度量空间$\mathscr{A}$是$X$的一个开覆盖.实数$\lambda&gt;0$称为开覆盖$\mathscr{A}$的一个<strong>Lebesgue数</strong>,如果对于$X$中的任何一个子集$A$,只要直径$\mathrm{diam}(A)&lt;\lambda$,则$A$包含于开覆盖$\mathscr{A}$的某一个元素之中.</p><p><span class="wow">(Lebesgue数定理)</span>序列紧致的度量空间的每一个开覆盖有一个Lebesgue数.</p><p>每一个序列紧致的度量空间都是紧致空间.</p><p>因此,设$X$是一个度量空间,则下列条件等价:</p><ul><li>$X$是一个紧致空间</li><li>$X$是一个紧列空间</li><li>$X$是一个序列紧致空间</li><li>$X$是一个可数紧致空间</li></ul><h2 id="局部紧致空间-仿紧致空间"><a href="#局部紧致空间-仿紧致空间" class="headerlink" title="局部紧致空间,仿紧致空间"></a>局部紧致空间,仿紧致空间</h2><p><svg xmlns="http://www.w3.org/2000/svg" width="595" height="276"><defs><marker id="a" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="b" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="c" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="d" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="e" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="f" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="g" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="h" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="i" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="j" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker></defs><path fill="#fff" stroke="#323232" stroke-width="2" d="M25 25h545v226H25z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(25 25)" y="98.8"><tspan x="272.5" dy="22"><tspan></tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M81 78h120v48H81z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(81 78)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M116 86h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(116 86)" y="10.05"><tspan x="10" dy="16"><tspan>3.5</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M432 78h120v48H432z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(432 78)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M468 86h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(468 86)" y="10.05"><tspan x="10" dy="16"><tspan>2</tspan></tspan></text><path fill="none" d="M99 82h20v40H99z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(99 82)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M457 82h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(457 82)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M262 78h120v48H262z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(262 78)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M286 82h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(286 82)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M297 86h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(297 86)" y="10.05"><tspan x="10" dy="16"><tspan>3</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M82 188h140v48H82z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(82 188)" y="9.8"><tspan x="70" dy="22"><tspan>完全正则空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M262 188h120v48H262z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(262 188)" y="9.8"><tspan x="60" dy="22"><tspan>正则空间</tspan></tspan></text><path fill="none" marker-end="url(&quot;#a&quot;)" stroke="#323232" stroke-width="2" d="M122.534 124.947v31h0v31"/><path fill="none" marker-end="url(&quot;#b&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M171.962 186.947v-31h0v-31"/><path fill="none" d="M156.368 140.737h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(156.368 140.737)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text><g><path fill="none" d="M145.368 136.737h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(145.368 136.737)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#c&quot;)" stroke="#323232" stroke-width="2" d="M289.472 123.895v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#d&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M338.901 186.895v-31h0v-31"/></g><g><path fill="none" d="M323.307 139.684h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(323.307 139.684)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M312.307 135.684h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(312.307 135.684)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" d="M36.302 28H150v39H36.302z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(36.302 28)" y="5.3"><tspan x="57" dy="22"><tspan>局部紧致空间</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#e&quot;)" stroke="#323232" stroke-width="2" d="M262 102h-30.5 0H201"/></g><g><path fill="none" marker-end="url(&quot;#f&quot;)" stroke="#323232" stroke-width="2" d="M212 102h50"/></g><g><path fill="none" marker-end="url(&quot;#g&quot;)" stroke="#323232" stroke-width="2" d="M432 102h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#h&quot;)" stroke="#323232" stroke-width="2" d="M382 102h50"/></g><g><path fill="none" marker-end="url(&quot;#i&quot;)" stroke="#323232" stroke-width="2" d="M262 212h-20 0-20"/></g><g><path fill="none" marker-end="url(&quot;#j&quot;)" stroke="#323232" stroke-width="2" d="M222 212h40"/></g></svg></p><p>设$X$是一个拓扑空间.如果$X$中的每一个点都有一个紧致的邻域,则称$X$是一个<strong>局部紧致空间</strong>.</p><blockquote><p>每一个紧致空间都是局部紧致空间.<br>$\mathbb{R}^n$是局部紧致空间.</p></blockquote><p>每一个局部紧致的Hausdorff空间都是正则空间.</p><p>设$X$是一个局部紧致的正则空间,$x\in X$,则点$x$的所有紧致邻域构成$X$在$x$的一个邻域基.</p><p>每一个局部紧致的正则空间都是完全正则空间.</p><hr><p><svg xmlns="http://www.w3.org/2000/svg" width="727" height="278"><defs><marker id="a" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="b" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="c" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="d" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="e" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="f" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="g" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="h" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="i" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="j" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="k" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="l" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="m" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="n" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker><marker id="o" viewBox="0 0 16 12" refX="16" refY="6" markerUnits="userSpaceOnUse" markerWidth="16" markerHeight="12" orient="auto"><path fill="#323232" stroke="#323232" stroke-width="2" d="M0 2l14 4-14 5V2"/></marker></defs><path fill="#fff" stroke="#323232" stroke-width="2" d="M31 25.005h671V252.81H31z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(31 25.005)" y="99.703"><tspan x="335.5" dy="22"><tspan></tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M51 76.81h120v48H51z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(51 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M88 84.81h20v40H88z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(88 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>4</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M221 76.81h120v48H221z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(221 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M256 84.81h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(256 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>3.5</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M561 76.81h120v48H561z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(561 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M597 84.81h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(597 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>2</tspan></tspan></text><path fill="none" d="M77 80.81h20v40H77z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(77 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M239 80.81h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(239 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M586 80.81h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(586 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M391 76.81h120v48H391z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(391 76.81)" y="9.8"><tspan x="60" dy="22"><tspan>&#160;&#160;&#160;&#160;空间</tspan></tspan></text><path fill="none" d="M415 80.81h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(415 80.81)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><path fill="none" d="M426 84.81h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(426 84.81)" y="10.05"><tspan x="10" dy="16"><tspan>3</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M211 186.81h140v48H211z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(211 186.81)" y="9.8"><tspan x="70" dy="22"><tspan>完全正则空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M51 186.81h120v48H51z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(51 186.81)" y="9.8"><tspan x="60" dy="22"><tspan>正规空间</tspan></tspan></text><path fill="#fff" stroke="#323232" stroke-width="2" d="M391 186.81h120v48H391z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(391 186.81)" y="9.8"><tspan x="60" dy="22"><tspan>正则空间</tspan></tspan></text><path fill="none" marker-end="url(&quot;#a&quot;)" stroke="#323232" stroke-width="2" d="M256.534 123.757v31h0v31"/><path fill="none" marker-end="url(&quot;#b&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M305.962 185.757v-31h0v-31"/><path fill="none" d="M290.368 139.547h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(290.368 139.547)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text><path fill="none" d="M279.368 135.547h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(279.368 135.547)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text><g><path fill="none" marker-end="url(&quot;#c&quot;)" stroke="#323232" stroke-width="2" d="M418.472 122.705v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#d&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M467.901 185.705v-31h0v-31"/></g><g><path fill="none" d="M452.307 138.494h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(452.307 138.494)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M441.307 134.494h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(441.307 134.494)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#e&quot;)" stroke="#323232" stroke-width="2" d="M95.863 125.313v31h0v31"/></g><g><path fill="none" marker-end="url(&quot;#f&quot;)" stroke="#323232" stroke-dasharray="3px, 3px" stroke-width="2" d="M145.292 187.313v-31h0v-31"/></g><g><path fill="none" d="M129.698 141.103h20v40h-20z"/><text font-family="微软雅黑" font-size="13" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(129.698 141.103)" y="10.05"><tspan x="10" dy="16"><tspan>1</tspan></tspan></text></g><g><path fill="none" d="M118.698 137.103h20v40h-20z"/><text font-family="微软雅黑" font-size="18" font-style="italic" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(118.698 137.103)" y="5.8"><tspan x="10" dy="22"><tspan>T</tspan></tspan></text></g><g><path fill="none" d="M25 26.81h113.698v39H25z"/><text font-family="微软雅黑" font-size="18" font-weight="400" fill="#323232" text-anchor="middle" transform="translate(25 26.81)" y="5.3"><tspan x="57" dy="22"><tspan>仿紧致空间</tspan></tspan></text></g><g><path fill="none" marker-end="url(&quot;#g&quot;)" stroke="#323232" stroke-width="2" d="M211 210.81h-20 0-20"/></g><g><path fill="none" marker-end="url(&quot;#h&quot;)" stroke="#323232" stroke-width="2" d="M391 100.81h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#i&quot;)" stroke="#323232" stroke-width="2" d="M341 100.81h50"/></g><g><path fill="none" marker-end="url(&quot;#j&quot;)" stroke="#323232" stroke-width="2" d="M561 100.81h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#k&quot;)" stroke="#323232" stroke-width="2" d="M511 100.81h50"/></g><g><path fill="none" marker-end="url(&quot;#l&quot;)" stroke="#323232" stroke-width="2" d="M221 100.81h-25 0-25"/></g><g><path fill="none" marker-end="url(&quot;#m&quot;)" stroke="#323232" stroke-width="2" d="M171 100.81h50"/></g><g><path fill="none" marker-end="url(&quot;#n&quot;)" stroke="#323232" stroke-width="2" d="M391 210.81h-20 0-20"/></g><g><path fill="none" marker-end="url(&quot;#o&quot;)" stroke="#323232" stroke-width="2" d="M351 210.81h40"/></g></svg></p><p>设集族$\mathscr{A}$和$\mathscr{B}$都是集合$X$的覆盖.如果$\mathscr{A}$中的每一个元素包含于$\mathscr{B}$的某一个元素中,则称$\mathscr{A}$是$\mathscr{B}$的一个<strong>加细</strong>.</p><p>设$X$是一个拓扑空间.$\mathscr{A}$是$X$的子集$A$的一个覆盖.如果对于每一个$x\in A$,点$x$有一个邻域$U$仅与$\mathscr{A}$中的有限个元素有非空的交,即$\lbrace A\in\mathscr{A}|A\cap U\neq\varnothing\rbrace$是一个有限集,则称$\mathscr{A}$是集合$A$的<strong>局部有限覆盖</strong>.</p><blockquote><p>在实数空间中,令$\mathscr{A}=\lbrace(n-1,n+1)|n\in\mathbb{Z}\rbrace.\mathscr{B}=\lbrace(-n,n)|n\in\mathbb{Z}_+\rbrace$,则$\mathscr{A}$和$\mathscr{B}$都是$\mathbb{R}$的开覆盖,且$\mathscr{A}$是$\mathscr{B}$的加细,而$\mathscr{B}$不是$\mathscr{A}$的加细.$\mathscr{A}$是局部有限覆盖,而$\mathscr{B}$不是局部有限覆盖.</p></blockquote><p>设$X$是一个拓扑空间.如果$X$的每一个开覆盖都有一个局部有限的开覆盖是它的加细,则称$X$是一个<strong>仿紧致空间</strong>.</p><blockquote><p>紧致空间都是仿紧致空间.<br>离散空间都是仿紧致空间.</p></blockquote><p>每一个仿紧致的正则空间都是正规空间.</p><p>每一个仿紧致的Hausdorff空间都是正则空间,因而也是正规空间.</p><p>设$X$是一个满足第二可数性公理的局部紧致的Hausdorff空间.则$X$有一个开覆盖$\lbrace V_1,V_2,\cdots,\rbrace$满足条件:对于每一个$i\in\mathbb{Z}_+$,闭包$\overline{V_i}$是一个包含于$V_{i+1}$的紧致子集.</p><p>每一个满足第二可数性公理的局部紧致的Hausdorff空间都是仿紧致空间.</p><h1 id="完备度量空间"><a href="#完备度量空间" class="headerlink" title="完备度量空间"></a>完备度量空间</h1><h2 id="度量空间的完备化"><a href="#度量空间的完备化" class="headerlink" title="度量空间的完备化"></a>度量空间的完备化</h2><p>设$(X,\rho)$是一个度量空间,$X$中的一个序列$\lbrace x_i\rbrace_{i\in\mathbb{Z}_+}$,如果对于任意给定的实数$\varepsilon&gt;0$存在整数$N&gt;0$使得当$i,j&gt;N$时有$\rho(x_i,x_j)&lt;\varepsilon$,就称序列$\lbrace x_i\rbrace_{i\in\mathbb{Z}_+}$是一个<strong>Cauchy序列</strong>.如果$X$中的每一个Cauchy序列都收敛,则称度量空间$(X,\rho)$是一个<strong>完备度量空间</strong>.</p><blockquote><p>度量空间中的每一个收敛序列都是Cauchy序列,但反之则不然.<br>实数空间$\mathbb{R}$是一个完备度量空间.<br>有理数集$\mathbb{Q}$不是一个完备度量空间.<br>完备性不是拓扑不变性质.</p></blockquote><p>完备度量空间中的每一个闭的度量子空间都是完备度量空间.</p><p>设$(X,\rho)$是一个度量空间,$Y\subset X$,如果$Y$中的每一个Cauchy序列都在$X$中收敛,则$Y$的闭包$\bar Y$中的每一个Cauchy序列也都在$X$中收敛.</p><p>设$(X,\rho)$是一个度量空间,$Y$是$X$的一个稠密子集.如果$Y$中的每一个Cauchy序列都在$X$中收敛,则$X$是一个完备度量空间.</p><p>$n$维欧式空间$\mathbb{R}^n$和Hilbet空间$\mathbb{H}$都是完备度量空间.</p><p>设$(X,\rho)$和$(Y,d)$是两个度量空间,$f:X\rightarrow Y$如果对于任意$x_1,x_2\in X$有$d(f(x_1),f(x_2))=\rho(x_1,x_2)$,则称$f$是一个<strong>保距映射</strong>.如果存在一个从$X$到$Y$的满的保距映射,则称$(X,\rho)$和$(Y,d)$<strong>同距</strong>.</p><blockquote><p>保距映射一定是单射.<br>保距映射的复合还是保距映射.<br>满的保距映射的逆映射还是保距映射.<br>同距关系是等价关系.<br>满的保距映射一定是一个同胚,同距的度量空间是同胚的.</p></blockquote><p>设$X$是一个度量空间,$Y$是一个完备度量空间.如果$X$和$Y$的一个稠密的度量子空间同距,则称$Y$是$X$的一个<strong>完备化</strong>.</p><blockquote><p>实数空间$\mathbb{R}$就是有理数空间$\mathbb{Q}$的完备化.</p></blockquote><p>每一个度量空间都有完备化.且任意两个完备化同距.</p><p>从而.完备度量空间的任何一个完备化都与这个完备空间同距.</p><h2 id="度量空间的完备性和紧致性-Baire定理"><a href="#度量空间的完备性和紧致性-Baire定理" class="headerlink" title="度量空间的完备性和紧致性,Baire定理"></a>度量空间的完备性和紧致性,Baire定理</h2><p>设$(X,\rho)$是一个度量空间,实数$\varepsilon&gt;0$,$X$的有限子集$A$称为一个<strong>$\varepsilon$-网</strong>,如果对于任何$x\in X$有$\varrho(x,A)&lt;\varepsilon$.如果对于任何实数$\varepsilon&gt;0$,$X$有一个$\varepsilon$-网,则称度量空间$(X,\rho)$是<strong>完全有界</strong>的.</p><blockquote><p>完全有界的度量空间都是有界的,反之则不然.<br>无限多个点的离散空间是有界的但不是完全有界的.</p></blockquote><p>设$(X,\rho)$是一个度量空间,则$(X,\rho)$是紧致的当且仅当$(X,\rho)$是一个完全有界的完备度量空间.</p><p>设$(X,\rho)$是一个完备度量空间,如果由$X$的子集构成的一个序列$\lbrace E_1,E_2,\cdots\rbrace$满足条件$E_1\supset E_2\supset\cdots$和$\lim\limits_{i\rightarrow\infty}\mathrm{diam}(E_i)=0$,则$\bigcap\limits_{i\in\mathbb{Z}_+}\overline{E_i}$是一个单点集.</p><p>(Baire定理) 设$(X,\rho)$是一个完备度量空间,如果$G_1,G_2,\cdots$是$X$中的可数个稠密的开集,则交集$\bigcap\limits_{i\in\mathbb{Z}_+}\overline{G_i}$是$X$中的一个稠密子集.</p><p>设$X$是一个拓扑空间,如果$X$的子集$A$的闭包的内部是空集,则称$A$为$X$的一个<strong>无处稠密子集</strong>.$X$的子集$F$如果可以表示为$X$中可数个无处稠密子集之并,则称$F$为<strong>第一范畴集</strong>;$X$的子集,如果不是第一范畴集,则称为<strong>第二范畴集</strong>.</p><p>(Baire定理) 完备度量空间中的任何一个非空开集都是第二范畴集.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>抽代通学经路</title>
      <link href="/2020/03/01/%E6%8A%BD%E4%BB%A3%E9%80%9A%E5%AD%A6%E7%BB%8F%E8%B7%AF/"/>
      <url>/2020/03/01/%E6%8A%BD%E4%BB%A3%E9%80%9A%E5%AD%A6%E7%BB%8F%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<!-- TOC --><ul><li><a href="#基础知识">基础知识</a><ul><li><a href="#集合">集合</a></li><li><a href="#映射">映射</a></li><li><a href="#关系">关系</a></li><li><a href="#运算">运算</a></li></ul></li></ul><!-- /TOC --><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>抽象代数将代数学从一门解方程的学科变成了研究代数运算结构的科学.所谓结构就是事物的框架,是对现行事物的一种抽象.</p><p>很多人将”抽象”看作”复杂”的近义词,事实恰恰相反,”抽象”是”具体”的反义词,而”具体”才是”繁杂”的代名词.可以这样说,研究抽象事物永远比研究具体事物来的简单,因为抽象事物反映了一个事物的核心.越是抽象,对事物的约束就越少,我们可以把焦点放在我们真正关心的性质上.同时内涵越小外延越大,我们从这个抽象中得到的结论就具有更强的适用性.</p><p>我们无时不刻使用着抽象,举例来说,每个人的身份证号就是一种抽象,其将人抽象为表达身份信息的一串数字,因而身份证号可以用于从个人身份的角度区分人.从身份证号里看不出一个人的学识和财富,因为这些不是从根本上区分人和人的因素.所以买车票机票时出示身份证就可以了,而不需要拿出毕业证书或者财产证明.</p><p>抽象可以使事物更简单是确实的.举例来说,如果我们想知道人造卫星绕地球一圈需要多久,只需要知道一些关于人造卫星的参数,如轨道参数等等…我们还可以用物理方法证明飞行周期和质量无关,这意味着所有在一条轨道上飞行的人造卫星都会用同样的时间绕地球一圈.在这里,我们把一个客观实在的人造卫星抽象成了物理上的若干数据,而且很明显这些数据的采集就变成了有目的而不是盲目的,算出的结论不仅适用于一个人造卫星,还适用于其他人造卫星,甚至适用于绕地球的月球和绕太阳的地球.</p><p>但这样的抽象可能会存在一些问题,比如我们如果把自由落体的物体抽象为质点而忽略形状,或者忽略空气阻力…以上的种种就可能使得演算结果和客观实际存在一定的误差.让那些不辞辛劳的科学家和工程师解决什么时候可以忽略误差的问题吧,因为好在在抽象代数中我们并不需要担心这个问题.</p><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><p>现在我们不加详细定义地介绍集合和元素,元素就是”某种东西”的抽象,集合就是”确定的一些东西所构成的整体”的抽象.集合的定义已经建立在严谨的公理集合论之上,可以说集合就是一个被定义出来的数学观念,和我们脑中的集合可以大致等同,但不能不假思索地画上等号,因为其会导致逻辑上的悖论,最著名的就是罗素悖论.</p><ul><li>用大写字母$A,B,C\cdots$表示集合,小写字母$a,b,c\cdots$表示元素,元素$a$属于集合$A$记作$a\in A$,元素$a$不属于集合$A$记作$a\notin A$.</li><li>如果集合$A$和集合$B$所包含的元素完全一致,那么两集合相等,记作$A=B$,这被称为外延公理.</li><li>存在没有元素的集合,也就是空集$\emptyset$,这被称为空集存在公理.</li><li>如果有两个元素$a,b$,那么我们可以给出一个无序对$\lbrace a,b\rbrace $,事实上可以用集合表示这个无序对,换句话说无序对就是一个集合,这被称为配对公理.</li><li>如果有两个集合$A$和$B$,存在它们的并集,包含$A$和$B$二者全部的元素,记作$A\cup B$,这被称为并集公理.</li><li>如果有两个集合$A$和$B$,存在它们的交集,包含$A$和$B$二者所共有元素,记作$A\cap B$.</li><li>如果集合$A$包含集合$B$的部分元素,那么$A$是B的子集,记作$A\subset B$.</li><li>集合也是”某种东西”,所以集合也可以属于另一个集合,例如集合$A=\lbrace a,b\rbrace $有四个子集$\lbrace \rbrace ,\lbrace a\rbrace ,\lbrace b\rbrace ,\lbrace a,b\rbrace $,这四个集合也可以构成一个集合$P(A)=\lbrace \lbrace \rbrace ,\lbrace a\rbrace ,\lbrace b\rbrace ,\lbrace a,b\rbrace \rbrace $,称为$A$的幂集,这被称为幂集公理.</li><li>存在归纳集.归纳集有无穷多个元素,这被称为无穷公理.我们常说的数学归纳法就依赖于归纳集,例如如果一个集合包含$0$,如果包含元素$n$的话就会包含$n+1$,那么可以预想到这个集合大概长这样:$\lbrace 0,1,2,\cdots\rbrace $,无穷公理承认这是一个集合,当然,这就是大家熟悉的自然数集$\mathbb{N}$.同理,空集$\emptyset$是一个集合,$\lbrace \emptyset\rbrace $也是一个集合,以此类推可以得到$\lbrace \emptyset,\lbrace \emptyset\rbrace \rbrace $,$\lbrace \emptyset,\lbrace \emptyset\rbrace ,\lbrace \lbrace \emptyset\rbrace \rbrace \rbrace $等等,无穷公理说上述提到的所有集合,一直到无穷,可以构成一个集合,这个集合大概是这个样子$\lbrace \emptyset,\lbrace \emptyset\rbrace ,\lbrace \emptyset,\lbrace \emptyset\rbrace \rbrace ,\cdots\rbrace $.事实上,在皮亚诺(Peano)公理中,自然数就是这样被定义出来的.</li><li>集合中元素个数若有限,则称集合为有限集,否则为无限集.元素的个数可以被严谨地定义为集合的基数,集合$A$的基数记作$\mathbf{Card}(A)$.</li><li>如果有集合$A$和一个描述$f(x)$,我们就可以给出符合描述的$A$的子集,记作$\lbrace x\in A:f(x)\rbrace $,这被称为选择公理模式.例如如果将全体人类记作集合$A$,我们可以做出全体男人的集合,只需要一个判断$f(x)$,其中$x$代表一个人,当其为男人时$f(x)$给出真,反之给出假.那么全体男人就可表示为$\lbrace x\in A:f(x)\rbrace $.选择公理模式限制了集合的描述方式,也就是选择公理在使用前必须有一个先在的集合,这也就避免了罗素悖论:包含一切不属于本集合的元素的集合.换句话说选择模式公理不承认$\lbrace x:f(x)\rbrace $,如果你见到这样的写法只是因为我们默认了某个$A$.如果存在”一切事物的集合$A$”,那么$\lbrace x\in A:f(x)\rbrace $就和$\lbrace x:f(x)\rbrace $等同了,所以选择模式公理也意味着不存在”一切集合的集合”.</li></ul><h3 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h3><p>映射和集合一样是非常基础的概念,可以理解为,若有非空集合$A$和$B$,映射指定$A$到$B$的对应关系$\varphi:A\rightarrow B$,$\forall a\in A,\exists!b\in B,\varphi(a)=b$,换句话说,判断映射只需要以下两个条件</p><ul><li>$\forall a\in A,\varphi(a)\in B$</li><li>若$\varphi(a)\neq\varphi(b)$,则$a\neq b$</li></ul><p>在这里,$A$称为定义域,$B$称为陪域,$b$称为$a$的像,$a$称为$b$的一个原像.由于映射不保证将不同的元素映射为不同的像,所以满足$\varphi(a)=b,a\in A$的元素可能有多个,在这里它们构成一个集合,称为$b$的原像集,记作$\varphi^{-1}(b)$.</p><p>$A$中全体元素在$\varphi$之下的全体像构成的集合称为$\varphi$的值域,记作$\mathbf{Im}(\varphi)$或$\varphi(A)$.</p><p>事实上,映射其实是指定了一个有序对,如$\varphi(a)=b$就可以表示为$(a,b)$.但集合都是无序的,如何表示有序对呢?库拉托夫斯基(Kuratowski)定义$(a,b)$是一个集合,表示$\lbrace \lbrace a\rbrace ,\lbrace a,b\rbrace \rbrace $,其中单元素的集合中的元素被称为有序对的”第一个元素”,另一个元素被称为”第二个元素”.</p><p>可以定义集合$A$和$B$的所有有序对的集合$\lbrace (a,b)|\forall a\in A,\forall b\in B\rbrace $,记作$A\times B$,这种定义方式被称为笛卡尔积(Cartesian product),显然若$A$和$B$都是有限集,且$\mathbf{Card}(A)=m,\mathbf{Card}(B)=n$,则$\mathbf{Card}(A\times B)=mn$.</p><p>所谓映射就是笛卡尔积的子集,换句话说,映射是一个集合,里面的元素是有序对.例如有$A=\lbrace 1,2,3\rbrace ,B={1,2,3,4,5,6,7,8,9}$而$\varphi(x)=2x$作为一个映射,所表示的就是$\lbrace (1,2),(2,4),(3,6)\rbrace $.</p><p>但并不是所有有序对都是可以被包括在一个映射之中,如若有$b=\varphi(a)$,就不能再有$b’=\varphi(a)$,又让$b\neq b’$.也就是$(a,b)$和$(a,b’)$不能被一个映射包含.所以若$\mathbf{Card}(A)=m,\mathbf{Card}(B)=n$,那么$\mathbf{Card}(P(A\times B))=2^{mn}$,但$A$到$B$的映射只有$m^n$种.如果用$\mathscr{A}$表示$A$到$B$全部映射所成之集,就有$\mathbf{Card}(\mathscr{A})=m^n$.</p><p>数是集合,无序对是集合,有序对是集合,映射也是集合.希望读者可以领略到”万物皆集合”这句名言.</p><p>有以下几类特殊的映射:单射将不同的原像映射为不同的像,满射保证陪域内所有的元素都有原像,而一个映射如果即使单射有时满射则称为双射(一一映射).用数学语言来说:</p><ul><li>$\varphi:A\rightarrow B$为单射$\Leftrightarrow$$\forall a,b\in A$,若$a\neq b$,则$\varphi(a)\neq\varphi(b)$.</li><li>$\varphi:A\rightarrow B$为满射$\Leftrightarrow$$\forall b\in B$,$\exists a\in A,\varphi(a)=b$.</li></ul><p>一一映射其实是一个很好的工具,如果两个集合间存在一一映射,那么两个集合的基数一定相同,反之,如果两个集合的基数相同,那么两个集合之间一定存在一一映射.换言之,如果我们遇到了一个未知的集合,这个集合可能是十分具体以至于难以下手,但其可以同另一个我们所熟悉的集合建立一一映射,那事情就简单了,我们完全可以将熟悉的集合中的理论照搬入陌生的集合.而我们最熟悉的集合一定是数集,那么或多或少的事物集合就可以被一一映射到某个数集上去.如果仅从这一点上看,集合是非常简单的,只要我们能将数集研究透彻,就相当于研究了宇宙间的一切集合.</p><p>举例来说,假设一个班有48个人,老师希望将其等分为6个小组,同时不希望有余下的人.这是可以做到的,因为我们可以将一个班上所有的人通过一个双射映射到一个基数为48的集合上去,而数学告诉我们6整除于48,所以这个48个的集合可以被分为6类,每类8个元素.再将这一结论翻译回老师分小组的例子,就可以说明这是可以做到的.不仅如此,宇宙中任意48个事物构成的集合想要等分6份都是可行的,我们在数集上的研究可以一劳永逸地解决宇宙间所有集合的问题,这就是抽象的意义所在.</p><p>双射说明了两个集合的等价性,那么满射强调的是一种包容性,例如如果将世界上所有人构成一个集合$A$,所有国家构成一个集合$B$,那么可以定义一个满射$\varphi:A\rightarrow B$,表示将人向自己的国籍映射.我们可以知道所有国家都会有人,不存在没有人的国家.同时我们可以认为满射将保存一些重要的性质,例如如果所有中国人都是爱好和平的,我们就可以定义中国是一个爱好和平的国家,这对定义集合之上更复杂的结构很有意义.</p><h3 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h3><p>我们常常说某些事物具有某些关系,例如亲子关系,情侣关系等等,这样的说法比较模糊,我们希望对其进行严谨的描述.</p><p>例如假设有集合$A=${小明,小明的父亲,小明的母亲,小明的哥哥,老王},我们就可以定义一个亲子关系$R$,其接受两个人,给出是否为亲子,如”小明$R$小明的父亲”.这其实就相当于一个有序对(小明,小明的父亲),所以,再一次地,我们认为关系是一个集合,其是笛卡尔积的子集,在这里,$R=${(小明,小明的父亲),(小明,小明的母亲),(小明的哥哥,小明的父亲),(小明的哥哥,小明的母亲),(小明的父亲,小明),(小明的母亲,小明),(小明的父亲,小明的哥哥),(小明的母亲,小明的哥哥)},在这里(小明,老王)不在$R$的集合中,所以认为小明和老王没有亲子关系.</p><p>在这里,这个关系定义在$A\times A$上,我们可以直接说这个关系定义在$A$上.但更一般的,关系也可以定义在$A\times B$上,只要其是笛卡尔积所构成的集合即可.</p><p>亲子关系其实是一个互相的关系,即如果$aRb$,那么一定有$bRa$,这被称为对称性.但是并非所有关系都具有对称性,举例来说$R’=${(小明,小明的父亲),(小明的哥哥,小明的父亲)}就指定了”父亲关系”,你可以说”从小明到小明的父亲是一个父亲关系”,但不能说”从小明的父亲到小明是一个父亲关系”.但具有对称性的关系就可以互相说明”从小明到小明的父亲是一个亲子关系”以及”从小明的父亲到小明是一个亲子关系”,这种时候就可以直接说”小明和小明的父亲是一个亲子关系”,在语言上也是有这样的区别的.</p><p>另一个重要的性质是”自反性”,即$aRa$,亲子关系和父亲关系都没有这样的性质,一个满足自反性的关系是”老乡关系”,如果小明一家来自北京,老王来自冥王星,那么就可以说”小明和自己是老乡”,”老王和自己是老乡”,虽然听起来怪怪的,但其确实正确的,但”小明是自己的父亲”就完全错误了.</p><p>“老乡关系”还具有传递性,即若$aRb,bRc$,则$aRc$.传递性可以这样理解:老乡的老乡还是老乡.</p><p>一个同时具有自反性,对称性,传递性的关系被称为等价关系,等价关系常用”~”表示.老乡关系就是等价关系.这里总结等价关系的判定如下:</p><p>设$\sim$为$A$的一个关系,称$\sim$为等价关系,如果:</p><ul><li>自反性:$\forall a\in A,(a,a)\in R$</li><li>对称性:$\forall a,b\in A,(a,b)\in R\Rightarrow(b,a)\in R$</li><li>传递性:$\forall a,b,c\in A,(a,b)\in R,(b,c)\in R\Rightarrow(a,c)\in R$</li></ul><p>只要一个关系是等价关系,其就可以对原集合产生一个划分.如记$A=${地球上所有人},”国籍关系$\sim$”指出两个人具有相同的国籍,有”习大大$R$毛爷爷”,因为他们两个都是中国人.那么所有中国人可以构成$A$的一个子集,在这个子集中,任何两个人都具有”国籍关系”,于是就可以把这个集合称为”中国人集合”,而于此类似地也可以定义”美国人集合”,”英国人集合”等等.</p><p>所有的这些集合又可以构成一个集合,称为”国家人口集合”,又由于每个国家的人都可以代表他的国家,所以我们可以从每个国家中取一个代表元,记作$[x]$,那么这个集合大概长这样:{[习大大],[川建国],[普京大帝],$\cdots$},这个集合被称为$A$在等价关系$~$的商集,记作$A/\sim$.直观上理解,就是用地球上所有人,对地球上所有国家做了除法.</p><p>注意,此时如果我们定义$B=${所有国家},那么就会存在从$A/\sim$到$B$的一一映射,这是不难理解的.</p><p>举一个数学上的例子,如果我们有整数集$\mathbb{Z}$,以及正整数$n$,而定义等价关系$a\sim b$有$a-b=kn,k\in \mathbb{Z}$,即$a,b$除以$n$得到的余数相同,此时称$a,b$模$n$同余.请读者自行证明$\sim$是一个等价关系.</p><p>这个等价关系将整数集划分成了若干个等价类,如$\lbrace \cdots,-n,0,n,\cdots\rbrace $或$\lbrace \cdots,-n+1,1,n+1,\cdots\rbrace $等等,所有这些集合可以构成商集$\mathbb{Z}/\sim=\lbrace [0],[1],\cdots,[n-1]\rbrace $,这被称为模$n$剩余类集,记作$\mathbb{Z}_n$,其与$\lbrace 0,1,\cdots,n-1\rbrace $存在双射.</p><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><p>仅研究集合其实是比较无聊的,我们希望通过映射来建立集合和集合的关系,</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>抽象代数</title>
      <link href="/2020/02/27/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/"/>
      <url>/2020/02/27/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<!-- TOC --><ul><li><a href="#群论">群论</a><ul><li><a href="#群的定义">群的定义</a></li><li><a href="#变换群和置换群">变换群和置换群</a></li><li><a href="#循环群">循环群</a></li><li><a href="#子群与陪集">子群与陪集</a></li></ul></li></ul><!-- /TOC --><h1 id="群论"><a href="#群论" class="headerlink" title="群论"></a>群论</h1><h2 id="群的定义"><a href="#群的定义" class="headerlink" title="群的定义"></a>群的定义</h2><p>在非空集合$G$中定义运算”$\cdot$”,若满足:</p><ul><li>(I) 运算封闭,即$\forall a,v\in G, ab\in G$</li><li>(II) 运算结合律,即$\forall a,b,c\in G, (ab)c=a(bc)$</li><li>(III) $\forall a,b\in G,ax=b,ya=b$均有解.</li></ul><p>则称$G$为群.</p><p>若$G$为群,则$G$总有左单位元,即:</p><ul><li>(IV) $\exists e\in G$, $\forall a\in G, ea=a$</li></ul><p>若$G$为群,则$G$中任意元素都有左逆,即:</p><ul><li>(V) $\forall a\in G,\exists a^{-1}\in G, a^{-1}a=e$</li></ul><p>可以证明,左单位元也是右单位元,左逆元也是又逆元,单位元和逆元唯一.</p><p>给出群$G$第二定义:(I),(II),(III)$\Leftrightarrow$(I),(II),(IV),(V)</p><p>群满足左右消去律:</p><ul><li>(III’) $\forall a\in G,ax=ax’\Rightarrow x=x’,ya=y’a\Rightarrow y=y’$</li></ul><p>若$G$为有限群,给出第二定义:(I),(II),(III)$\Leftrightarrow$(I),(II),(III’).</p><p>在群$G$中,使得$a^n=e$的最小正整数$n$称为$a$的阶.若$n$不存在,称$a$的阶为无穷.</p><h2 id="变换群和置换群"><a href="#变换群和置换群" class="headerlink" title="变换群和置换群"></a>变换群和置换群</h2><p>设有$A$上的一个变换$\tau$,即$\tau:a\rightarrow\tau(a)$,记作$a^\tau$.</p><p>设$|A|=n$,则$A$上的变换共有$n^n$个变换,$n!$个一一变换.</p><p>记$S=${$A$的所有一一变换}.在$S$上定义乘法,有$\tau_1\tau_2:a\rightarrow(a^{\tau_1})^{\tau_2}$,则$S$作成群.</p><p>反之,如果某集合上的变换作成群,则变换一定是一一的.</p><p>Cayley定理:任何群都与变换群同构.</p><blockquote><p>设有群$G$,定义$\forall x\in G,\tau_x: g\rightarrow gx$,容易验证$\tau_x$为$G\rightarrow G$的一一变换.记$\bar G={\tau_x,x\in G}$<br>规定$\bar G$的乘法,$\tau_x\tau_y=\tau_{xy}$,容易证明$\bar G$为群.<br>定义$\varphi:G\rightarrow\bar G:x\rightarrow\tau_x$,可以证明$\tau$是同构映射.</p></blockquote><p>有限集合上一一变换称为置换,变换群称为置换群.</p><p>$n$个元素的集合共有$n!$种置换,所有置换构成的群称为$n$次对称群.</p><p>任何一个置换都可以写成若干循环置换的乘积.</p><h2 id="循环群"><a href="#循环群" class="headerlink" title="循环群"></a>循环群</h2><p>若群$G$中存在某一元素$a$,任意$G$中的元素都可以表示为$a$的乘方,则称$G$为循环群,$a$为生成元,记为$G=(a)$.</p><blockquote><p>取$G$为所有模$n$剩余类,$G={[0],[1],\cdots[n-1]}$,定义乘法$[a]+[b]=[a+b]$.$G$作成模$n$剩余类加群$\mathbb{Z}_n$.</p></blockquote><p>定理:设$G$为$a$生成的循环群,则$G$的构造由$a$的阶决定:若$a$的阶为无穷,则$G$与整数加群同构;若$a$的阶为$n$,则$G$与模$n$剩余类加群同构.</p><h2 id="子群与陪集"><a href="#子群与陪集" class="headerlink" title="子群与陪集"></a>子群与陪集</h2><ul><li>(i) $a,b\in H \Rightarrow ab\in H$</li><li>(ii) $a\in H\Rightarrow a^{-1}\in H$</li><li>(iii) $a,b\in H\Rightarrow ab^{-1}\in H$    </li></ul><p>若$G$为群,$H$为$G$的子集,若$H$为群,称为子群.作成子群的条件:(i),(ii)$\Leftrightarrow$(iii).</p><p>若$H$有限,作成有限子群的条件:(i).</p><p>对群$G$,子群$H$,规定等价关系$a\sim b\Leftrightarrow ab^{-1}\in H$.有等价关系确定群的一个分类$Ha={ha|h\in H}$为$H$的含$a$的右陪集.</p><p>对群$G$,子群$H$,规定等价关系$a\sim b\Leftrightarrow b^{-1}a\in H$.有等价关系确定群的一个分类$aH={ah|h\in H}$为$H$的含$a$的左陪集.</p><blockquote><p>记$H=n\mathbb{Z}$，其为整数群$G=\mathbb{Z}$的子群,规定等价关系$a\sim b\Leftrightarrow a-b\in H$,即$a-b=kn,k\in\mathbb{Z}$.右陪集$Ha={h+a|h\in H}={b|a\equiv b(\mathbf{mod}\ n),b\in\mathbb{Z}}$.</p></blockquote><p>陪集具有以下结论:</p><ul><li>每个陪集中元素个数相同,等于子群$H$中元素个数</li><li>陪集个数$n=[G:H]=\dfrac{|G|}{|H|}$</li><li>左右陪集可能不相同,但左右陪集存在双射$Ha\leftrightarrow a^{-1}H$</li><li>任何元素的阶能整除$G$的阶</li><li>素数阶群必定只由一个元素生成(循环群)</li></ul><blockquote><p>$S_3={(1),(1,2),(1,3),(2,3),(1,2,3),(1,3,2)}$的子群$H={(1),(1,2,3),(1,3,2)}$有<br>$H(1)=H(1,2,3)=H(1,3,2)=H$,<br>$H(1,2)=H(2,3)=H(1,3)={(1,2),(2,3),(1,3)}$,<br>$(1)H=(1,2,3)H=(1,3,2)H=H$,<br>$(1,2)H=(2,3)H=(1,3)H={(1,2),(2,3),(1,3)}$.</p></blockquote><p>群$G$的不变子群$N$,如果$\forall a\in G,Na=aN$,记作$N\triangleleft G$.</p><ul><li>交换群的子群都是不变子群</li><li>记集合为中心$N={n|an=na,\forall a\in G}$,则$N$是$G$的不变子群</li><li>子群$N$为不变子群$\Leftrightarrow aNa^{-1}=N,\forall a\in G$</li><li>子群$N$为不变子群$\Leftrightarrow ana^{-1}\in N,\forall a\in G,\forall n\in N$</li></ul><p>$N$为群$G$的不变子群,陪集的集合${aN,bN,\dots},a,b,c\dots\in G$在乘法$(aN)(bN)=(ab)N$作成群,称为商群$G/N$,其阶$|G/N|=\dfrac{|G|}{|N|}$</p><blockquote><p>$N=n\mathbb{Z}$，其为不变子群,在所有分类(陪集)的集合${[0],[1],\dots,[n-1]}$上,加法$[a]+[b]=[a+b]$做成群$\mathbb{Z}_n$.</p></blockquote><h2 id="群同态"><a href="#群同态" class="headerlink" title="群同态"></a>群同态</h2><p>设有集合$G$,$\bar G$,分别在其上定义了乘法.若$G$为群,且$G$到$\bar G$关于它们的乘法同态,则$\bar G$也是群.若$G$到$\bar G$关于它们的乘法同构,且$\bar G$为群,则$G$也是群.</p><p>设$G$是群,$N\triangleleft G$,则从$G$到$G/H$的映射$\varphi$是同态,称为自然同态.有$\mathrm{ker}\varphi=N$.</p><p>群的同态基本定理:设$\varphi$是$G$到$\bar G$的群同态,则$G/\mathrm{ker}\varphi\cong\bar G$</p><p>设$\varphi$是$G$到$\bar G$的群同态,则同态像$\varphi(G)$同构于商群$G/\mathrm{ker}\varphi$.</p><p>对应定理:设$\varphi$是$G$到$\bar G$的群同态,则</p><ul><li>若$H$是$G$的子群,则$\varphi(H)$是$\bar G$的子群.</li><li>若$K$是$\bar G$的子群,则$\varphi^{-1}(K)$是$G$的子群,且$\mathrm{ker}\varphi\subset\varphi^{-1}(K)$</li><li>映射$H\rightarrow\varphi(H)$定义了$G$的包含$\mathrm{ker}\varphi$的子群族与$\bar G$的子群族间的一一对应,在这个对应下,$H$是$G$的正规子群当且仅当$\varphi(H)$是$\bar G$的正规子群,此时还有$G/H\cong\bar G/\varphi(H)$.</li></ul><p>第一同构定理:设$H,N$是群$G$的正规子群,$H\subset N$,则$(G/H)/(N/H)\cong G/N$.</p><p>第二同构定理:设$N$是群$G$的正规子群,$K$是$G$的子群,则$N\cap K$是$K$的正规子群,且$KH/H\cong K/N\cap K$.</p><p>群$G$到自身的同构称为自同构,全体自同构在映射的复合下构成自同构群$\mathrm{Aut}G$.对$g\in G$自同构$\varphi(x)=gxg^{-1}$称为内自同构,全体内自同构构成内自同构群,记作$\mathrm{Inn}G$,有$\mathrm{Inn}G\triangleleft\mathrm{Aut}G$,且$\mathrm{Inn}G\cong G/C$,其中$C$是$G$的中心.</p>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS</title>
      <link href="/2020/02/25/CSS/"/>
      <url>/2020/02/25/CSS/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><!-- TOC --><ul><li><a href="#css">CSS</a><ul><li><a href="#样式表">样式表</a></li><li><a href="#像素">像素</a></li><li><a href="#选择器">选择器</a><ul><li><a href="#常用选择器">常用选择器</a></li><li><a href="#集合选择">集合选择</a></li><li><a href="#关系选择">关系选择</a></li><li><a href="#属性选择器">属性选择器</a></li><li><a href="#伪类选择器">伪类选择器</a></li><li><a href="#伪元素选择器">伪元素选择器</a></li><li><a href="#继承">继承</a></li><li><a href="#选择器权重">选择器权重</a></li></ul></li><li><a href="#文档流">文档流</a></li><li><a href="#盒子模型">盒子模型</a><ul><li><a href="#边框">边框</a></li><li><a href="#内外边距">内外边距</a></li><li><a href="#盒子的其它属性">盒子的其它属性</a></li><li><a href="#布局">布局</a></li><li><a href="#行内元素的盒子模型">行内元素的盒子模型</a></li></ul></li><li><a href="#重置样式表">重置样式表</a></li><li><a href="#浮动clearfix">浮动&amp;clearfix</a><ul><li><a href="#float">float</a></li><li><a href="#高度塌陷">高度塌陷</a></li><li><a href="#bfc">BFC</a></li><li><a href="#clear">clear</a></li><li><a href="#外边距异常">外边距异常</a></li><li><a href="#clearfix类">clearfix类</a></li></ul></li><li><a href="#定位">定位</a><ul><li><a href="#相对定位">相对定位</a></li><li><a href="#绝对定位">绝对定位</a></li><li><a href="#固定定位">固定定位</a></li><li><a href="#粘滞定位">粘滞定位</a></li><li><a href="#层级">层级</a></li></ul></li><li><a href="#字体">字体</a><ul><li><a href="#文本属性">文本属性</a></li><li><a href="#图标字体">图标字体</a></li></ul></li><li><a href="#背景">背景</a><ul><li><a href="#背景图">背景图</a></li><li><a href="#渐变">渐变</a></li></ul></li><li><a href="#表格">表格</a></li><li><a href="#动画">动画</a><ul><li><a href="#过渡">过渡</a></li><li><a href="#动画-1">动画</a></li><li><a href="#变形">变形</a></li></ul></li><li><a href="#弹性盒">弹性盒</a><ul><li><a href="#弹性容器">弹性容器</a></li><li><a href="#弹性元素">弹性元素</a></li><li><a href="#应用">应用</a></li></ul></li><li><a href="#响应式布局">响应式布局</a></li><li><a href="#less简介">less简介</a><ul><li><a href="#注释">注释</a></li><li><a href="#变量">变量</a></li><li><a href="#运算">运算</a></li><li><a href="#选择器-1">选择器</a></li><li><a href="#extend">extend</a></li><li><a href="#mixin">mixin</a></li><li><a href="#引入">引入</a></li><li><a href="#编译属性">编译属性</a></li></ul></li></ul></li></ul><!-- /TOC --><p>层叠样式表，用于控制所有显示的表现。网页事实上是多层的结构，CSS可以控制每一层的样式，显示给用户的是最上层的样式。</p><h2 id="样式表"><a href="#样式表" class="headerlink" title="样式表"></a>样式表</h2><p>CSS基本语法包括选择器和声明块。选择器可以选择页面中的指定元素，如<code>p{}</code>选中全部<code>&lt;p&gt;</code>标签。声明块指定选择器元素的样式，由多条声明组成，每个声明是一个名值对，使用<code>name: value;</code>。</p><p>可以使用内联样式，在style的属性值修改样式，这是CSS的语法。内联样式不统一，不便于维护。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: green;font-size: 50px;"</span>&gt;</span></span><br><span class="line">绿色50像素</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p style="color: green;font-size: 50px;">绿色50像素</p><p>可以在<code>&lt;head&gt;</code>里将样式写到<code>&lt;style&gt;</code>中作为内部样式表，对整个网页起作用，<code>&lt;style&gt;</code>标签内的区域属于CSS语法，不与HTML混合。CSS选择器可以选择相应的元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  p&#123;</span><br><span class="line">    color: green;</span><br><span class="line">    font-size: 50px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>外部样式表允许在多个网页里使用样式，将CSS样式编写到外部CSS文件中，然后通过<code>&lt;link&gt;</code>引入到网页中。CSS文件可以使用浏览器的缓存机制，加快网页的加载速度。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="像素"><a href="#像素" class="headerlink" title="像素"></a>像素</h2><p>物理像素由显示器决定，但在CSS像素中的使用的都是CSS像素，浏览器会将CSS像素转换为物理像素，PC端默认情况下两者等大。移动端的视口宽度一般为980px，使得其可以完整浏览PC端网站。不过最好还是实现移动端网站。</p><p>视口是显示的范围，是网页的窗口，放大网页时视口变小。在<code>&lt;head&gt;</code>中设定视口的大小，不同设备的最佳视口大小不同，下面表示将视口调整到完美视口。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于不同设备最佳视口大小不同，不能使用px作为单位了，可以使用vw，100vw相当于视口宽度。可以考虑使用rem进行适配：将设计图中的1px的vw设为rem，随后使用rem作为单位，直接使用设计图中的px单位即可。注意某些浏览器可能会限制rem最小为12px，可以将rem的数值乘以10或100等。</p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="常用选择器"><a href="#常用选择器" class="headerlink" title="常用选择器"></a>常用选择器</h3><dl><dt>元素选择器</dt><dd>根据标签名选择元素，如<code>p{}</code></dd><dt>id选择器</dt><dd>根据id选择一个元素，如<code>#id{}</code></dd><dt>类选择器</dt><dd>根据class选择元素，class可以重复,也允许一个元素使用多个class，多个class间使用空格隔开，如<code>.class{}</code></dd><dt>通配选择器</dr><dd>选择全部元素，使用<code>*{}</code></dd></dl><h3 id="集合选择"><a href="#集合选择" class="headerlink" title="集合选择"></a>集合选择</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blue</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 交集选择器 */</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-class">.blue</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 并集选择器 */</span></span><br><span class="line"><span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关系选择"><a href="#关系选择" class="headerlink" title="关系选择"></a>关系选择</h3><dl><dt>子元素选择器</dt><dd>父元素 > 子元素</dd><dt>后代元素选择器</dt><dd>祖先元素 后代元素</dd><dt>下一个兄弟选择</dt><dd>前一个 + 后一个</dd><dt>后边所有兄弟选择</dd><dd>兄 ~ 弟</dd></dl><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><ul><li><code>[属性]{}</code>表示包含某属性的元素</li><li><code>[属性=值]</code>表示某属性为某值的元素</li><li><code>[属性^=值]</code>表示某属性以某值开头的元素</li><li><code>[属性$=值]</code>表示某属性以某值结束的元素</li><li><code>[属性*=值]</code>表示某属性包含某值的元素</li></ul><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>某些特殊状态的元素可以被划分在一类中，相当于有了类标签，被称为伪类，伪类以一个’:’开头表示。</p><p>-child系列和-of-type系列用于表示和位置相关的元素。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 第一个子元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:first-child</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 最后一个子元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:last-child</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 第1个子元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:nth-child(1)</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 全部子元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:nth-child(n)</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 偶数子元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:nth-child(2n)</span>&#123;&#125;</span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:nth-child(even)</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 奇数子元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:nth-child(2n+1)</span>&#123;&#125;</span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:nth-child(odd)</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 除了第3个元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-pseudo">:not(</span><span class="selector-pseudo">:nth-child(3))</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 第一个li元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:first-of-type</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* 空元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-pseudo">:empty</span>&#123;&#125;</span><br><span class="line"><span class="comment">/* ... */</span></span><br></pre></td></tr></table></figure><p>以下两个伪类常用于超链接。</p><ul><li><code>:link</code> 一般的链接</li><li><code>:visited</code> 访问过的链接，只能修改颜色</li></ul><p>以下是两个和鼠标相关的伪类。</p><ul><li><code>:hover</code> 鼠标移入的</li><li><code>:active</code> 鼠标点击的</li></ul><h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><p>和伪类类似，相当于给特殊位置的文本增加了标签。伪元素使用’::’开头。</p><ul><li><code>::first-letter</code> 首字母</li><li><code>::first-line</code> 首行</li><li><code>::selection</code> 鼠标选中的</li><li><code>::before</code> 元素的开始位置（首元素之前）</li><li><code>::after</code> 元素的结束位置（伪元素之后）<br>::before和::after设置的是content增加的内容，这是CSS的语法。<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'「'</span>;</span><br><span class="line">  <span class="attribute">color</span>: red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>父元素的样式会继承到后代元素中，背景、布局等相关的样式不会继承，<code>text-</code>，<code>font-</code>，<code>line-</code>，<code>list-</code>和<code>color</code>可以继承。</p><h3 id="选择器权重"><a href="#选择器权重" class="headerlink" title="选择器权重"></a>选择器权重</h3><p>不同选择器选择相同的元素时，样式发生冲突时，选择器存在优先级，选择器越具体优先级越高。优先级相同的使用靠后的。</p><ul><li>内联样式  1,0,0,0</li><li>id选择器  0,1,0,0</li><li>类和伪类选择器  0,0,1,0</li><li>元素选择器  0,0,0,1</li><li>通配选择器  0,0,0,0</li><li>继承  没有优先级</li></ul><p>在某一样式后加<code>!important</code>可以设置为最高的优先级，慎用。</p><h2 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a>文档流</h2><p>文档流是最底层，是网页的基础，创建的元素默认都是在文档流中排列。元素主要由两个状态主要有两个状态，就是在文档流中和脱离文档流。</p><p>元素在文档流中的特点</p><ul><li>块元素<ul><li>块元素在页面中独占一行</li><li>默认宽度等于父元素宽度</li><li>默认高度等于子元素高度</li></ul></li><li>行内元素<ul><li>行内元素不会独占一行</li><li>行内元素在页面中自左向右水平排列，自动换行</li><li>行内元素的默认宽度和高度由子元素确定</li></ul></li></ul><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>CSS将页面中的所有元素都设置为矩形的盒子。盒子包括内容（content）、边框（border）、内边距（padding）和外边距（margin）。</p><h3 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">  <span class="comment">/* 内容区 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="comment">/* 边框 */</span></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: gray;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="width:200px; height: 200px; border: 5px gray solid;"></div><p>边框属性主要有</p><dl><dt>border-width</dt><dd>边框宽度</dd><dt>border-color</dt><dd>边框颜色，默认使用<code>color</code>值</dd><dt>border-style</dt><dd>边框样式，包括<code>solid</code>实线、<code>dashed</code>虚线、<code>dotted</code>点线、<code>double</code>双线，默认值为<code>none</code></dd></dl><p>可以为四边分别设置属性，如<code>border-width=10px 20px 30px 40px</code>，顺序为上、右、下、左。左侧缺少时使用右侧，下侧和左侧缺少是使用上侧。</p><p>可以直接使用<code>border: 5px gray solid</code>。</p><p>可以分别使用<code>border-top</code>或<code>border-top-width</code>。</p><h3 id="内外边距"><a href="#内外边距" class="headerlink" title="内外边距"></a>内外边距</h3><p>内边距使用<code>padding</code>，其可以影响盒子的大小，默认使用内容的背景颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bce</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: gray;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line"></span><br><span class="line">  padding= 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="width:300px; height: 150px; border: 5px gray solid; background-color: #bce;padding: 10px;">Lorem ipsum dolor sit amet consectetur adipisicing elit. Perferendis consequatur maiores omnis aut iusto, non, doloribus nobis, quidem itaque modi praesentium aliquid. Ut unde dolorum minima et deleniti adipisci voluptatibus!</div><p><code>padding</code>可也以使用<code>padding-top</code>等标签。盒子的可见框大小由边框、内边距和内容区确定。</p><p>外边距使用<code>margin</code>，使用方法与内边距类似。</p><p><code>margin</code>允许负值。垂直方向的外边距可以重叠，兄弟元素的边距取两个外边距的最大值，如果边距存在负值，则边距取两者之和，两个均为负值取绝对值较大者。</p><p>父子元素的相邻外边距，子元素的外边距会传递给父元素。如果出现布局问题，可以考虑clearfix。</p><h3 id="盒子的其它属性"><a href="#盒子的其它属性" class="headerlink" title="盒子的其它属性"></a>盒子的其它属性</h3><p><code>box-sizing</code>属性确定<code>width</code>和<code>height</code>属性控制的是内容区<code>content-box</code>（默认值）还是可见区<code>border-box</code>。</p><p><code>outline</code>是轮廓，和<code>border</code>类似，但不影响盒子的布局。</p><p><code>box-shadow</code>设置阴影，不影响盒子的布局。用例<code>box-shadow: 20px 20px 20px rgba(0,0,0,.3)</code>，指定右偏移、下偏移、边缘虚化和阴影颜色。</p><p><code>border-radius</code>设置圆角，顺序为左上开始的顺时针。可以使用<code>border-top-left-radius</code>等。可以设置椭圆角，如<code>border-top-left-radius: 20px 40px</code>或<code>border-radius: 20px / 40px</code>，前者为水平半径，后者为垂直半径。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">28em</span>; </span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bda</span>; </span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>; </span><br><span class="line">  <span class="attribute">box-shadow</span>:<span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>); </span><br><span class="line">  <span class="attribute">border-radius</span>:<span class="number">10px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="width:28em; background-color: #bda; padding: 10px; box-shadow:20px 20px 20px rgba(0,0,0,.5); border-radius:10px">宇宙に始まりはあるが終わりはない<br />無限<br />星にもまた始まりはあるが自らの力を持って滅び行く<br />有限<br />叡智を持つ者こそ最も愚かであるのが歴史からも読み取れる<br />海に生ける魚は陸の世界を知らない<br />彼らが叡智を持てばそれもまた滅び行く<br />人間が光の速さを超えるのは<br />魚たちが陸で生活を始めるよりも滑稽<br />これは<br />そんな神からの最後通告に抗った者たちによる<br />執念のエピグラフ</div><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>子元素在父元素中的水平布局，必须保证子元素范围撑满父元素内容区的宽度，浏览器会将不足者默认调整<code>margin-right</code>。可以设置<code>margin-left</code>、<code>margin-right</code>、<code>width</code>为<code>auto</code>，其会充当被调整项。如果有多个<code>auto</code>，<code>width</code>优先调整。而<code>margin-left</code>和<code>margin-right</code>默认平分。<code>width</code>的默认值是<code>auto</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="comment">/* 内容区 */</span></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">ackground-color</span>: <span class="number">#c7c</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="width:300px; height: 150px; border: 5px gray solid; background-color: #bce;padding: 10px;"><div style="width: 100px; height: 100px; background-color: #c7c; margin: auto;"></div></div><p>在垂直布局上，可能出现子元素溢出父元素，可以在父元素中设置<code>overflow</code>属性，处理这种溢出。默认为<code>visible</code>，<code>hidden</code>将溢出部分裁剪，<code>scroll</code>生成滚动条，<code>auto</code>根据需求生成滚动条。</p><p><code>overflow-x</code>和<code>overflow-y</code>分别处理水平方向和垂直方向的溢出属性。</p><div style="width:90%; height: 150px; border: 5px gray solid; background-color: #bce;padding: 10px; overflow: scroll;"><span style="font-size:30px;">玩</span>家影响的输入方式是同步的，电路运行影响的输入方式是非同步的。<br />玩家拉下拉杆在两个边沿都是同步的；而中继器激活在两个边沿都是 非同步的。<br >玩家按下按钮是玩家的动作，在上升沿是同步的；而按钮弹回是自行弹回，在下降沿是非同步的。拌线钩也是同样的道理。<br />玩家放置和破坏一个红石块在两个边沿都是同步的；而放置中继器时，中继器并不会立刻被激活，稍后中继器激活给出的是一个非同步的上升沿信号，破坏一个激活的中继器则会给出同步的下降沿信号。<br />这一点甚至表现在：玩家输入指令给出的信号是同步的，命令方块给出的信号是非同步的。</div><h3 id="行内元素的盒子模型"><a href="#行内元素的盒子模型" class="headerlink" title="行内元素的盒子模型"></a>行内元素的盒子模型</h3><p>行内元素不支持<code>width</code>和<code>height</code>，宽度和高度由内容确定。垂直方向的<code>padding</code>和<code>margin</code>不会影响布局，水平方向不会重叠。</p><p>可以设置元素的显示类型，使用<code>display</code>属性。</p><ul><li><code>inline</code>行内元素</li><li><code>block</code>块元素</li><li><code>inline-block</code>行内块元素，可以设置宽度和高度，又不会独占一行，类似图片。</li><li><code>table</code>表格</li><li><code>none</code>不显示</li></ul><p><code>visibility</code>控制元素的可视程度，默认为<code>visible</code>，<code>hidden</code>为不可见，但占据位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#bd8</span>;</span><br><span class="line">  <span class="comment">/* 若希望文字在元素内竖直居中，可以把line-height设置成与height相同 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="javascript:;" style="display: inline-block;width: 100px; height: 100px; background-color: #bd8; line-height: 100px;">超链接</a></p><h2 id="重置样式表"><a href="#重置样式表" class="headerlink" title="重置样式表"></a>重置样式表</h2><p>浏览器有着默认样式，默认样式的存在有可能影响页面的布局，一般将默认样式去除。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">更有效的方式是使用重置样式表。</span><br><span class="line"></span><br><span class="line">```<span class="selector-tag">css</span></span><br><span class="line"><span class="comment">/* http://meyerweb.com/eric/tools/css/reset/ </span></span><br><span class="line"><span class="comment">   v2.0 | 20110126</span></span><br><span class="line"><span class="comment">   License: none (public domain)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, <span class="selector-tag">applet</span>, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, <span class="selector-tag">pre</span>,</span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, <span class="selector-tag">acronym</span>, <span class="selector-tag">address</span>, <span class="selector-tag">big</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, <span class="selector-tag">s</span>, <span class="selector-tag">samp</span>,</span><br><span class="line"><span class="selector-tag">small</span>, <span class="selector-tag">strike</span>, <span class="selector-tag">strong</span>, <span class="selector-tag">sub</span>, <span class="selector-tag">sup</span>, <span class="selector-tag">tt</span>, <span class="selector-tag">var</span>,</span><br><span class="line"><span class="selector-tag">b</span>, <span class="selector-tag">u</span>, <span class="selector-tag">i</span>, <span class="selector-tag">center</span>,</span><br><span class="line"><span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span>,</span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">canvas</span>, <span class="selector-tag">details</span>, <span class="selector-tag">embed</span>, </span><br><span class="line"><span class="selector-tag">figure</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, </span><br><span class="line"><span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">output</span>, <span class="selector-tag">ruby</span>, <span class="selector-tag">section</span>, <span class="selector-tag">summary</span>,</span><br><span class="line"><span class="selector-tag">time</span>, <span class="selector-tag">mark</span>, <span class="selector-tag">audio</span>, <span class="selector-tag">video</span> &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">font</span>: inherit;</span><br><span class="line"><span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* HTML5 display-role reset for older browsers */</span></span><br><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">details</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">figure</span>, </span><br><span class="line"><span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, <span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">section</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span>, <span class="selector-tag">q</span> &#123;</span><br><span class="line"><span class="attribute">quotes</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-tag">q</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line"><span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br><span class="line"><span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="浮动-amp-clearfix"><a href="#浮动-amp-clearfix" class="headerlink" title="浮动&amp;clearfix"></a>浮动&amp;clearfix</h2><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><p>可以用<code>float</code>设置浮动（<code>left</code>或<code>right</code>），浮动元素脱离文档流。浮动元素不会盖住文字，文字会环绕浮动元素。浮动元素会遮住非浮动元素，但不遮住其他浮动元素，且不会脱离父元素。</p><p>脱离文档流的元素不再占用文档流的位置，不再自动修改外边距以占满父元素宽度。行内元素脱离文档流后变为块元素，元素不再区分行内元素和块元素。</p><p>浮动诞生的本意是引入文字环绕，后来更普遍用于布局。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>导航条练习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> &#123;</span></span><br><span class="line">            list-style: none;</span><br><span class="line">            padding: 0px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line">            width: 1205px;</span><br><span class="line">            height: 48px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#ddd</span>;</span></span><br><span class="line">            margin: 30px auto;            </span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">            line-height: 48px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line">            display: block;</span><br><span class="line">            text-decoration: none;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#777</span>;</span></span><br><span class="line">            font-size: 18px;</span><br><span class="line">            padding: 0px 39px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#3f3f3f</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#eee</span>;            </span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">"HTML系列教程"</span>&gt;</span>HTML/CSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">"浏览器脚本教程"</span>&gt;</span>Browser Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">"服务器脚本教程"</span>&gt;</span>Server Side<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">"编程教程"</span>&gt;</span>Programming<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">"XML系列教程"</span>&gt;</span>XML<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">"建站手册"</span>&gt;</span>Web Building<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">"参考手册"</span>&gt;</span>Reference<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><style>    .NAVdiv ul {        list-style: none;        padding: 0px;    }    .NAVdiv {        width: 1172px;        height: 48px;        background-color: #ddd;        margin: 30px auto;            }    .NAVdiv li {        float: left;        line-height: 48px;    }    .NAVdiv a.NAVa{        display: block;        text-decoration: none;        color: #777;        font-size: 18px;        padding: 0px 39px;    }    .NAVdiv a.NAVa:hover{        background-color: #3f3f3f;        color: #eee;            }</style><div class="NAVdiv">    <ul>        <li><a class="NAVa" href="#" title="HTML系列教程">HTML/CSS</a></li>        <li><a class="NAVa" href="#" title="浏览器脚本教程">Browser Side</a></li>        <li><a class="NAVa" href="#" title="服务器脚本教程">Server Side</a></li>        <li><a class="NAVa" href="#" title="编程教程">Programming</a></li>        <li><a class="NAVa" href="#" title="XML系列教程">XML</a></li>        <li><a class="NAVa" href="#" title="建站手册">Web Building</a></li>        <li><a class="NAVa" href="#" title="参考手册">Reference</a></li>    </ul></div> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span>, <span class="selector-class">.footer</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">0</span> <span class="number">220px</span> <span class="number">0</span> <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>, <span class="selector-class">.middle</span>, <span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">130px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.middle</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#bce</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ceb</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">220px</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">220px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ebc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>.HGFheader, .HGFfooter {  border: 1px solid #333;  background: #ccc;  text-align: center;}.HGFfooter {  clear: both;}.HGFcontainer {  padding:0 220px 0 200px;  overflow: hidden;  text-align:center;}.HGFleft, .HGFmiddle, .HGFright {  position: relative;  float: left;  min-height: 130px;}.HGFmiddle {  width: 100%;  background: #bce;}.HGFleft {  margin-left: -100%;  left: -200px;  width: 200px;  background: #ceb;}.HGFright {  margin-left: -220px;  right: -220px;  width: 220px;  background: #ebc;}</style><div class="HGFheader">    <h4>header</h4></div><div class="HGFcontainer">    <div class="HGFmiddle">        <h4>middle</h4>        <p>middle-content</p>    </div>    <div class="HGFleft">        <h4>left</h4>        <p>left-content</p>    </div>      <div class="HGFright">        <h4>right</h4>        <p>right-content</p>    </div></div><div class="HGFfooter">    <h4>footer</h4></div><h3 id="高度塌陷"><a href="#高度塌陷" class="headerlink" title="高度塌陷"></a>高度塌陷</h3><p>浮动元素可能出现高度塌陷的问题，当父元素高度为auto时，浮动子元素无法将其撑开。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">10px</span> red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: silver;</span><br><span class="line">  <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .BFCexample1{    height: 130px;  }  .BFCouter1{    border: 10px red solid;  }  .BFCinner1{    width: 100px;    height: 100px;    background-color: silver;    float:left;  }</style><div class="BFCexample1"><div class="BFCouter1"><div class="BFCinner1"></div></div></div><h3 id="BFC"><a href="#BFC" class="headerlink" title="BFC"></a>BFC</h3><p>合理的高度塌陷解决方案是BFC（块级格式化环境）。BFC是CSS的一个隐含属性，开启BFC后该元素会变为一个独立的布局区域。开启BFC后，元素不会被浮动元素覆盖，子元素和父元素的外边距不会重叠，可以包含浮动的子元素，从而解决高度塌陷。</p><p>开启BFC的方式有：</p><ul><li>开启浮动（不推荐）</li><li>设置为行内块元素（不推荐）</li><li>将<code>overflow</code>设置为非<code>visible</code>，常用的是<code>hidden</code></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">10px</span> red solid;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: silver;</span><br><span class="line">  <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .BFCouter{    border: 10px red solid;    overflow: hidden;  }  .BFCinner{    width: 100px;    height: 100px;    background-color: silver;    float:left;  }</style><div class="BFCouter"><div class="BFCinner"></div></div><h3 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h3><p><code>clear</code>属性可以清除浮动元素的效果，可以设置<code>left</code>、<code>right</code>或<code>both</code>。原理是浏览器自动计算，为元素添加一个外边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>, <span class="selector-class">.box2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box2</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">  <span class="attribute">clear</span>: left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .CLEARbox1, .CLEARbox2 {    width:100px;    height:100px;    font-size:50px;    padding: 10px;  }  .CLEARbox1 {    background-color: orange;    float:left;  }  .CLEARbox2 {    background-color: pink;    clear: left;  }</style><div class="CLEARbox1">1</div><div class="CLEARbox2">2</div><p>现在用<code>clear</code>解决高度塌陷。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">10px</span> red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: silver;</span><br><span class="line">  <span class="attribute">float</span>:left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="外边距异常"><a href="#外边距异常" class="headerlink" title="外边距异常"></a>外边距异常</h3><p>由于子元素外边距会传递给父元素，会出现外边距异常的问题。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="comment">/* 希望inner到左下角，但二者整体下移了 */</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .MGPROBouter1{    width: 200px;    height: 200px;    background-color: #bfa;  }  .MGPROBinner1{    width: 100px;    height: 100px;    background-color: orange;    margin: 100px 0px;  }</style><div class="MGPROBouter1"><div class="MGPROBinner1"></div></div><p>预期效果：</p><style>  .MGPROBouter2{    width: 200px;    height: 200px;    background-color: #bfa;    overflow: hidden;  }  .MGPROBinner2{    width: 100px;    height: 100px;    background-color: orange;    margin: 100px 0px;  }</style><div class="MGPROBouter2"><div class="MGPROBinner2"></div></div><p>BFC解决方案：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">  <span class="attribute">overflow</span>:hidden; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>伪元素解决方案：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">  <span class="attribute">overflow</span>:hidden; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.outer</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">100px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="clearfix类"><a href="#clearfix类" class="headerlink" title="clearfix类"></a>clearfix类</h3><p>针对上述问题的解决方案是：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><p>定位是一种更加高级的布局手段。使用<code>position</code>属性，取值有：</p><ul><li>static：默认值，不开启定位</li><li>relative 相对定位</li><li>absolute 绝对定位</li><li>fixed 固定定位</li><li>sticky 粘滞定位</li></ul><p>开启定位后，使用偏移量进行定位，包括<code>top</code>，<code>bottom</code>，<code>left</code>，<code>right</code>。</p><h3 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h3><p>相对定位通过相对于自身在文档流的位置的偏移量来进行定位。相对定位后，元素层级提高，会盖住其他元素。相对定位不会使元素脱离文档流，不会改变元素的性质。</p><h3 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h3><p>绝对定位使得元素脱离文档流，绝对元素会使元素层级提升。绝对定位相对于其包含块进行定位，正常情况下包含块是当前元素最近的祖先块元素，绝对定位的包含块要求开启定位。如果没有开启定位的祖先块，元素相对于根元素进行定位。</p><p>开启绝对元素后，仍然需要保证元素布局撑开，此时若没有<code>auto</code>则自动调整<code>right</code>。<code>left</code>和<code>right</code>默认为<code>auto</code>。垂直方向也必须满足撑开规则，此时会自动调整<code>bottom</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .ABSLTouter{    width: 200px;    height: 200px;    background-color: #bfa;    position: relative;  }  .ABSLTinner{    width: 100px;    height: 100px;    background-color: orange;    position: absolute;    left: 0px;    right: 0px;    top: 0px;    bottom: 0px;    margin: auto;  }</style><div class="ABSLTouter"><div class="ABSLTinner"></div></div><h3 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h3><p>固定定位是一种特殊的绝对定位，唯一区别在于其相对于视口进行定位，不随滚动条而移动。</p><h3 id="粘滞定位"><a href="#粘滞定位" class="headerlink" title="粘滞定位"></a>粘滞定位</h3><p>粘滞定位是一种特殊的相对定位，但其保证其不会移出相对于视口的某位置。</p><h3 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h3><p>元素的层级由<code>z-index</code>属性指定，值越高层级越大，显示时显示在上层。层级相同时靠后的元素显示在上层。祖先元素即使设置层级，也没有办法盖住后代元素。</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><h3 id="文本属性"><a href="#文本属性" class="headerlink" title="文本属性"></a>文本属性</h3><ul><li><code>color</code>设置前景色，一般是指字体颜色。</li><li><code>font-weight</code>，字重，一般用<code>bold</code>加粗，默认为<code>normal</code>。 </li><li><code>font-style</code>，可以设置斜体<code>italic</code>。</li><li><code>line-height</code>，行高指文字占有的高度。可以设置像素或整数，整数表示字体高度的倍数，默认行高为1.33。字体框会在行高内垂直居中。</li><li><code>font-size</code>设置字体大小。</li><li><code>font-family</code>指定字体族，有五种预选值<code>serif</code>（衬线字体）、<code>sans-srrif</code>（非衬线字体）、<code>mono-space</code>（等宽字体）、<code>cursive</code>、<code>fantasy</code>。<br>一般这样写：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font-family: 'Courier New', 'Courier', monospace;</span><br></pre></td></tr></table></figure>会从前至后选择可用的字体。</li></ul><p>允许用户从服务端使用字体，<code>@font-face</code>需要注意版权问题。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span><br><span class="line"><span class="keyword">@font-face</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">'xyzfont'</span>;</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(xyz.ttf);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>可以简写</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font: bold italic 50px/2 'Courier New', 'Courier', monospace;</span><br></pre></td></tr></table></figure><ul><li><code>text-align</code>水平对齐，可选<code>left</code>，<code>right</code>，<code>center</code>，<code>justify</code>。</li><li><code>vertical-align</code>垂直对齐，可选<code>baseline</code>（默认基线对齐），<code>top</code>，<code>bottom</code>，<code>middle</code>，也可以输入值。</li></ul><p>图片也默认使用基线对齐，这时可以使用<code>vertical-align</code>确保图片与父容器贴合。</p><div style="border:1px red solid;background-color: #bfa; vertical-align=baseline;!important"><img src="https://i.loli.net/2020/02/25/lQ3LWua8PxUtXjS.png" width="20%"></img></div><ul><li><code>text-decoration</code>可选<code>none</code>（默认），<code>underline</code>，<code>upperline</code>，<code>line-through</code>。</li><li><code>white-space</code>设置网页如何处理空白，可选值<code>normal</code>，<code>nowarp</code>不换行，<code>pre</code>保留空白。</li><li><code>text-indent</code>设置首行缩进，可以用很大的负值来隐藏文字。</li><li><code>text-overflow</code>设置字体溢出，<code>ellipsis</code>设置省略号。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">11em</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> red solid;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>.OMITbox{    width: 11em;    border: 1px red solid;    white-space: nowrap;    overflow: hidden;    text-overflow: ellipsis;}</style><div class="OMITbox" title="震惊！某高校女生一夜刷完《马原2000题》">震惊！某高校女生一夜刷完《马原2000题》</div><h3 id="图标字体"><a href="#图标字体" class="headerlink" title="图标字体"></a>图标字体</h3><p>将小的图标设计为字体，便于放大缩小和上色，图标是使用<code>@font-face</code>引入的。</p><p>引入Font Awesome：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"fontawesome-free-5.12.1-web/css/all.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><link rel="stylesheet" href="fontawesome-free-5.12.1-web/css/all.css"><p>使用图标字体的形式有三种：</p><p>类的形式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fab fa-weixin"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><p><i class="fa fa-weixin"></i></p><p>编码的形式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    ul&#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-tag">li</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line">    content:'\f103';</span><br><span class="line">    font-family: 'Font Awesome 5 Free';</span><br><span class="line">    font-weight: 900;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></span><br><span class="line">    margin-right: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>你就知道<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实体的形式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fas"</span>&gt;</span><span class="symbol">&amp;#xf0f3;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入Iconfont：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"font_1651721_osdsotfjous/iconfont.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"iconfont"</span>&gt;</span><span class="symbol">&amp;#xe65e;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p><code>background-color</code>可以设置纯色背景颜色。可以用<code>background-image</code>设置背景图片，可以同时设置这两者。</p><p><code>background-repeat</code>设置背景图片重复方式，默认为<code>repeat</code>（平铺），<code>repeat-x</code>，<code>repeat-y</code>，<code>no-repeat</code>。</p><p><code>background-position</code>设置背景图片的位置，如<code>background-position: top center;</code>也可以直接使用偏移量。</p><p><code>background-clip</code>设置背景颜色的作用范围，默认为<code>border-box</code>，<code>padding-box</code>，<code>content-box</code>。</p><p><code>background-origin</code>设置背景图片的原点，默认为<code>padding-box</code>，<code>border-box</code>，<code>content-box</code>。</p><p><code>background-size</code>设置背景图片的大小，可选<code>cover</code>（比例不变，将元素铺满），<code>contain</code>（比例不变，确保完整），也可以直接设置值。</p><p><code>background-attachment</code>确定背景图片是否随滚动条滚动，默认为<code>scroll</code>，可选<code>fixed</code>。</p><p>背景也具有简写<code>background</code>，需要注意必须先写origin再写clip，格式要求“position/size”。</p><p>将多个小图片合并成大图片，再通过<code>background-position</code>切换，可以有效解决切换图片时的加载延迟问题。这种技术被称为CSS-Sprite（雪碧图）。</p><h3 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h3><ul><li><code>background-image: linear-gradient(red, yellow)</code><div style="width: 100px; height: 100px; background-image: linear-gradient(red, yellow)"></div></li><li><code>background-image: linear-gradient(to right, red, yellow)</code><div style="width: 100px; height: 100px; background-image: linear-gradient(to right, red, yellow)"></div></li><li><code>background-image: linear-gradient(45deg, red, yellow)</code><div style="width: 100px; height: 100px; background-image: linear-gradient(45deg, red, yellow)"></div></li><li><code>background-image: linear-gradient(.875turn, red, yellow)</code><div style="width: 100px; height: 100px; background-image: linear-gradient(.875turn, red, yellow)"></div></li><li><code>background-image: linear-gradient(red, yellow, green)</code><div style="width: 100px; height: 100px; background-image: linear-gradient(red, yellow, green)"></div></li><li><code>background-image: linear-gradient(red, yellow 30px, green)</code><div style="width: 100px; height: 100px; background-image: linear-gradient(red, yellow 30px, green)"></div>  </li><li><code>background-image: repeating-linear-gradient(red 15px, yellow 40px)</code><div style="width: 100px; height: 100px; background-image: repeating-linear-gradient(red 15px, yellow 40px)"></div> </li><li><code>background-image: radial-gradient(red, yellow)</code>= <code>background-image: radial-gradient(ellipse, red, yellow)</code><div style="width: 100px; height: 100px; background-image: radial-gradient(red, yellow)"></div> <div style="width: 200px; height: 100px; background-image: radial-gradient(ellipse, red, yellow)"></div> </li><li><code>background-image: radial-gradient(circle, red, yellow)</code><div style="width: 200px; height: 100px; background-image: radial-gradient(circle, red, yellow)"></div> </li><li><code>background-image: radial-gradient(30px 50px, red, yellow)</code><div style="width: 100px; height: 100px; background-image: radial-gradient(30px 50px, red, yellow)"></div> </li><li><code>background-image: radial-gradient(50px 50px at 0 0, red, yellow)</code><div style="width: 100px; height: 100px; background-image: radial-gradient(50px 50px at 0 0, red, yellow)"></div> </li><li><code>background-image: radial-gradient(farthest-side at 0 0, red, yellow)</code><div style="width: 100px; height: 100px; background-image: radial-gradient(farthest-side at 0 0, red, yellow)"></div> </li><li><code>background-image: radial-gradient(closest-corner at 25px 25px, red, yellow)</code><div style="width: 100px; height: 100px; background-image: radial-gradient(closest-corner at 25px 25px, red, yellow)"></div> </li><li><code>background-image: repeating-radial-gradient(red 0px, yellow 20px)</code><div style="width: 100px; height: 100px; background-image: repeating-radial-gradient(red 0px, yellow 20px)"></div> </li><li><code>background-image: repeating-radial-gradient(30px 40px, red, yellow)</code><div style="width: 100px; height: 100px; background-image: repeating-radial-gradient(30px 40px,red, yellow)"></div> </li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格和块元素类似，但是可以设置<code>width</code>。</p><p>表格整体和单元格也都可以设置边框，<code>border-spacing</code>可以设置边框间距，如果希望单元格之间的边框重合，可以使用<code>border-collapse: collapse</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">  <span class="attribute">border-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .CSStable1{    display: table !important;    border: 1px solid black !important;    border-collapse: separate !important;    border-spacing: 1px !important;     }  .CSStable1 td{    border: 1px solid black !important;  }</style><table class="CSStable1"><tr>  <td>动力铁轨数\矿车类型</td><td>非运矿车</td><td>货运矿车</td><td>客运矿车</td><td>动力矿车</td></tr><tr align="center">  <td>1</td><td colspan=3>单格模型</td><td>多格模型</td></tr><tr align="center">  <td>多格（未达到阈值）</td><td colspan=4>多格模型</td></tr><tr align="center">  <td>多格（达到阈值）</td><td>不存在</td><td colspan=2>阈值模型</t><td>不存在</td></tr></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .CSStable2{    display: table;    border-collapse: collapse !important;  }  .CSStable2 td{    border: 1px solid black !important;  }</style><table class="CSStable2"><tr>  <td>动力铁轨数\矿车类型</td><td>非运矿车</td><td>货运矿车</td><td>客运矿车</td><td>动力矿车</td></tr><tr align="center">  <td>1</td><td colspan=3>单格模型</td><td>多格模型</td></tr><tr align="center">  <td>多格（未达到阈值）</td><td colspan=4>多格模型</td></tr><tr align="center">  <td>多格（达到阈值）</td><td>不存在</td><td colspan=2>阈值模型</t><td>不存在</td></tr></table><p>设置隔行变色，可以使用伪类选择器。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(2n)</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .CLRtable tr:nth-child(2n){    background-color: #eee !important;  }</style><table class="CLRtable"><tr><th>事项</th><th>支付方式</th><th>价格</th></tr><tr><td>早餐</td><td>微信</td><td>6.00</td></tr><tr><td>午餐</td><td>支付宝</td><td>12.00</td></tr><tr><td>饮料</td><td>微信</td><td>4.50</td></tr><tr><td>晚餐</td><td>支付宝</td><td>6.80</td></tr><tr><td>雪糕</td><td>微信</td><td>10.00</td></tr><tr><td>图书</td><td>微信</td><td>51.00</td></tr></table><p>元素的垂直居中也可以使用如下的方式，<code>display: table-cell</code>将元素设为单元格，于是可以使用<code>vertical-align</code>。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">  <span class="attribute">display</span>: table-cell;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box2</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: orange;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .CTRbox1{    width: 200px;    height: 200px;    background-color: #bfa;    display: table-cell;    vertical-align: middle;  }  .CTRbox2{    width: 100px;    height: 100px;    background-color: orange;    margin: 0 auto;  }</style><div class="CTRbox1"><div class="CTRbox2"></div></div><p>以前的页面布局经常使用表格，但现在不常用了。</p><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><h3 id="过渡"><a href="#过渡" class="headerlink" title="过渡"></a>过渡</h3><p><code>transition:</code>指定过渡时间，参数分别指定过渡的属性和时间。过渡需要具体数值才能计算，不能向<code>auto</code>过渡。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfa</span>;</span><br><span class="line">  <span class="attribute">transition</span>:all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .TSTbox1{    width: 100px;    height: 100px;    background-color: #bfa;    transition:all 0.3s;  }  .TSTbox1:hover{    width: 200px;    height: 200px;  }</style><div class="TSTbox1"></div><p><code>transition</code>是简写属性：</p><ul><li><code>transition-property</code>指定过渡的属性，多个属性使用逗号隔开，<code>all</code>表示全部属性。</li><li><code>transition-duration</code>指定过渡所需时间，单位为<code>s</code>或<code>ms</code>，可以对不同属性指定不同的时间，用逗号隔开；</li><li><code>transition-timing-function</code>表示过渡的时序函数，默认为<code>ease</code>慢入慢出，<code>linear</code>匀速运动，<code>ease-in</code>慢入，<code>ease-out</code>慢出，<code>ease-in-out</code>慢入慢出。是时序函数使用贝赛尔曲线，可以用<code>cubic-bezier()</code>表示。也可以指定<code>steps()</code>，表示分若干步移动，第二个参数默认为<code>end</code>，表示在时间结束时执行移动，<code>start</code>表示在开始时执行。</li><li><code>transition-delay</code>表示延迟。</li></ul><style>  .FTSbackground{    width:700px;    padding-bottom:25px;    vertical-align:middle;    background-color:silver;    overflow:hidden;  }  .FTSbackground div{    width: 100px;    height: 100px;    margin-top:25px;    margin-left:0px;    background-color: #bfa;    line-height:100px;    text-align:center;    font-size:16px  }  .FTSbackground:hover>div{    margin-left:600px;  }</style><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box2</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>:all <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box3</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>:all <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box4</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>:all <span class="number">2s</span> linear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box5</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>:all <span class="number">1s</span> linear <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box6</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>:all <span class="number">2s</span> <span class="built_in">steps</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box7</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>:all <span class="number">2s</span> <span class="built_in">steps</span>(<span class="number">5</span>,start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .FTSbox2{    transition:all 1s;  }  .FTSbox3{    transition:all 2s;  }  .FTSbox4{    transition:all 2s linear;  }  .FTSbox5{    transition:all 1s linear 1s;  }  .FTSbox6{    transition:all 2s steps(5);  }  .FTSbox7{    transition:all 2s steps(5,start);  }</style><div class="FTSbackground"><div class="FTSbox1"></div><div class="FTSbox2">1s</div><div class="FTSbox3">2s</div><div class="FTSbox4">2s linear</div><div class="FTSbox5">1s liner 1s</div><div class="FTSbox6">steps(5)</div><div class="FTSbox7">steps(5,start)</div></div><h3 id="动画-1"><a href="#动画-1" class="headerlink" title="动画"></a>动画</h3><p>动画和过渡类似，可以实现动态效果，动画可以自动触发。设置动画效果，必须使用<code>@keyframes</code>设置关键帧，其中<code>from</code>和<code>to</code>表示0%和100%。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> move&#123;</span><br><span class="line"><span class="selector-tag">from</span>&#123;</span><br><span class="line">  <span class="attribute">margin-left</span>:<span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">to</span>&#123;</span><br><span class="line">  <span class="attribute">margin-right</span>:<span class="number">600px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>animation-name</code>动画使用的关键帧名。</li><li><code>animation-duration</code>动画执行的时间。 </li><li><code>animation-delay</code>动画的延迟。</li><li><code>animation-timing-function</code>动画执行的时序函数。</li><li><code>animation-iteration-count</code>动画执行的次数，可选<code>infinite</code>。</li><li><code>animation-direction</code>动画执行的方向，默认为<code>normal</code>，<code>reverse</code>反向运行，<code>alternate</code>会在重复执行时返回，<code>alternate-reverse</code>反向重复执行并返回。</li><li><code>animation-play-state</code>设置动画的运行状态，默认为<code>running</code>，<code>pause</code>为暂停。</li><li><code>animation-fill-mode</code>，动画的填充模式，默认为<code>none</code>，动画执行完毕回到原位置，可选<code>forwards</code>，动画执行结束后停在结束位置，<code>backwards</code>动画延迟等待时处于动画开始位置。<code>both</code>结合了<code>forwards</code>和<code>backwards</code>。</li></ul><h3 id="变形"><a href="#变形" class="headerlink" title="变形"></a>变形</h3><p>通过CSS改变元素的形状和位置，不会影响页面的布局。使用<code>transform</code>，在其后使用函数。</p><ul><li><code>translateX()</code>沿X轴平移，百分比相对于自身，下同。</li><li><code>translateY()</code>沿Y轴平移。</li><li><code>translateZ()</code>沿Z轴平移。</li></ul><p>可以用<code>translate</code>实现居中。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#bce</span>;</span><br><span class="line">  <span class="attribute">position</span>:absolute;</span><br><span class="line">  <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">  top:50%;-</span><br><span class="line">  <span class="selector-tag">transform</span><span class="selector-pseudo">:translateX(-50</span>%) <span class="selector-tag">translateY</span>(<span class="selector-tag">-50</span>%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>.TSLTouter{  width:100%;  height:200px;  background-color:#eee;  position:relative;}.TSLTbox{  background-color:#bce;  position:absolute;  left:50%;  top:50%;  transform:translateX(-50%) translateY(-50%);}</style><div class="TSLTouter"><div class="TSLTbox">风雨同行，共克时艰。</div></div><br><br><p>块悬浮效果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">15px</span> <span class="number">30px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">transform</span>:<span class="built_in">translateY</span>(-<span class="number">2px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>  .FLTGouter{    width:400px;    height:400px;    display: table-cell;    vertical-align: middle;    background-color:#f7f7f7;  }  .FLTGbox{    text-align:center;    width: 250px;    padding:12px;    padding-top:39px;    margin: 0 auto;    border-top: 1px solid red;    background-color: #fff;    transition:all .3s;  }  .FLTGbox:hover{    box-shadow: 0px 15px 30px rgba(0,0,0,.1);    transform:translateY(-2px);  }</style><div class="FLTGouter"><div class="FLTGbox">故事发生在从近未来到两百年后的历史跨度上，地球文明被三体用一种叫做智子的超级科技锁死，基础研究因而停滞不前。但人类仍然需要在此基础上不断前进来抵御即将到来的三体人的进攻，守卫自己的家园和人类文明。在更广大的基础上，三体文明和人类文明都是黑暗森林下的猎手，小心翼翼的保护好自己并且清理别人，为文明的存续而挣扎。</div></div><p>网页默认不支持透视，可以用<code>perspective</code>给网页设置视距，。</p><ul><li><code>rotateZ()</code>以Z为轴顺时针旋转。</li><li><code>rotateX()</code>以X为轴顺时针旋转。</li><li><code>rotateY()</code>以Y为轴顺时针旋转。</li></ul><p>当元素旋转后，坐标轴也一同旋转。</p><p><code>backface-visbility</code>设置背面是否可见。</p><style>  .RTTouter{    width:900px;    height:300px;    background-color:#eee;    display: table-cell;    vertical-align: middle;    perspective:800px;  }  .RTTouter div{    width:150px;    height:150px;    line-height:150px;    background-color:#bce;    float:left;    margin-left:60px;    transition:all,.5s;    text-align:center;   }  .RTTbox1:hover{    transform:translateZ(100px);  }  .RTTbox2:hover{    transform:rotateZ(90deg);  }  .RTTbox3:hover{    transform:rotateX(45deg);  }  .RTTbox4:hover{    transform:rotateY(45deg);  }</style><div class=RTTouter><div class="RTTbox1">translateZ(100px)</div><div class="RTTbox2">rotateZ(90deg)</div><div class="RTTbox3">rotateX(45deg)</div><div class="RTTbox4">rotateY(45deg)</div></div><p>不以中心旋转的物体，可以在外面套一个容器。</p><p><code>transform-origin</code>可以设置变形操作的原点。</p><style>  .RTPouter{    width:300px;    height:300px;    background-color:#eee;    display: table-cell;    vertical-align: middle;    border-radius:50%;  }  .RTPouter:hover .RTPpointer-wrapper{    transform:rotateZ(1turn);    box-shadow:0 0 10px rgba(0,0,0,.18);  }  .RTPpointer-wrapper{    width:200px;    height:200px;    margin:auto;    transition:transform 10s linear;  }  .RTPpointer{    width:3px;    height:100px;    background-color:black;    margin:auto;  }</style><div class="RTPouter"><div class="RTPpointer-wrapper"><div class="RTPpointer"></div></div></div><p>设置<code>transform-style: preserve-3d</code>，可以保证父元素及子元素作为一个整体的3d物体进行操作。</p><style>  .BLKouter{    width:500px;    height:500px;    background-color:#eee;    image-rendering:pixelated;     perspective:800px;  }   .BLKouter div{    width:320px;    height:320px;    margin:90px;    position:absolute;    /* opacity:0.5; */    backface-visibility:hidden;    transition:all 3s linear;  }   .BLKouter img{    width:320px;    height:320px;  }    .BLKleft{    transform: rotateX(0deg) rotateY(-90deg) rotateZ(0deg) translateZ(160px);  }  .BLKright{    transform: rotateX(0deg) rotateY(90deg) rotateZ(0deg) translateZ(160px);  }  .BLKtop{    transform: rotateX(90deg) rotateY(0deg) rotateZ(0deg) translateZ(160px);  }  .BLKbottom{    transform: rotateX(-90deg) rotateY(0deg) rotateZ(0deg) translateZ(160px);  }  .BLKback{    transform: rotateX(0deg) rotateY(180deg) rotateZ(0deg) translateZ(160px);  }  .BLKfront{    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateZ(160px);  }  .BLKfront{    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateZ(160px);  }  .BLKouter:hover .BLKleft{    transform: rotateX(360deg) rotateY(270deg) rotateZ(0deg) translateZ(160px);  }  .BLKouter:hover .BLKright{    transform: rotateX(360deg) rotateY(450deg) rotateZ(0deg) translateZ(160px);  }  .BLKouter:hover .BLKtop{    transform: rotateX(450deg) rotateY(0deg) rotateZ(-360deg) translateZ(160px);  }  .BLKouter:hover .BLKbottom{    transform: rotateX(270deg) rotateY(0deg) rotateZ(360deg) translateZ(160px);  }  .BLKouter:hover .BLKback{    transform: rotateX(360deg) rotateY(540deg) rotateZ(0deg) translateZ(160px);  }  .BLKouter:hover .BLKfront{    transform: rotateX(360deg) rotateY(360deg) rotateZ(0deg) translateZ(160px);  }  .BLKouter:hover .BLKfront{    transform: rotateX(360deg) rotateY(360deg) rotateZ(0deg) translateZ(160px);  }</style><div class="BLKouter"><div class="BLKback"><img src="https://i.loli.net/2020/03/02/N3Lh6892E5awZUk.png"></div><div class="BLKtop"><img src="https://i.loli.net/2020/03/02/KJhkse2IOAQTU4P.png"></div><div class="BLKbottom"><img src="https://i.loli.net/2020/03/02/mWYLs9haijT8GzP.png"></div><div class="BLKleft"><img src="https://i.loli.net/2020/03/02/N3Lh6892E5awZUk.png"></div><div class="BLKright"><img src="https://i.loli.net/2020/03/02/N3Lh6892E5awZUk.png"></div><div class="BLKfront"><img src="https://i.loli.net/2020/03/02/N3Lh6892E5awZUk.png"></div></div><ul><li><code>scaleY()</code>表示X轴缩放。</li><li><code>scaleY()</code>表示Y轴缩放。</li><li><code>scale()</code>表示XY轴缩放。</li><li><code>scaleZ()</code>表示Z轴缩放，必须对3D物体使用</li></ul><p>##　弹性盒</p><p>弹性盒也是css中的布局手段，主要用于代替浮动。移动端效果较好，PC端有个别兼容性问题。</p><p>要使用弹性盒，必须将元素设置为弹性容器，使用<code>display: flex</code>或<code>display: inline-flex</code>。弹性容器的直接子元素叫做弹性元素。一个元素可以同时是弹性容器和弹性元素。</p><style>.FLXbase{  list-style:none;  padding:0px;  width:600px;  display: flex;  border:10px red solid;}.FLXbase li{  height:100px;  width:150px;  line-height:100px;  text-align:center;  font-size:22px;}.FLXbase li:nth-child(1){  background-color:#bfa;}.FLXbase li:nth-child(2){  background-color:#bce;}.FLXbase li:nth-child(3){  background-color:#48b;}.FLXbase li:nth-child(4){  background-color:#0cc;}.FLXbase li:nth-child(5){  background-color:#ebc;}.FLXbase li:nth-child(6){  background-color:#ce2;}.FLXbase li div{  border:1px solid black;}</style><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">  <span class="attribute">list-style</span>:none;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">10px</span> red solid;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br></pre></td></tr></table></figure><style>.FLXul1 li{  font-size:50px;}</style><ul class="FLXbase FLXul1"><li>1</li><li>2</li><li>3</li></ul><h3 id="弹性容器"><a href="#弹性容器" class="headerlink" title="弹性容器"></a>弹性容器</h3><ul><li><code>flex-direction</code>指定弹性容器中弹性元素的默认排列方式，默认为<code>row</code>水平排列，可选<code>row-reverse</code>，<code>column</code>，<code>column-reverse</code>。弹性元素的排列方式称为主轴，侧轴与主轴垂直。</li><li><code>flex-wrap</code>设置弹性容器的元素是否自动换行，默认为<code>nowrap</code>，可选<code>wrap</code>，<code>warp-reverse</code>沿副轴反向换行。</li><li><code>flex-flow</code>：<code>flex-direction</code>和<code>flex-wrap</code>的简写属性。</li><li><code>justify-content</code>，如何分配主轴的空白空间，默认为<code>flex-start</code>沿起边排列，可选<code>flex-end</code>沿终边排列，<code>center</code>居中，<code>space-around</code>空白平均分配给元素两侧，<code>space-evenly</code>空白平均分配给元素的间隔及外部，<code>space-between</code>空白平均分配给元素的间隔。</li></ul><style>.FLXul3{  justify-content:flex-end;}</style><ul class="FLXbase FLXul3"><li></li><li>flex-end</li><li></li></ul><style>.FLXul4{  justify-content:space-around;}</style><ul class="FLXbase FLXul4"><li></li><li>space-around</li><li></li></ul><style>.FLXul5{  justify-content:space-evenly;}</style><ul class="FLXbase FLXul5"><li></li><li>space-evenly</li><li></li></ul><style>.FLXul6{  justify-content:space-between;}</style><ul class="FLXbase FLXul6"><li></li><li>space-between</li><li></li></ul><ul><li><code>align-items</code>元素在副轴上如何对齐，默认<code>stretch</code>将每行元素设置为相等高度，<code>flex-start</code>，<code>flex-end</code>，<code>center</code>，<code>base-line</code>。</li></ul><style>  .FLXbase2{    flex-wrap:wrap;  }  .FLXbase2 li{    height:auto;    line-height:50px;  }  </style><ul class="FLXbase FLXbase2"><li><div><b>strentch</b></div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div></li></ul><style>  .FLXul7{    align-items: flex-start;  }</style><ul class="FLXbase FLXbase2 FLXul7"><li><div><b>flex-start</b></div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div></li></ul><style>  .FLXul8{    align-items: center;  }</style><ul class="FLXbase FLXbase2 FLXul8"><li><div><b>center</b></div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div></li></ul><ul><li><code>align-content</code>，如何分配副轴的空白空间，默认为<code>stretch</code>，可选<code>flex-start</code>，<code>flex-end</code>，<code>center</code>，<code>space-around</code>，<code>space-evenly</code>，<code>space-between</code>。</li></ul><style>  .FLXul9{    height: 300px;    align-content: space-around;  }</style><ul class="FLXbase FLXbase2 FLXul9"><li><div><b>space-around</b></div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div><div>div</div><div>div</div></li><li><div>div</div><div>div</div></li><li><div>div</div></li></ul><h3 id="弹性元素"><a href="#弹性元素" class="headerlink" title="弹性元素"></a>弹性元素</h3><ul><li><code>align-self</code>覆盖当前弹性元素在容器中设置的<code>align-items</code>属性。</li><li><code>flex-grow</code>指定弹性元素的伸展系数，默认为<code>0</code>，表示不伸展。当弹性容器有剩余空间时，元素按<code>flex-grow</code>的数值比例分配剩余空间。</li><li><code>flex-shrink</code>指定弹性元素的收缩系数，默认为<code>1</code>，表示不收缩。当弹性容器不足时，元素按<code>flex-shrink</code>的数值乘元素的大小比例分配不足空间。</li><li><code>flex-basis</code>指定元素在主轴上的基础长度，默认为<code>auto</code>，相当于使用<code>width</code>或<code>height</code>。</li><li><code>flex</code>：<code>flex-grow</code>，<code>flex-shrink</code>，<code>flex-basis</code>的简写属性。<code>initial</code>相当于默认值<code>1 0 auto</code>，<code>auto</code>相当于<code>1 1 auto</code>，<code>none</code>相当于<code>0 0 auto</code>。</li><li><code>order</code>指定元素的排列顺序。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span>&#123;</span><br><span class="line">  <span class="attribute">list-style</span>:none;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">10px</span> red solid;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>:<span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>.FLXul2 li{  width: 100px;  font-size:18px;}.FLXul2 li:nth-child(1){  flex-grow:0;}.FLXul2 li:nth-child(2){  flex-grow:1;}.FLXul2 li:nth-child(3){  flex-grow:3;}</style><ul class="FLXbase FLXul2"><li>flex-grow:0</li><li>flex-grow:1</li><li>flex-grow:3</li></ul><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1172px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">48px</span>;</span><br><span class="line">  <span class="attribute">flex-grow</span>:<span class="number">1</span>;</span><br><span class="line">  <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>    .NAVdiv2 ul {        list-style: none;        padding: 0px;        display: flex;    }    .NAVdiv2 {        width: 1172px;        height: 48px;        background-color: #ddd;        margin: 30px auto;            }    .NAVdiv2 li {        line-height: 48px;        flex-grow:1;        text-align:center;    }    .NAVdiv2 a{        display: block;        text-decoration: none;        color: #777;        font-size: 18px;    }    .NAVdiv2 a:hover{        background-color: #3f3f3f;        color: #eee;            }</style><div class="NAVdiv2">    <ul>        <li><a href="#" title="HTML系列教程">HTML/CSS</a></li>        <li><a href="#" title="浏览器脚本教程">Browser Side</a></li>        <li><a href="#" title="服务器脚本教程">Server Side</a></li>        <li><a href="#" title="编程教程">Programming</a></li>        <li><a class="NAVa2" href="#" title="XML系列教程">XML</a></li>        <li><a href="#" title="建站手册">Web Building</a></li>        <li><a href="#" title="参考手册">Reference</a></li>    </ul></div> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span>, <span class="selector-class">.footer</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ceb</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.middle</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#bce</span>;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ebc</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><style>.HGheader, .HGfooter {  border: 1px solid #333;  background: #ccc;  text-align: center;}.HGcontainer {    display: flex;    text-align:center;}.HGleft {  background: #ceb;  width: 200px;}.HGmiddle {  background: #bce;  flex: 1;}.HGright {  background: #ebc;  width: 200px;}</style><div class="HGheader">    <h4>header</h4></div><div class="HGcontainer">    <div class="HGleft">        <h4>left</h4>        <p>left-content</p>    </div>    <div class="HGmiddle">        <h4>middle</h4>        <p>middle-content</p>    </div>    <div class="HGright">        <h4>right</h4>        <p>right-content</p>    </div></div><div class="HGfooter">    <h4>footer</h4></div><h2 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h2><p>响应式布局使网站可以根据不同设备或窗口大小呈现出不同的布局。响应式布局的关键是媒体查询。</p><p>媒体类型使用<code>@media 查询规则{}</code></p><p>媒体类型包括<code>all</code>，<code>print</code>打印设备，<code>screen</code>屏幕设备，<code>speech</code>屏幕阅读器。</p><p>媒体特性主要使用：<code>min-width</code>最小宽度和<code>max-width</code>最大宽度。</p><p>类型和特性的连接可以使用<code>,</code>（或），<code>and</code>（与），<code>not</code>（非）。</p><p>常用的断点有768px，992px，1200px。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width:</span><span class="string">"768px"</span>) <span class="keyword">and</span> (<span class="attribute">max-width:</span><span class="string">"1200px"</span>)&#123;</span><br><span class="line">    <span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">background-color</span>:<span class="number">#bfa</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="less简介"><a href="#less简介" class="headerlink" title="less简介"></a>less简介</h2><p>less是一门css预处理语言，是css的增强版。</p><p>css支持变量，但兼容性不好。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">  <span class="attribute">--varcolor</span>:<span class="number">#bfa</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--varcolor);</span><br><span class="line">  <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">1000px</span>/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>less中增添了许多新特性，如变量的支持，mixin等。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>less的单行注释<code>//</code>，less的注释不会解析到css中，css注释<code>/* */</code>会解析到css中。</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@varcolor:</span><span class="number">#bfa</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@varcolor</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量可以存储类名、路径、属性名。当作为式子的一部分使用时，需要使用花括号。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@myclass:</span>box;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.@&#123;myclass&#125;</span>&#123;</span><br><span class="line">  <span class="attribute">background-image</span>:url(<span class="string">"./@&#123;myclass&#125;/img/1.png"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以把属性值作为变量。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  height:$width;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span> + <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择器-1"><a href="#选择器-1" class="headerlink" title="选择器"></a>选择器</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;<span class="comment">//选择器嵌套</span></span><br><span class="line">    <span class="selector-class">.box2</span>&#123;<span class="comment">//后代选择器</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">1px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &gt;<span class="selector-class">.box3</span>&#123;<span class="comment">//子元素选择器 </span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">2px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;<span class="comment">//父元素选择器,表示当前</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">3px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.outer</span> <span class="selector-tag">&amp;</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">4px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-tag">-ok</span>&#123;<span class="comment">//父元素选择器连接字符串</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">5px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">&amp;</span> <span class="selector-tag">&amp;</span><span class="selector-tag">ing</span>&#123;<span class="comment">//多个父元素选择器</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">6px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.box2</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &gt; <span class="selector-class">.box3</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.outer</span> <span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box-ok</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.boxing</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="extend"><a href="#extend" class="headerlink" title="extend"></a>extend</h3><p>用extend实现继承，实现方式是分组选择器。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span><span class="selector-pseudo">:extend(.p1)</span>&#123;<span class="comment">//继承</span></span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span>,</span><br><span class="line"><span class="selector-class">.p2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.p2</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mixin"><a href="#mixin" class="headerlink" title="mixin"></a>mixin</h3><p>在使用类选择器时在其后加括号，其变为mixin，不会解析到css中。调用时将该mixin混入调用的位置。调用时可以省略括号。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my-inline-block</span>()&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.my-block</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span>&#123;</span><br><span class="line">    <span class="selector-class">.my-inline-block</span>();</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span>&#123;</span><br><span class="line">    <span class="selector-class">.p1</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my-block</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.p1</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.p2</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>mixin允许传入参数，这是主要用途。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.my-block</span>(<span class="variable">@w</span>, <span class="variable">@h</span>,<span class="variable">@color</span>:<span class="number">#bfa</span>)&#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">@h</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@color</span>;<span class="comment">//默认参数：#bfa</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p1</span>&#123;</span><br><span class="line">    <span class="selector-class">.my-block</span>(<span class="number">200px</span>,<span class="number">300px</span>);<span class="comment">//按顺序传参</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p2</span>&#123;</span><br><span class="line">    <span class="selector-class">.my-block</span>(<span class="variable">@h</span>:<span class="number">300px</span>,<span class="variable">@w</span>:<span class="number">200px</span>,red);<span class="comment">//按变量名传参</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#bfa</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.p2</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>less提供了若干预定义mixin。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: average(red,yellow);</span><br><span class="line">    <span class="attribute">background-color</span>: darken(pink,<span class="number">20%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.p1</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ff8000</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff5a77</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><p>可以引入其他的less文件，相当于复制粘贴，便于模块化处理。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">"my-less1.less"</span></span><br></pre></td></tr></table></figure><h3 id="编译属性"><a href="#编译属性" class="headerlink" title="编译属性"></a>编译属性</h3><p>可以在less插件里设置编译属性：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">"less.compile": &#123;</span><br><span class="line">  "compress":  true,  // true =&gt; remove surplus whitespace</span><br><span class="line">  "sourceMap": true,  // true =&gt; generate source maps (.css.map files)</span><br><span class="line">  "out":       false, // false =&gt; DON'T output .css files (overridable per-file, see below)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>compress确定输出的css是否压缩；courceMap会给出css与less的映射表，在调试时可以在检查元素中直接给出less文件的对应行数；out确定是否输出css。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>概率论与数理统计</title>
      <link href="/2020/02/25/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
      <url>/2020/02/25/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<style>    /* "神来一笔"的注释 */    .wow{        color:red;        font-style:italic;    }    /* 解题思路 */    .idea{        color:brown;    }    .wow::before,    .idea::before{        content:'('    }    .wow::after,    .idea::after{        content:')'    }</style><!-- TOC --><ul><li><a href="#第一讲-随机事件与概率">第一讲 随机事件与概率</a><ul><li><a href="#古典概型">古典概型</a></li><li><a href="#几何概型">几何概型</a></li><li><a href="#重要公式求概率">重要公式求概率</a><ul><li><a href="#用对立">用对立</a></li><li><a href="#用互斥">用互斥</a></li><li><a href="#用独立">用独立</a></li><li><a href="#用条件">用条件</a></li><li><a href="#用不等式或包含">用不等式或包含</a></li><li><a href="#用最值">用最值</a></li></ul></li><li><a href="#事件的独立性">事件的独立性</a></li></ul></li><li><a href="#一维随机变量及其分布">一维随机变量及其分布</a><ul><li><a href="#判分布">判分布</a></li><li><a href="#求分布">求分布</a></li><li><a href="#用分布">用分布</a></li><li><a href="#求函数分布">求函数分布</a></li></ul></li></ul><!-- /TOC --><h1 id="第一讲-随机事件与概率"><a href="#第一讲-随机事件与概率" class="headerlink" title="第一讲 随机事件与概率"></a>第一讲 随机事件与概率</h1><h2 id="古典概型"><a href="#古典概型" class="headerlink" title="古典概型"></a>古典概型</h2><p>古典概型:样本空间$\varOmega$中有<strong>有限个</strong>,<strong>等可能</strong>的样本点.</p><p>$$P(A)=\dfrac{\mathrm{card}(A)}{\mathrm{card}(\varOmega)}$$</p><ul><li>随机分配:将$n$个质点随机分配到$N$个盒子中<ul><li>每盒可容纳任意多质点:$N^n$</li><li>每盒可容纳至多一个质点:$N(N-1)\cdots(N-n+1)=P_N^n$</li></ul></li></ul><blockquote><p>例1 将$n$个球随机放入$N(n\le N)$个盒子中,每盒可放任意多个球,求概率.</p><blockquote><p>$A=${某指定$n$个盒子中各有一球}<br> $P(A)=\dfrac{n!}{N^n}$</p></blockquote><blockquote><p>$B=${恰有$n$个盒子中各有一球}<br> $P(B)=\dfrac{C_N^nn!}{N^n}$</p></blockquote><blockquote><p>$C=${指定$k(k\le n)$个盒子中各有一球}<br> $P(C)=\dfrac{C_n^kk!(N-k)^{n-k}}{N^n}$</p></blockquote></blockquote><ul><li>简单随机抽样:从$N$个元素的$\varOmega$中简单抽取<ul><li>先后有放回取n次:$N^n$</li><li>先后无放回取n次:$N(N-1)\cdots(N-n+1)=P_N^n$</li><li>任取n个:$C_N^n=\dfrac{P_N^n}{n!}$</li></ul></li></ul><blockquote><p>例2 袋中有5个球,三白两黑,求至少一个白球的概率.<span class="idea">这里求对立事件比较方便</span></p><blockquote><p>先后有放回取两个球<br> $P=1-\dfrac{2^2}{5^2}=\dfrac{21}{25}$</p></blockquote><blockquote><p>先后无放回取两个球<br>$P=1-\dfrac{2\cdot1}{5\cdot4}=\dfrac{9}{10}$</p></blockquote><blockquote><p>任取两个球<br> $P=1-\dfrac{C_2^2}{C_5^2}=\dfrac{9}{10}$</p></blockquote><p><span class="idea">所以说,”任取”和”先后无放回”可以相互替换</span></p></blockquote><blockquote><p>例3 袋中有100个球,40白60黑.</p><blockquote><p>先后有放回取20个,求15白5黑的概率.<br>$P=\dfrac{C_{20}^{15}\cdot40^{15}\cdot60^{5}}{100^{20}}=C_{20}^{15}\cdot0.4^{15}\cdot0.6^5$<br><span class="wow">二项分布</span></p></blockquote><blockquote><p>先后无放回取20个,求15白5黑的概率.<br> $P=\dfrac{C_{40}^{15}C_{60}^{5}}{C_{100}^{20}}$<br><span class="wow">超几何分布</span></p></blockquote><blockquote><p>先后有放回取20个,求第20次取白的概率.<br>$P=0.4$</p></blockquote><blockquote><p>先后无放回取20个,求第20次取白的概率.<br><span class="idea">可以这样理解,将100个球分给到100次取球,然后看第20次取球是否为白球</span><br>$P=\dfrac{C_{40}^1\cdot99!}{100!}=0.4$</p></blockquote><p><span class="idea">所以抓阄是公平的,每次取球取到的都是一个带着概率的球.</span></p></blockquote><h2 id="几何概型"><a href="#几何概型" class="headerlink" title="几何概型"></a>几何概型</h2><p>若$\varOmega$是一个可度量的几何区域,样本点落入$\varOmega$的某可度量子区域$A$的可能性与$A$的几何度量成正比,与$A$的位置及形状无关,称为几何概型.<br>$$P(A)=\dfrac{m(A)}{m(\varOmega)}$$</p><blockquote><p>例4 在(0,1)中随机取两数,则两数之差的绝对值小于0.5的概率.<br>$P=\dfrac34$</p></blockquote><svg>  <rect width="100" height="100"  style="fill:#fff;stroke-width:2;stroke:#ccc"/>  <polygon points="0,100 50,100 100,50 100,0 50,0 0,50"  style="fill:#ddd;stroke:#000;stroke-width:1"/></svg> <h2 id="重要公式求概率"><a href="#重要公式求概率" class="headerlink" title="重要公式求概率"></a>重要公式求概率</h2><h3 id="用对立"><a href="#用对立" class="headerlink" title="用对立"></a>用对立</h3><ul><li>$\overline{A\cup B}=\overline A\cap\overline B$</li><li>$\overline{A\cap B}=\overline A\cup\overline B$</li><li>$P(A)=1-P(\overline A)$</li></ul><h3 id="用互斥"><a href="#用互斥" class="headerlink" title="用互斥"></a>用互斥</h3><ul><li>$\begin{aligned}P(A+B)&amp;=P(A\overline B)+P(B)\&amp;=P(\overline AB)+P(A)\&amp;=P(A\overline B)+P(\overline AB)+P(A\cap B)\end{aligned}$</li><li><span class="wow">全集分解思想</span>若$B_1,B_2,B_3$为<strong>完备事件组</strong>(相交为空,相并为全集),则$A=A\varOmega=AB_1\cup AB_2\cup AB_3$</li><li>$P(A\overline B)=P(A-B)=P(A)-P(AB)$</li><li>$P(A+B)=P(A)+P(B)-P(AB)$</li><li>$P(A+B+C)=P(A)+P(B)+P(C)-P(AB)-P(BC)-P(AC)+P(ABC)$</li><li>若$A_1,A_2,\cdots A_n$两两互斥,则和的概率等于概率的和.</li></ul><h3 id="用独立"><a href="#用独立" class="headerlink" title="用独立"></a>用独立</h3><ul><li>若$A_1,A_2,\cdots A_n$相互独立,则乘积的概率等于概率的乘积.</li><li>若$A_1,A_2,\cdots A_n$相互独立,$P(A_1+A_2+\cdots+A_n)=1-P(\overline{A_1\cup A_2\cup\cdots\cup A_n})=1-P(\overline{A_1})P(\overline{A_2})\cdots P(\overline{A_n})$</li></ul><h3 id="用条件"><a href="#用条件" class="headerlink" title="用条件"></a>用条件</h3><ul><li>$P(A|B)=\dfrac{P(AB)}{P(B)}\quad P(B)&gt;0$</li><li>$\begin{aligned}P(AB)&amp;=P(B)P(A|B)\&amp;=P(A)P(A|B)\&amp;=P(A)+P(B)-P(A+B)\&amp;=P(A)-P(A\overline B)\end{aligned}$</li><li>$P(A_1A_2A_3)=P(A_1)P(A_2|A_1)P(A_3|A_1A_2)$</li><li><span class="wow">全概率公式</span>设$A_1,A_2,\cdots,A_n$为完备事件组,$P(A_i)&gt;0$,则$P(B)=\sum P(B|A_i)P(A_i)$<br><span class="idea">已知原因,求结果的概率</idea></li><li><span class="wow">贝叶斯公式</span>当$B$发生时,$P(A_j|B)=\dfrac{P(A_jB)}{P(B)}=\dfrac{P(A_j)P(B|A_j)}{\sum P(B|A_i)P(A_i)}$<span class="idea">已知结果,求原因的概率</idea></li></ul><h3 id="用不等式或包含"><a href="#用不等式或包含" class="headerlink" title="用不等式或包含"></a>用不等式或包含</h3><ul><li>$0\le P(A)\le1$</li><li>若$A\subset B$,则$P(A)\le P(B)$<br>$P(AB)\le P(A)\le P(A+B)$</li></ul><h3 id="用最值"><a href="#用最值" class="headerlink" title="用最值"></a>用最值</h3><ul><li>$\lbrace \mathbf{max}\lbrace X,Y\rbrace \le a\rbrace =\lbrace X\le a\rbrace \cap\lbrace Y\le a\rbrace $</li><li>$\lbrace \mathbf{max}\lbrace X,Y\rbrace &gt;a\rbrace =\lbrace X&gt;a\rbrace \cup\lbrace Y&gt;a\rbrace $</li><li>$\lbrace \mathbf{min}\lbrace X,Y\rbrace \le a\rbrace =\lbrace X\le a\rbrace \cup\lbrace Y\le a\rbrace $</li><li>$\lbrace \mathbf{min}\lbrace X,Y\rbrace &gt;a\rbrace =\lbrace X&gt;a\rbrace \cap\lbrace Y&gt;a\rbrace $</li><li>$\lbrace \mathbf{max}\lbrace X,Y\rbrace \le a\rbrace \subset\lbrace \mathbf{min}\lbrace X,Y\rbrace \le a\rbrace $</li><li>$\lbrace \mathbf{min}\lbrace X,Y\rbrace &gt;a\rbrace \subset\lbrace \mathbf{max}\lbrace X,Y\rbrace &gt;a\rbrace $</li></ul><blockquote><p>例5 $P(A)=0.4,P(\overline A\cup B)=0.8$,求$P(\overline B|A)$.<br>法一: $P(\overline B|A)=\dfrac{P(A\overline B)}{P(A)}=\dfrac{P(A)-P(AB)}{P(A)}=\dfrac{P(A)-(P(\overline A\cup B)-P(\overline A))}{P(A)}=\dfrac12$<br>法二: $P(\overline A\cup B)=1-P(A\cap\overline B)=1-P(A\overline B)$</p></blockquote><blockquote><p>例6 结论错误的是</p><blockquote><p>(A) $P(AB)+P(AC)+P(BC)\ge P(A)+P(B)+P(C)-1$<br>由$P(A+B+C)=P(A)+P(B)+P(C)-P(AB)-P(BC)-P(AC)+P(ABC)$<br>$P(AB)+P(BC)+P(AC)=P(A)+P(B)+P(C)+P(ABC)-P(A+B+C)\ge P(A)+P(B)+P(C)-1$</p></blockquote><blockquote><p>(B) 若$P(A|B)&gt;P(A|\overline B)$则$P(B|A)&gt;P(B|\overline A)$<br>$\dfrac{P(AB)}{P(B)}&gt;\dfrac{P(A\overline B)}{P(\overline B)}=\dfrac{P(A)-P(AB)}{1-P(B)}$<br>$\dfrac{P(AB)}{P(B)}&gt;\dfrac{P(A)}1$<br>$P(AB)&gt;P(A)P(B)$<br>$P(B|A)&gt;P(B|\overline A)$<br><span class="idea">如果抽烟的比不抽烟的容易得肺癌,那么得肺癌的里抽烟的一定比不抽烟的多</idea></p></blockquote><blockquote><p>(C) $P(A_1A_2\cdots A_n)\ge P(A_1)P(A_2)\cdots P(A_n)-(n-1)$<br>数学归纳法,$P(A+B)=P(A)+P(B)-P(AB)\le1$<br>$P(AB)\ge P(A)+P(B)-1$<br>当$n-1$时成立,则$n$时:<br>$P(A_1A_2\cdots A_n)\ge P(A_1A_2\cdots A_{n-1})+P(A_n)-1\ge P(A_1)P(A_2)\cdots P(A_{n-1})-(n-2)+P(A_n)-1=P(A_1)P(A_2)\cdots P(A_n)-(n-1)$</p></blockquote><blockquote><p>$|P(AB)-P(A)P(B)|&gt;\dfrac14$<br>不妨设$P(A)\ge P(B)$<br>$P(AB)-P(A)P(B)\le P(A)-P(A)P(A)\le \dfrac14$<br>另有$P(A)P(B)-P(AB)=P(A)(P(AB)+P(\overline AB))-P(AB)=(P(A)-1)P(AB)+P(A)P(\overline AB)\le P(A)P(\overline A)\le\dfrac14$</p></blockquote></blockquote><blockquote><p>例7 $P\lbrace X\ge0,Y\ge0\rbrace =\dfrac37$,$P\lbrace X\ge0\rbrace =P\lbrace Y\ge0\rbrace =\dfrac47$,求<br>$A=\lbrace \mathbf{max}\lbrace X,Y\rbrace \ge0\rbrace $<br>$B=\lbrace \mathbf{max}\lbrace X,Y\rbrace &lt;0,\mathbf{min}\lbrace X,Y\rbrace &lt;0\rbrace $<br>$C=\lbrace \mathbf{max}\lbrace X,Y\rbrace \ge0,\mathbf{min}\lbrace X,Y\rbrace &lt;0\rbrace $<br>$P(A)=P(\lbrace X\ge0\rbrace \cup\lbrace Y\ge0\rbrace )=P(\lbrace X\ge0\rbrace )+P(\lbrace Y\ge0\rbrace )-P(\lbrace X\ge0\rbrace ,\lbrace Y\ge0\rbrace )=\dfrac57$<br>$P(B)=P(\mathbf{max}\lbrace X,Y\rbrace &lt;0)=1-P(A)=\dfrac27$<br>$P(C)=P(A)-P(\mathbf{max}\lbrace X,Y\rbrace \ge0,\mathbf{min}\lbrace X,Y\rbrace \ge0)=P(A)-P(\mathbf{min}\lbrace X,Y\rbrace \ge0)=\dfrac57-\dfrac37=\dfrac27$<br><span class="idea">全集分解思想</span></p></blockquote><blockquote><p>例8 有3女7男,无放回取,求概率</p><blockquote><p>第三次取到女的概率<br>设$A_i=${第i次取到女}<br>$P(A_3)=\dfrac3{10}$</p></blockquote><blockquote><p>第三次才取到女的概率<br>$P(\overline A_1\overline A_2 A_3)=P(\overline A_1)P(\overline A_2|\overline A_1)P(A_3|\overline A_1\overline A_2)=\dfrac7{10}\dfrac69\dfrac38=\dfrac7{40}$</p></blockquote><blockquote><p>已知前两次没有取到女,求第三次取到女的概率<br>$P(A_3|\overline A_1\overline A_2)=\dfrac38$</p></blockquote></blockquote><blockquote><p>例9 甲命中目标概率为0.6,乙命中目标的概率为0.5</p><blockquote><p>任选一人,若命中,求是甲的概率.<br>设$A_1=${选中甲},$A_2=${选中乙},$B=${目标被命中}<br>$P(A_1|B)=\dfrac{P(A_1B)}{P(B)}=\dfrac{P(A_1)P(B|A_1)}{P(A_1)P(B|A_1)+P(A_2)P(B|A_2)}=\dfrac6{11}$</p></blockquote><blockquote><p>甲乙两人独立射击,若命中,是甲命中的概率<br>记$A_1=${甲命中},$A_2=${乙命中},$B=${目标被命中},$B=A_1\cup A_2$<br>$P(A_1|B)=\dfrac{P(A_1B)}{P(B)}=\dfrac{P(A_1)}{P(A_1)+P(A_2)-P(A_1)P(A_2)}=\dfrac34$</p></blockquote></blockquote><blockquote><p>例10 某批产品优等率为$80%$,检验员将优等品判为优等品的概率为$97%$,将非优等品判为优等品的概率为$2%$.由三个独立的检验员组成小组,至少两人判优认定为优等品.求已经认定为优等品的条件下,确实为优等品的概率.<br>记$A=\lbrace$产品为优等品$\rbrace$,$B=\lbrace$产品判为优等品$\rbrace$,求$P(A|B)$.<br>$P(A|B)=\dfrac{P(AB)}{P(B)}=\dfrac{P(A)P(B|A)}{P(A)P(B|A)+P(\bar A)P(B|\bar A)}$.<br>其中$P(A)=0.8,P(\bar A)=0.2$<br>记$X=$小组将优等品判为优等品的人数,$X\sim B(3,0.97)$,<br>记$Y=$小组将非优等品判为优等品的人数,$Y\sim B(3,0.02)$.<br>$P(B|A)=P\lbrace X\ge2\rbrace=C_3^2\cdot0.97^2\cdot0.03^1+C_3^3\cdot0.97^3=0.997354$,<br>$P(B|\bar A)=P\lbrace Y\ge2\rbrace=C_3^2\cdot0.2^2\cdot0.98^1+C_3^3\cdot0.02^3=0.001184$.<br>$P(A|B)=0.9997$</p></blockquote><h2 id="事件的独立性"><a href="#事件的独立性" class="headerlink" title="事件的独立性"></a>事件的独立性</h2><p>若$P(AB)=P(A)P(B)$,称事件$A,B$独立,即$P(B|A)=P(B),P(A)&gt;0$.</p><p>称$A_1,A_2,\cdots A_n(n\ge2)$相互独立,如果其中任意有限个事件$A_{i_1},A_{i_2},\cdots,A_{i_k}$,有$P(A_{i_1}A_{i_2}\cdots A_{i_k})=P(A_{i_1})P(A_{i_2})\cdots P(A_{i_k})$,相互独立一定两两独立.</p><blockquote><p>例11 将一枚硬币独立得掷两次,$A_1=${掷一次为正面},$A_2=${第二次为正面},$A_3=${正反面各一次},$A_4=${正面出现两次},则<br>(A)$A_1,A_2,A_3$相互独立<br>(B)$A_2,A_3,A_4$相互独立<br>(C)$A_1,A_2,A_3$两两独立<br>(D)$A_2,A_3,A_4$两两独立<br>概率空间为(正,正),(正,反),(反,正),(反,反),<br>$P(A_1)=\dfrac12$,$P(A_2)=\dfrac12$,$P(A_3)=\dfrac12$,$P(A_4)=\dfrac14$,$P(A_1A_2)=\dfrac14$,$P(A_2A_3)=\dfrac14$,$P(A_1A_3)=\dfrac14$,$P(A_1A_2A_3)=0$,$P(A_3A_4)=0$.</p></blockquote><ul><li>若$A,B$独立$\Leftrightarrow$$A,\bar B$独立$\Leftrightarrow$$\bar A, B$独立$\Leftrightarrow$$\bar A, \bar B$独立.</li><li>相互独立的事件组,把其中若干事件换为其对立事件,得到的事件组依然相互独立.</li><li>相互独立的事件组,从中取出若干事件做任意运算,只要不包含相同的事件,任意运算结果都相互独立.</li><li>若$P(A)&gt;0$,则$A,B$独立$\Leftrightarrow$$P(B|A)=P(B)$.</li><li>若$0&lt;P(A)&lt;1$,则$A,B$独立$\Leftrightarrow$$P(B|A)=P(B|\bar A)$$\Leftrightarrow$$P(B|A)+P(\bar B|\bar A)=1$.</li><li>若$P(A)=0$或$P(A)=1$,则$A$与任何事件独立.</li><li>若$0&lt;P(A)&lt;1$,$0&lt;P(A)&lt;1$.$A,B$互斥$\Rightarrow$$A,B$不独立.$A,B$存在包含关系$\Rightarrow$$A,B$不独立.</li></ul><blockquote><p>例12 设$A,B$相互独立,$0&lt;P(A)&lt;1$,$P(C)=1$,则不相互独立的是</p><blockquote><p>(A) $A,B,A\cup C$<br>$P(A\cup C)=1$,故$A\cup C$与任何事件独立.<br>(B) $A,B,A-C$<br>$P(A-C)=P(A\bar C)\le P(\bar C)=0$,故$A-C$与任何事件独立.<br>(C) $A,B,AC$<br>$P(AAC)=P(AC)\neq P(A)P(AC)$<br>(D) $A,B,\bar A\bar C$<br>$P(\bar A\bar C)\le P(\bar C)=0$,故$\bar A\bar C$与任何事件独立.</p></blockquote></blockquote><h1 id="一维随机变量及其分布"><a href="#一维随机变量及其分布" class="headerlink" title="一维随机变量及其分布"></a>一维随机变量及其分布</h1><h2 id="判分布"><a href="#判分布" class="headerlink" title="判分布"></a>判分布</h2><p>若$F(x)$是分布函数,有</p><ul><li>$F(x)$单调不减</li><li>右连续</li><li>$F(-\infty)=0,F(+\infty)=1$</li></ul><p>若$p_i$是概率分布,有</p><ul><li>$p_i\ge0$</li><li>$\sum p_i=1$</li></ul><p>若$f(x)$是概率密度,则</p><ul><li>$f(x)\ge0$</li><li>$\int_{-\infty}^{+\infty}f(x)\mathrm{d}x=1$</li></ul><blockquote><p>例1 设$F_1(x)$,$F_2(x)$是分布函数,又$a,b&gt;0,a+b=1$,证明$F(x)=aF_1(x)+bF_2(x)$是分布函数.<br>显然$F(x)$单调不减,右连续.<br>$F(-\infty)=0,$F(+\infty)=a+b=1$$.</p></blockquote><blockquote><p>例3 设$F_1(x)$,$F_2(x)$是分布函数,$f_1(x),f_2(x)$是相应的概率密度,则以下必为概率密度的是</p><blockquote><p>(A) $f_1(x)f_2(x)$<br>(B) $2f_2(x)F_1(x)$<br>(C) $f_1(x)F_2(x)$<br>(D) $f_1(x)F_2(x)+F_1(x)f_2(x)$<br>$\int_{-\infty}^{+\infty}f_1(x)F_2(x)+F_1(x)f_2(x)\mathrm{d}x=\int_{-\infty}^{+\infty}\mathrm{d}[F_1(x)F_2(x)]=1$</p></blockquote></blockquote><blockquote><p>例4 $X\sim f(x)$为偶函数,$x~F(x)$,证明若$a&gt;0$</p><blockquote><p>$F(-a)=1-F(a)=\dfrac12-\int_0^af(x)\mathrm{d}x$<br>$p\lbrace|X|&lt;a\rbrace=2F(a)-1$<br>$p\lbrace|X|&gt;a\rbrace=2[1-F(a)]$</p></blockquote></blockquote><h2 id="求分布"><a href="#求分布" class="headerlink" title="求分布"></a>求分布</h2><p>$X\sim p_i$,则$F(x)=\sum\limits_{x_i\le x}p_i$.</p><blockquote><p>例5 设$X\sim\begin{bmatrix}1 &amp; 2 &amp; 3 \\ \theta^2 &amp; 2\theta(1-\theta) &amp; (1-\theta)^2 \end{bmatrix}$,且$P\lbrace X\ge2\rbrace=\dfrac34$,求$\theta$及$x~F(x)$.<br>有$P\lbrace X=1\rbrace=\dfrac14=\theta^2,\theta=\dfrac12$.<br>$X\sim\begin{bmatrix}1 &amp; 2 &amp; 3 \\ \dfrac14 &amp; \dfrac12 &amp; \dfrac14 \end{bmatrix}$<br>则$F(x)=\begin{dcases}0, &amp;x&lt;1 \\ \dfrac14, &amp; 1\le x&lt;2 \\ \dfrac34, &amp; 2\le x&lt;3\\1, &amp;x\ge3\end{dcases}$<br><span class="idea">由于右连续,等号应该跟着大于号</idea></p></blockquote><p><strong>0-1分布:一次伯努利实验</strong>$X\sim B(1,p)$</p><p>$X\sim\begin{bmatrix}0 &amp; 1 \\ 1-p &amp; p\end{bmatrix}$</p><p><strong>二项分布:$n$次伯努利实验</strong>$X\sim B(n,p)$</p><p>$P\lbrace X=k\rbrace=C_n^kp^k(1-p)^{n-k},k=0,1,2,\cdots,n$</p><p><strong>几何分布:首中即停止的伯努利实验</strong></p><p>$P\lbrace X=k\rbrace=p(1-p)^{k-1},k=1,2,3,\cdots$</p><p><strong>超几何分布:$N$件产品$M$件次品任取$n$个</strong>$X\sim H(n,M,N)$</p><p>$P\lbrace X=k\rbrace=\dfrac{C_M^kC_{N-M}^{n-k}}{C_N^n}$</p><p><strong>泊松分布:一段时间内质点来的个数</strong>$X\sim P(\lambda)$</p><p>$P\lbrace X=k\rbrace=\dfrac{\lambda^k}{k!}e^{-\lambda},k=0,1,2,3,\cdots$</p><blockquote><p>例6 请确定下列随机变量概率密度函数中变量$a$的值,并求出概率分布.<br>$f(x)=\begin{dcases}ae^x, &amp;x&lt;0 \\ \dfrac14, &amp; 0\le x&lt;2 \\ 0, &amp; x\ge2\end{dcases}$<br>$1=\int_{-\infty}^{+\infty}f(x)\mathrm{d}x=\int_{-\infty}^0ae^x\mathrm{d}x+\int_0^2\dfrac14\mathrm{d}x$,$a=\dfrac12$<br>$F(x)=\begin{dcases}\dfrac12e^x, &amp;x&lt;0 \\ \dfrac12+\dfrac14x, &amp; 0\le x&lt;2 \\ 1, &amp; x\ge2\end{dcases}$</p></blockquote><p><strong>均匀分布:落入子区间的概率与子区间长度成正比</strong>$X\sim U(a,b)$</p><p>$x\sim f(x)=\begin{dcases}\dfrac1{b-a}, &amp;a&lt;x&lt;b \\ 0, &amp; \text{other.}\end{dcases}$<br>$x\sim F(x)=\begin{dcases}0, &amp; x&lt;a \\ \dfrac{x-a}{b-a}, &amp;a\le x&lt;b \\ 1, &amp; x\ge b \end{dcases}$</p><p><strong>指数分布:连续的几何分布</strong>$X\sim E(\lambda)$</p><p>$x\sim f(x)=\begin{dcases}\lambda e^{-\lambda x}, &amp;x&gt;0 \\ 0, &amp; \text{other.}\end{dcases}$<br>$x\sim F(x)=\begin{dcases}0, &amp; x&lt;0 \\ 1-e^{-\lambda x}, &amp;x\ge 0 \end{dcases}$<br>指数分布具有无记忆性,$P\lbrace X\ge t+s|X\ge t\rbrace=P\lbrace X\ge s\rbrace$</p><p><strong>正态分布</strong>$X\sim N(\mu,\sigma^2)$</p><p>$x\sim f(x)=\dfrac1{\sqrt{2\pi}\sigma}e^{-\dfrac{(x-\mu)^2}{2\sigma^2}}$</p><p>标准正态分布$x\sim\varphi(x)=\dfrac1{\sqrt{2\pi}}e^{-\dfrac{x^2}2}$</p><p>若$X\sim N(\mu,\sigma^2)$</p><ul><li>$\dfrac{x-\mu}\sigma\sim N(0,1)$</li><li>$F(x)=\varPhi(\dfrac{x-\mu}\sigma)$</li><li>$P(a\le X\le b)=\varPhi(\dfrac{b-\mu}\sigma)-\varPhi(\dfrac{a-\mu}\sigma)$</li><li>$P(\mu-\sigma\le X\le\mu+\sigma)=\varPhi(1)-\varPhi(-1)=2\varPhi(1)-1$</li><li>$P(\mu-k\sigma\le X\le\mu+k\sigma)=\varPhi(k)-\varPhi(-k)=2\varPhi(k)-1$</li></ul><p>若$X\sim N(0,1)$</p><ul><li>$\varPhi(-x)=1-\varPhi(x)$</li><li>$P(|X|\le a)=2\varPhi(a)-1$</li><li>$P(|X|&gt;a)=2[1-\varPhi(a)]$</li></ul><blockquote><p>例7 一条生产线连续生产$n$件产品不出故障的概率为$\dfrac{e^{-1}}{n!},n=0,1,2,\cdots$.设产品优质率为$p(0&lt;p&lt;1)$,各产品独立.求在两次故障间共生产$k$件优质品的概率.<br>设$B_k=\lbrace$两次故障间共生产$k$件优质品$\rbrace$,<br>$B_n=\lbrace$两次故障间共生产$n$件产品$\rbrace$,<br>$P(A_n)=\dfrac{e^{-1}}{n!}$<br>$P(B_k|A_n)=C_n^kp^k(1-p)^{n-k},k\ge n$<br>$P(B_k)=\sum\limits_{n=k}^{\infty}p(A_n)P(B_k|A_n)=\dfrac{e^{-1}}{n!}C_n^kp^k(1-p)^{n-k}=\dfrac{e^{-1}p^k}{k!}\sum\limits_{n=k}^{\infty}\dfrac{(1-p)^{n-k}}{(n-k)!}=\dfrac{e^{-1}p^k}{k!}e^{1-p}=\dfrac{p^k}{k!}e^{-p}$</p></blockquote><blockquote><p>例8 设$X~U(2,5)$,对$X$进行3次独立观测,求至少有2次观测值大于3的概率.<br>$p=P\lbrace X&gt;3\rbrace=\dfrac23$,<br>记$Y=\lbrace$ 3次独立观测中$X$的观测值大于3的次数$\rbrace$,$Y\sim B(3,\dfrac23)$.<br>$P\lbrace Y\ge2\rbrace=\dfrac{20}{27}$.</p></blockquote><blockquote><p>例9 设某设备在任何时间长度$t$内发生故障的次数$N(t)$服从参数为$\lambda t$的泊松分布.</p><blockquote><p>求相继出现两次故障之间的时间间隔$T$的分布.<br>$T\sim F_T(t)=P\lbrace T\le t\rbrace=1-P\lbrace T&gt;t\rbrace=1-P\lbrace N(t)=0\rbrace=1-e^{-\lambda t},t\ge0$<br>求设备已经无故障工作8小时的情况下,再无故障工作16小时的概率.<br>$P\lbrace T\ge16+8|T\ge8\rbrace=\dfrac{P\lbrace T\ge24\rbrace}{P\lbrace T\ge8\rbrace}=\dfrac{1-P\lbrace T\le24\rbrace}{1-P\lbrace T\le8\rbrace}=\dfrac{e^{-24\lambda}}{e^{-e\lambda}}=e^{-16\lambda}$</p></blockquote></blockquote><blockquote><p>例10 $X\sim N(0,1)$,给定$0&lt;\alpha&lt;1$,数$\mu_\alpha$满足$P\lbrace X&gt;\mu_\alpha\rbrace=\alpha$.若$P\lbrace|X|&lt;x\rbrace=\alpha$,求$x$.<br>$P\lbrace|X|&lt;x\rbrace=2\varPhi(i)-1$,$1-\varPhi(i)=\dfrac{1-\alpha}2$,$x=\mu_{\frac{1-\alpha}2}$</p></blockquote><blockquote><p>例12 $|X|\le1$,$P\lbrace X=-1\rbrace=\dfrac18$,$P\lbrace X=-1\rbrace=\dfrac14$,在$\lbrace-1&lt;X&lt;1\rbrace$的条件下,$X$在$(-1,1)$内任一子区间上取值的条件概率与该子区间长度成正比.求$X~F(X)$.<br>$F(x)=P\lbrace X\le x\rbrace$,<br>记$A=\lbrace-1&lt;X&lt;1\rbrace$,$P(A)=\dfrac58$,<br>$f_X(x|A)=\begin{dcases}\dfrac12, &amp; -1&lt;x&lt;1 \\0, &amp; \text{other}\end{dcases}$<br>在$A$上,$F(x)=\dfrac18+P\lbrace-1&lt;X\le x\rbrace=\dfrac18+P\lbrace-1&lt;X\le x,\Omega\rbrace=\dfrac18+P\lbrace-1&lt;X\le x,A\cup\bar A\rbrace=\dfrac18+P\lbrace-1&lt;X\le x,A\rbrace=\dfrac18+P(A)P\lbrace-1&lt;X\le x|A\rbrace=\dfrac18+\dfrac58\dfrac{x+1}2$<br>$x\sim F(x)=\begin{dcases}0, &amp; x&lt;-1 \\ \dfrac{5x+7}{16}, &amp; -1\le x&lt;1 \\ 1, &amp;x\ge1 \end{dcases}$</p></blockquote><blockquote><p>例13 $X\sim\begin{bmatrix}0 &amp; 1 \\ \dfrac12 &amp; \dfrac12 \end{bmatrix}$,在$X=i$的条件下,$Y\sim U(0,i),i=1,2$.求$Y\sim F_Y(y)$.<br>$F_Y(y)=P\lbrace Y\le y \rbrace$<br>若$y&lt;0$,$F_Y(y)=0$,若$y\ge2$,$F_Y(y)=1$.<br>若$0\le x&lt;1$,$F_Y(y)=P\lbrace Y\le y,\Omega\rbrace=P\lbrace Y\le y,(X=1)\cup(X=2)\rbrace=P(X=1)P\lbrace Y\le y|X=1\rbrace+P(X=2)P\lbrace Y\le y|X=2\rbrace=\dfrac12y+\dfrac12\dfrac{y}2=\dfrac34y$<br>若$1\le x&lt;2$,$F_Y(y)=P\lbrace Y\le y,\Omega\rbrace=P(X=1)P\lbrace Y\le y|X=1\rbrace+P(X=2)P\lbrace Y\le y|X=2\rbrace=\dfrac12+\dfrac12\dfrac{y}2=\dfrac{y+2}4$</p></blockquote><h2 id="用分布"><a href="#用分布" class="headerlink" title="用分布"></a>用分布</h2><p>设$X\sim F(x)$,则</p><ul><li>$P(x\le a)=F(a)$</li><li>$P(x&lt;a)=F(a-0)$</li><li>$P(x=a)=P(x\le a)-P(x&lt;a)=F(a)-F(a-0)$</li><li>$P(a&lt;x&lt;b)=P(x&lt;b)-P(x\le a)=F(b-0)-F(a)$</li><li>$P(a\le x\le b)=P(x\le b)-P(x&lt;a)=F(b)-F(a-0)$</li></ul><blockquote><p>例14 设$X\sim F(x)=\begin{dcases}0, &amp; x&lt;0 \\ \dfrac12, &amp; 0\le x&lt;1 \\ 1-e^{-x}, &amp;x\ge1 \end{dcases}$,求$P(0\le X\le1)$,$P(0&lt;X&lt;1)$.<br>$P(0\le X\le1)=F(1)-F(0-0)=1-e^{-1}$,<br>$P(0&lt;X&lt;1)=F(1-0)-F(0)=\dfrac{12}-\dfrac{12}=0$,</p></blockquote><p>设$X\sim p_i$,则$P(x\in I)=\sum\limits_{x_i\in I}p_i$.</p><p>设$X\sim f(x)$,则$P(x\in I)=\int_If(x)\mathrm{d}x$.</p><blockquote><p>例15 设$X\sim f(x)=\begin{dcases}Ax, &amp; 1&lt;x&lt;2 \\ B, &amp; 2\le x&lt;3 \\ 0, &amp; \text{other} \end{dcases}$,$P(1&lt;x&lt;2)=P(2&lt;x&lt;3)$求$A,B$.<br>1=$\int_{-\infty}^{+\infty}f(x)\mathrm{d}x=\int_1^2Ax\mathrm{d}x+\int_2^3B\mathrm{d}x=\dfrac32A+B$,<br>$\int_1^2Ax\mathrm{d}x+\int_2^3B\mathrm{d}x$,$\dfrac32A=B$.<br>$A=\dfrac13,B=\dfrac12$</p></blockquote><blockquote><p>例16</p><blockquote><p>$X\sim f(x)=Ae^{-\left(\dfrac{x+1}2\right)^2}$,且$aX+b\sim N(0,1),a&gt;0$,求$A,a,b$.<br>$f(x)=\dfrac1{\sqrt{2\pi}\sigma}e^{-\dfrac{(x-\mu)^2}{2\sigma^2}}$,$\mu=-1,\sigma=\sqrt2,A=\dfrac1{2\sqrt\pi}$.<br>$\dfrac{X-(-1)}{\sqrt2}=aX+b$,$a=b=\dfrac1{\sqrt2}$<br>$X\sim f(x)=\begin{dcases}\dfrac13, &amp; 0\le x\le1 \\ \dfrac29, &amp; 3\le xle6 \\ 0, &amp; \text{other} \end{dcases}$,$P(X\ge k)=\dfrac23$,求$k$的取值范围.<br>$1\le k\le3$</p></blockquote></blockquote><h2 id="求函数分布"><a href="#求函数分布" class="headerlink" title="求函数分布"></a>求函数分布</h2><p>$X\sim\begin{bmatrix}x_1 &amp; x_2 &amp; \cdots \\ p_1 &amp; p_2 &amp; \cdots \end{bmatrix}$,$Y=g(X)$,则$Y\sim\begin{bmatrix}g(x_1) &amp; g(x_2) &amp; \cdots \\ p_1 &amp; p_2 &amp; \cdots \end{bmatrix}$</p><blockquote><p>例17 $X\sim\begin{bmatrix}-2 &amp; -1 &amp; 0 &amp; 1 &amp; 2 &amp; 3 \\ 0.05 &amp; 0.15 &amp; 0.20 &amp; 0.25 &amp; 0.20 &amp; 0.15 \end{bmatrix}$,$Y=2X+1$,$Z=X^2$,求$Y,Z$的概率分布<br>$Y\sim\begin{bmatrix}-3 &amp; -1 &amp; 1 &amp; 3 &amp; 5 &amp; 7 \\ 0.05 &amp; 0.15 &amp; 0.20 &amp; 0.25 &amp; 0.20 &amp; 0.15 \end{bmatrix}$<br>$Z\sim\begin{bmatrix}0 &amp; 1 &amp; 4 &amp; 9 \\ 0.20 &amp; 0.40 &amp; 0.25 &amp; 0.15 \end{bmatrix}$</p></blockquote><p>设$X\sim F_X(x)$,$Y=g(X)$,<br>则$F_Y(y)=P\lbrace Y\le y\rbrace=P\lbrace g(X)\le y\rbrace=\int_{g(x)\le y}f_X(x)\mathrm{d}x$</p><blockquote><p>例20 $X\sim f(x)=\begin{dcases}\dfrac12, &amp; -1&lt;x&lt;0 \\ \dfrac14, &amp; 0\le x&lt;2 \\ 0, &amp; \text{other} \end{dcases}$,$Y=X^2$,求$Y\sim f_Y(y)$.<br>则$F_Y(y)=P\lbrace Y\le y\rbrace=P\lbrace X^2\le y\rbrace=\int_{g(x)\le y}f_X(x)\mathrm{d}x$<br><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="480" height="312" viewBox="0 0 360 234"><defs><symbol overflow="visible" id="a"><path d="M5.29-2.191H.55v-.82h4.74zm0 0"/></symbol><symbol overflow="visible" id="b"><path d="M3.727 0h-.88v-5.602c-.21.204-.488.407-.831.61a5.526 5.526 0 01-.926.453v-.852c.492-.23.922-.507 1.289-.84.367-.324.625-.644.781-.957h.567zm0 0"/></symbol><symbol overflow="visible" id="c"><path d="M.906 0v-1H1.91v1zm0 0"/></symbol><symbol overflow="visible" id="d"><path d="M.414-3.531C.41-4.375.496-5.055.676-5.574c.172-.512.433-.91.777-1.192.344-.277.774-.418 1.297-.421.379.003.715.082 1.008.234.289.156.531.379.719.668.187.293.335.648.445 1.062.105.422.156.985.16 1.692-.004.844-.09 1.523-.258 2.035-.176.52-.433.918-.773 1.195-.348.281-.781.418-1.301.422-.695-.004-1.234-.25-1.625-.742-.477-.594-.715-1.563-.71-2.91zm.906 0c-.004 1.18.133 1.96.41 2.347.274.391.614.586 1.02.582.398.004.738-.191 1.016-.586.273-.386.41-1.167.414-2.343-.004-1.176-.14-1.957-.414-2.348-.278-.383-.621-.578-1.028-.582a1.133 1.133 0 00-.965.516c-.304.437-.457 1.242-.453 2.414zm0 0"/></symbol><symbol overflow="visible" id="e"><path d="M.414-1.875l.922-.078c.07.453.226.789.476 1.012.247.23.547.343.903.34.422.003.781-.157 1.074-.477.29-.32.434-.742.438-1.27-.004-.5-.145-.894-.422-1.187-.285-.285-.653-.43-1.106-.434a1.6 1.6 0 00-.765.192 1.5 1.5 0 00-.536.5L.57-3.383l.696-3.68h3.558v.844H1.97l-.387 1.922c.43-.297.879-.45 1.352-.45.62 0 1.148.22 1.582.653.425.434.64.989.644 1.668-.004.649-.191 1.211-.566 1.68-.461.578-1.09.863-1.88.867C2.06.117 1.528-.062 1.122-.426.707-.789.473-1.273.414-1.875zm0 0"/></symbol><symbol overflow="visible" id="f"><path d="M5.035-.844V0H.305C.297-.21.328-.414.406-.61c.117-.32.313-.636.578-.953.266-.308.649-.671 1.149-1.085.777-.633 1.3-1.137 1.578-1.512.27-.375.406-.727.41-1.059a1.21 1.21 0 00-.375-.883c-.25-.234-.574-.355-.973-.359-.425.004-.761.133-1.015.383-.258.258-.387.61-.387 1.055L.47-5.117c.062-.672.293-1.188.699-1.54.398-.35.941-.527 1.625-.53.684.003 1.227.195 1.629.57.398.383.598.855.601 1.418-.003.289-.062.57-.175.844-.121.28-.313.57-.582.875-.274.304-.727.726-1.356 1.257-.531.446-.87.746-1.015.903-.153.16-.274.316-.372.476zm0 0"/></symbol><symbol overflow="visible" id="g"><path d="M.422-1.89l.875-.118c.098.504.27.863.516 1.078.242.223.539.332.886.328.41.004.758-.14 1.047-.43a1.47 1.47 0 00.43-1.062 1.383 1.383 0 00-.399-.996 1.407 1.407 0 00-1.004-.394 3 3 0 00-.62.093l.097-.77c.059.009.105.013.14.013.376 0 .712-.098 1.012-.293.297-.196.446-.497.45-.907a1.103 1.103 0 00-.329-.797c-.218-.21-.5-.316-.843-.32-.344.004-.63.11-.856.324-.23.215-.375.54-.437.965l-.88-.156c.106-.586.348-1.04.731-1.367.38-.32.856-.485 1.422-.489.39.004.75.09 1.078.254.328.172.578.399.758.684.172.293.262.602.262.922 0 .312-.086.594-.25.848a1.76 1.76 0 01-.738.605c.421.102.753.3.988.605.234.31.351.696.351 1.157 0 .629-.23 1.16-.683 1.59-.461.433-1.035.644-1.73.648-.63-.004-1.153-.188-1.567-.559C.71-.809.477-1.293.422-1.89zm0 0"/></symbol><symbol overflow="visible" id="h"><path d="M3.234 0v-1.715H.125v-.805l3.27-4.636h.714v4.636h.97v.805h-.97V0zm0-2.52v-3.226L.992-2.52zm0 0"/></symbol></defs><path d="M10 153.02l.105.066.106.07.207.133.418.27.84.53 1.676 1.056 3.347 2.062 7.266 4.254 6.785 3.7 6.648 3.374 7.215 3.38 6.73 2.886 7.298 2.84 7.164 2.496 6.68 2.066 7.245 1.953.211.055.211.05.426.106.844.203 1.691.399 3.383.746.102.023.105.02 1.45.3 1.656.325.105.02.102.019.207.039.418.078.828.156 1.656.293.227.04.222.038.45.079.902.148 1.797.285.113.016.113.02.223.03 1.348.2 1.8.246.211.031.207.027.422.051.84.106 1.676.199.422.047.418.047.84.09 1.675.167.117.012.114.008.226.023.453.04.91.082.114.007.113.012.23.016.454.039.91.07.453.031.457.032.91.062.227.016.226.011.453.028.91.05.114.008.11.004.226.012.445.023.11.004.113.008.222.008.446.023.226.008.223.008.445.02.895.03.11.005.112.004.223.007.445.012.114.004.11.004.222.004.449.012.11.003h.113l.222.008h.114l.109.004.223.004h.113l.113.004.223.004h.11l.112.004.223.004h.207l.211.004h.207l.207.004h.313l.105.003h2.184l.105-.003h.418l.207-.004h.207l.211-.004h.102l.105-.004.207-.004h.207l.211-.004.414-.008.106-.004h.105l.207-.008.414-.007.114-.004h.113l.226-.008.454-.012.226-.008.223-.007.906-.032.45-.015.902-.04.113-.003.113-.008.227-.008.453-.023.902-.047.113-.008.114-.004.222-.016.453-.027.903-.055.21-.015.212-.012.422-.031.843-.059 1.688-.136.21-.016.208-.02.422-.035.843-.078 1.688-.168.226-.023.231-.024 1.371-.152 1.824-.215.117-.016.114-.011.226-.032.457-.058.914-.121 1.829-.254.109-.016.113-.015.227-.036.445-.066.899-.137 1.792-.285 3.59-.629.102-.02.316-.058.418-.078.836-.164 1.672-.332 3.348-.715.113-.027.113-.024.227-.05.453-.106.91-.207 1.813-.434 3.629-.921 6.777-1.922 6.64-2.137 7.208-2.598 6.722-2.691 7.29-3.203 7.155-3.438 6.676-3.468 7.239-4.047 6.753-4.043 6.625-4.22 7.188-4.85 6.703-4.794 7.27-5.484 6.789-5.39 6.656-5.54 7.215-6.289 6.738-6.136 7.3-6.938 7.169-7.105 6.687-6.895 7.25-7.758 6.766-7.508 6.637-7.617 7.199-8.543 6.719-8.238.234-.29.703-.878.934-1.176 1.875-2.363.468-.594.47-.597.937-1.192.117-.152.117-.149.234-.3.47-.598.116-.152.118-.149.234-.3.117-.153.117-.148.235-.305" fill="none" stroke-width="1.6" stroke-linecap="square" stroke="#5e81b5" stroke-miterlimit="3.25"/><path d="M10 189.648v-4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#a" y="202.65" fill="#666"/><g fill="#666"><use xlink:href="#b" x="6" y="202.65"/><use xlink:href="#c" x="11.562" y="202.65"/><use xlink:href="#d" x="14.34" y="202.65"/></g><path d="M21.379 189.648v-2.398M32.758 189.648v-2.398M44.14 189.648v-2.398M55.52 189.648v-2.398M66.898 189.648v-4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#a" x="56.898" y="202.65" fill="#666"/><g fill="#666"><use xlink:href="#d" x="62.898" y="202.65"/><use xlink:href="#c" x="68.459" y="202.65"/><use xlink:href="#e" x="71.238" y="202.65"/></g><path d="M78.277 189.648v-2.398M89.656 189.648v-2.398M101.035 189.648v-2.398M112.418 189.648v-2.398M123.797 189.648v-4M135.176 189.648v-2.398M146.555 189.648v-2.398M157.934 189.648v-2.398M169.313 189.648v-2.398M180.695 189.648v-4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><g fill="#666"><use xlink:href="#d" x="173.694" y="202.65"/><use xlink:href="#c" x="179.255" y="202.65"/><use xlink:href="#e" x="182.034" y="202.65"/></g><path d="M192.074 189.648v-2.398M203.453 189.648v-2.398M214.832 189.648v-2.398M226.21 189.648v-2.398M237.594 189.648v-4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><g fill="#666"><use xlink:href="#b" x="230.592" y="202.65"/><use xlink:href="#c" x="236.153" y="202.65"/><use xlink:href="#d" x="238.932" y="202.65"/></g><path d="M248.973 189.648v-2.398M260.352 189.648v-2.398M271.73 189.648v-2.398M283.11 189.648v-2.398M294.488 189.648v-4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><g fill="#666"><use xlink:href="#b" x="287.49" y="202.65"/><use xlink:href="#c" x="293.051" y="202.65"/><use xlink:href="#e" x="295.83" y="202.65"/></g><path d="M305.871 189.648v-2.398M317.25 189.648v-2.398M328.629 189.648v-2.398M340.008 189.648v-2.398M351.387 189.648v-4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><g fill="#666"><use xlink:href="#f" x="344.388" y="202.65"/><use xlink:href="#c" x="349.949" y="202.65"/><use xlink:href="#d" x="352.728" y="202.65"/></g><path d="M2.887 189.648H358.5M123.797 226.281h4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#a" x="108.796" y="229.78" fill="#666"/><use xlink:href="#b" x="114.796" y="229.78" fill="#666"/><path d="M123.797 218.953h2.398M123.797 211.629h2.398M123.797 204.3h2.398M123.797 196.977h2.398M123.797 189.648h4M123.797 182.324h2.398M123.797 175h2.398M123.797 167.672h2.398M123.797 160.348h2.398M123.797 153.02h4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#b" x="114.796" y="156.52" fill="#666"/><path d="M123.797 145.695h2.398M123.797 138.367h2.398M123.797 131.043h2.398M123.797 123.715h2.398M123.797 116.39h4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#f" x="114.796" y="119.89" fill="#666"/><path d="M123.797 109.063h2.398M123.797 101.738h2.398M123.797 94.414h2.398M123.797 87.086h2.398M123.797 79.762h4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#g" x="114.796" y="83.26" fill="#666"/><path d="M123.797 72.434h2.398M123.797 65.11h2.398M123.797 57.781h2.398M123.797 50.457h2.398M123.797 43.129h4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#h" x="114.796" y="46.63" fill="#666"/><path d="M123.797 35.805h2.398M123.797 28.477h2.398M123.797 21.152h2.398M123.797 13.824h2.398M123.797 6.5h4" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/><use xlink:href="#e" x="114.796" y="10" fill="#666"/><path d="M123.797 226.281V6.5" fill="none" stroke-width=".2" stroke="#666" stroke-miterlimit="3.25"/></svg><br>当$y&lt;0$,$F_Y(y)=0$,当$y&lt;0$,$F_Y(y)=1$.<br>当$0\le y&lt;1,F_Y(y)=P\lbrace-\sqrt y\le X\le\sqrt y\rbrace=\int_{-\sqrt y}^{\sqrt y}f_X(x)\mathrm{d}x=\int_{-\sqrt y}^0\dfrac12\mathrm{d}x+\int_0^{\sqrt y}\dfrac14\mathrm{d}x=\dfrac34\sqrt{y}$.<br>当$1\le y&lt;4,F_Y(y)=P\lbrace-1\le X\le\sqrt y\rbrace=\int_{-1}^0\dfrac12\mathrm{d}x+\int_0^{\sqrt y}\dfrac14\mathrm{d}x=\dfrac12+\dfrac{\sqrt y}4$<br>$F_Y(y)=\begin{dcases}0, &amp; x&lt;0 \\ \dfrac34\sqrt{y}, &amp; 0\le x&lt;1 \\ \dfrac12+\dfrac{\sqrt y}4, &amp; 0\le y&lt;1 \\ 1, &amp; x\ge4 \end{dcases}$.<br>$f_Y(y)=F’_Y(y)=\begin{dcases}\dfrac3{8\sqrt{y}}, &amp; 0&lt;x&lt;1 \\ \dfrac1{8\sqrt{y}}, &amp; 1\le x&lt;4 \\ 0, &amp; \text{other}\end{dcases}$.</p></blockquote><p>设$X\sim F_X(x)$,$Y=g(X)$严格单调,<br>则$F_Y(y)=P\lbrace Y\le y\rbrace=P\lbrace g(X)\le y\rbrace$<br>若$g$严格单调递增,<br>$F_Y(y)=P\lbrace X\le g^{-1}(y)\rbrace=\int_{-\infty}^{g^{-1}(y)}f_X(x)\mathrm{d}x$,<br>$f_Y(y)=f_X(g^{-1}(y))(g^{-1})’(y)$.<br>若$g$严格单调递增,<br>$F_Y(y)=P\lbrace X\ge g^{-1}(y)\rbrace=\int_{g^{-1}(y)}^{+\infty}f_X(x)\mathrm{d}x$,<br>$f_Y(y)=-f_X(g^{-1}(y))(g^{-1})’(y)$.<br>综上所述,$f_Y(y)=\begin{dcases}f_X(g^{-1}(y))|(g^{-1})’(y)|, &amp; \alpha&lt;y&lt;\beta \\ 0, &amp; \text{other}\end{dcases}$,$\alpha=\mathrm{min}(g(a),g(b)),\beta=\mathrm{max}(g(a),g(b))$</p><blockquote><p>例19 对球的直径进行测量,用$X$表示测量值,$X\sim U(a,b),a&gt;0$,求球的体积的概率密度.<br>$x\sim f(x)=\begin{dcases}\dfrac1{b-a}, &amp;a&lt;x&lt;b \\ 0, &amp; \text{other.}\end{dcases}$<br>体积$Y=\dfrac\pi6X^3$,$x=\sqrt[3]{\dfrac6\pi y}$<br>$f_Y(y)=\begin{dcases}f_X(\sqrt[3]{\dfrac6\pi y})(\sqrt[3]{\dfrac6\pi y})’, &amp; \dfrac\pi6a^3&lt;y&lt;\dfrac\pi6b^3 \\ 0, &amp; \text{other}\end{dcases}=\begin{dcases}\dfrac{1}{3(b-a)}\cdot \sqrt[3]{\dfrac6\pi}\cdot y^{-\dfrac23}, &amp; \dfrac\pi6a^3&lt;y&lt;\dfrac\pi6b^3 \\ 0, &amp; \text{other}\end{dcases}$</p></blockquote><!-- 16 9:30  -->]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机三级网络技术</title>
      <link href="/2020/02/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
      <url>/2020/02/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%89%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 --><ul><li><a href="#题型与分值分布">题型与分值分布</a><ul><li><a href="#单选题1题1分">单选题（1题1分）</a></li><li><a href="#综合题1题5空每空2分">综合题（1题5空，每空2分）</a></li><li><a href="#应用题">应用题</a></li></ul></li><li><a href="#网络系统结构与设计的基本原则">网络系统结构与设计的基本原则</a><ul><li><a href="#广域网技术">广域网技术</a></li><li><a href="#城域网技术">城域网技术</a></li><li><a href="#宽带城域网的组建原则">宽带城域网的组建原则</a></li><li><a href="#实训1管理和运营宽带城域网的关键技术">实训1：管理和运营宽带城域网的关键技术</a></li><li><a href="#实训2构建宽带城域网的基本技术和方案">实训2：构建宽带城域网的基本技术和方案</a></li><li><a href="#实训3网络接入技术与方法">实训3：网络接入技术与方法</a></li></ul></li><li><a href="#中小型网络系统总体规划与设计">中小型网络系统总体规划与设计</a><ul><li><a href="#基于网络的信息系统基本结构">基于网络的信息系统基本结构</a></li><li><a href="#实训2网络总体设计基本方法">实训2：网络总体设计基本方法</a></li><li><a href="#实训3网络关键设备选型">实训3：网络关键设备选型</a></li><li><a href="#实训4网络服务器选型">实训4：网络服务器选型</a></li></ul></li><li><a href="#ip地址规划设计技术">IP地址规划设计技术</a><ul><li><a href="#选择题">选择题</a></li><li><a href="#实训1规划ip地址">实训1：规划IP地址</a></li><li><a href="#实训2规划子网地址">实训2：规划子网地址</a></li><li><a href="#实训3规划可变长度子网掩码地址">实训3：规划可变长度子网掩码地址</a></li><li><a href="#实训4规划cidr地址">实训4：规划CIDR地址</a></li><li><a href="#实训5内部网络专用ip地址规划与网络地址转换">实训5：内部网络专用IP地址规划与网络地址转换</a></li><li><a href="#实训6规划ipv6地址">实训6：规划IPv6地址</a></li></ul></li></ul><!-- /TOC --><h1 id="题型与分值分布"><a href="#题型与分值分布" class="headerlink" title="题型与分值分布"></a>题型与分值分布</h1><h2 id="单选题（1题1分）"><a href="#单选题（1题1分）" class="headerlink" title="单选题（1题1分）"></a>单选题（1题1分）</h2><table><thead><tr><th>章节名</th><th>题号</th><th>分值</th></tr></thead><tbody><tr><td>网络系统结构与设计的基本原则</td><td>1-4</td><td>4</td></tr><tr><td>中小型网络技术总体规划与设计方法</td><td>5-7</td><td>3</td></tr><tr><td>IP地址规划设计技术★</td><td>8-11</td><td>4</td></tr><tr><td>路由设计基础</td><td>12-14</td><td>3</td></tr><tr><td>局域网技术</td><td>15-16</td><td>2</td></tr><tr><td>交换机及其配置★</td><td>17-20</td><td>4</td></tr><tr><td>路由器及其配置★</td><td>21-24</td><td>4</td></tr><tr><td>无限局域网安装与调试</td><td>25-27</td><td>3</td></tr><tr><td>计算机网络信息服务系统嗯安装与配置</td><td>28-32</td><td>5</td></tr><tr><td>网络安全技术</td><td>33-36</td><td>4</td></tr><tr><td>网络管理技术</td><td>37-40</td><td>4</td></tr></tbody></table><h2 id="综合题（1题5空，每空2分）"><a href="#综合题（1题5空，每空2分）" class="headerlink" title="综合题（1题5空，每空2分）"></a>综合题（1题5空，每空2分）</h2><table><thead><tr><th>考核内容</th><th>章节</th><th>题号</th></tr></thead><tbody><tr><td>IP地址计算</td><td>第3章 IP地址计算</td><td>41</td></tr><tr><td>交换机/路由器配置</td><td>第6章 交换机配置 15%<br>第7章 路由器配置 85&amp;</td><td>42</td></tr><tr><td>DHCP报文分析</td><td>超纲</td><td>43</td></tr><tr><td>Sniff抓包分析</td><td>超纲</td><td>44</td></tr></tbody></table><h2 id="应用题"><a href="#应用题" class="headerlink" title="应用题"></a>应用题</h2><table><thead><tr><th>内容</th><th>分值</th><th>题量</th></tr></thead><tbody><tr><td>第3章（路由聚合）</td><td>10-12</td><td>5-6</td></tr><tr><td>第3章（子网划分）</td><td>4-9</td><td>3-9</td></tr><tr><td>第10-11章（网络安全和管理技术）</td><td>2-4</td><td>1-3</td></tr></tbody></table><h1 id="网络系统结构与设计的基本原则"><a href="#网络系统结构与设计的基本原则" class="headerlink" title="网络系统结构与设计的基本原则"></a>网络系统结构与设计的基本原则</h1><h2 id="广域网技术"><a href="#广域网技术" class="headerlink" title="广域网技术"></a>广域网技术</h2><p>  <strong>信元是ATM交换和多路复用的基本单位</strong>，由信头和信息段组成，信头中装有控制信息，信息段中装入被分解成数据块的用户信息或其他管理信息。</p><h2 id="城域网技术"><a href="#城域网技术" class="headerlink" title="城域网技术"></a>城域网技术</h2><p>核心交换层功能</p><ul><li>实现与主干网络的互联，提供城市和宽带IP数据出口</li><li>提供宽带城域网的用户访问Internet所需的路由服务</li><li>将多个汇聚层连接起来，为汇聚层的网络提供高速分组转发，为整个城域网提供一个高速、安全与具有QoS保障能力的数据传输环境</li></ul><p>汇聚层功能</p><ul><li>根据处理结果吧用户流量转发到核心交换层或在本地进行路由处理</li><li>汇接接入层的用户流量，进行数据分组传输的汇聚、转发与交换</li><li>根据接入层的用户流量，进行本地路由、过滤、流量均衡、QoS优先级管理，以及安全控制、IP地址转换、流量整形等处理</li></ul><p>接入层功能</p><ul><li>接入层解决的是“最后一公里”问题。</li></ul><p>宽带城域网以TCP/IP协议为基础。</p><h2 id="宽带城域网的组建原则"><a href="#宽带城域网的组建原则" class="headerlink" title="宽带城域网的组建原则"></a>宽带城域网的组建原则</h2><ul><li>宽带城域网的可管理性</li><li>宽带城域网的可靠性</li><li>宽带城域网的可盈利性</li><li>宽带城域网的可拓展性</li></ul><h2 id="实训1：管理和运营宽带城域网的关键技术"><a href="#实训1：管理和运营宽带城域网的关键技术" class="headerlink" title="实训1：管理和运营宽带城域网的关键技术"></a>实训1：管理和运营宽带城域网的关键技术</h2><p>QoS（服务质量）指一个网络能够利用各种基础技术，为指定的网络通信提供更好的服务能力，是网络的一种安全机制，是用来解决网络延迟和阻塞等有问题的一种技术。目前宽带城域网保证QoS要求技术主要有：<strong>资源预留</strong>（RSVP）、<strong>服务区分</strong>（DiffServ）与<strong>多协议标签交换</strong>（MPLS）。</p><p>光以太网技术特征：</p><ul><li>系统稳定、可靠</li><li>可以使用不同带宽、传输质量的需求</li><li>每个用户可占用独立的带宽，不会产生拥堵</li></ul><h2 id="实训2：构建宽带城域网的基本技术和方案"><a href="#实训2：构建宽带城域网的基本技术和方案" class="headerlink" title="实训2：构建宽带城域网的基本技术和方案"></a>实训2：构建宽带城域网的基本技术和方案</h2><p>RPR弹性分组环（802.17）是一种网络技术。RPR采用双环结构传输数据分组和控制分组。沿顺时针传输的光纤环叫做<strong>外环</strong>，沿逆时针传输的光纤环叫做<strong>内环</strong>。内环和外环都支持独立的<strong>SRP公平算法</strong>。采用自愈环的设计思想，能够在<strong>50ms</strong>的时间内，隔离出现故障的节点和光纤段，提供SDH级的快速保护和回复。</p><p>EPON以太网无源光网络是基于以太网的PON技术。它采用点到多点结构、无源光纤传输，在以太网之上提供多种业务。</p><p>PON无源光网络（无源的光接入网），其光配线网（ODN）上的器件全部由无源器件（光纤、无源光分路器、波分复用器等）组成，不包含任何有源节点。在PON上实现基于ATM信元的传输，即APON技术。</p><p>SDH同步数字体系，根据ITU-T的建议定义，是不同速度的数位信号的<strong>传输</strong>提供相应等级的信息结构，包括复用方法和映射方法，以及相关的同步方法所组成的一个技术体制。</p><p>HFC光纤同轴电缆混合网，是一种经济适用的总和数字服务宽带接入技术。HFC通常由光纤干线、同轴电缆支线和用户配线网络三部分组成，从有限电视台出来的节目信号先变成光信号在干线上传输；到用户区域后把光信号转换成电信号，经分配器分配后通过同轴电缆送到用户。HFC是一个双向传输系统。</p><p>使用Cable Modem，利用频分复用（FDM）的方法将信道分为上行信道和下行信道。通过有线电视宽带接入Internet，数据传输速率可达10~36Mbps。</p><p>密集型光波复用（DWDM）能组合一组光波长用一根光纤进行传送。</p><p>频分复用（FDM）就是将用于传输信道的总带宽划分成若干个子频带（或子信道），每一个子信道传输一路信号。</p><p>利用传统电信网进行的网络管理称为“带内”管理，利用IP协议进行的网络管理称为“带外”管理，带外管理使用的是SNMP协议，汇聚层以下采用带内管理。</p><h2 id="实训3：网络接入技术与方法"><a href="#实训3：网络接入技术与方法" class="headerlink" title="实训3：网络接入技术与方法"></a>实训3：网络接入技术与方法</h2><p>IEEE 802.11标准系列对比</p><table><thead><tr><th>年份</th><th>技术</th><th>理论PHY性能</th></tr></thead><tbody><tr><td>1997</td><td>802.11</td><td>2Mbps</td></tr><tr><td><strong>1999</strong></td><td><strong>802.11b</strong></td><td><strong>11Mbps</strong></td></tr><tr><td><strong>1999</strong></td><td><strong>802.11a</strong></td><td><strong>54Mbps</strong></td></tr><tr><td>2003</td><td>802.11g</td><td>54Mpbps</td></tr><tr><td>2003</td><td>802.11a/g</td><td>54Mbps</td></tr><tr><td>2007</td><td>802.11n</td><td>450Mbps</td></tr><tr><td>2013</td><td>802.11acWave1</td><td>1.3Gbps</td></tr></tbody></table><p>xDSL技术的上行和下行速率<br>| xDSL | 上/下行速率（距离5.5km） | 上/下行速率（距离3.6km） | 线对数（对） |<br>| —- | ———————— | ———————— | ———— |<br>| ADSL | 64kbps/1.5Mbps           | 640kbps/6Mbps            | 1            |<br>| HDSL | 1.544Mbps（对称）        | 1.544Mbps（对称）        | 2            |<br>| VDSL | 2.3kbps/51Mbps           | 2.3kbps/51Mbps           | 2            |<br>| RADSL | 64kbps/1.5Mbps           | 64kbps/1.5Mbps           | 1            |</p><p>ADSL非对称数字用户线路，理论上可以在5km的范围内，在一对铜缆双绞线上提供最高1Mbps的上行速率和最高8Mbps的下行速率（带宽），能提供语音和数据业务。<br>ADSL能技术能充分利用现有PSTN（公共交换电话网），秩序在线路两端加装ADSL设备即可为用户提供高带宽服务，无需重新布线，极大地降低服务成本。同时ADSL用户独享带宽，线路专用，不受用户增加影响。</p><p>1998年，IEEE802.15工作组成立，专门从事WPAN标准化工作。它的任务时开发一套适用于短程无限通信的标准，通常称之为无线个人局域网（WPANs）。Wi-Fi是一种允许电子设备连接到一个无线局域网（WLAN）的技术。</p><p>IEEE802.16是为用户站点和核心网络（如：公共电话网和Internet）间提供通信路径而定义的无线服务。WiMAX（全球微波互联接入）是一项新兴的宽带无线接入技术，能提供面向互联网的高速连接，数据传输距离最远可达50km。</p><p>ITU国际电信联盟的SG15研究组在G.983建议“基于无源光纤网的高速光纤接入系统”进行标准化：<br>OC-3就是3倍于51.84Mbps（OC-1）基本SONET信号传输率的SONET线路，即155.520Mbps。<br>OC-12就是12倍，即622.080Mbps</p><p><strong>宽带接入技术</strong>包括xDSL、HFC、光纤接入、无线接入等。</p><p>光纤传输系统的中继距离可达100km以上。</p><p>Ad-Hoc（点对点）模式（如热点）和以前的直连双绞线都是P2P（个人对个人）的连接，无法与其他网络沟通。一般无线终端设备如PMP、PSP、DMA等用的就是Ad-Hoc模式。</p><h1 id="中小型网络系统总体规划与设计"><a href="#中小型网络系统总体规划与设计" class="headerlink" title="中小型网络系统总体规划与设计"></a>中小型网络系统总体规划与设计</h1><h2 id="基于网络的信息系统基本结构"><a href="#基于网络的信息系统基本结构" class="headerlink" title="基于网络的信息系统基本结构"></a>基于网络的信息系统基本结构</h2><p>B/S结构（浏览器/服务器模式）是WEB兴起后的一种网络结构模式，WEB浏览器是客户端最主要的应用软件。这种模式统一了客户端，将系统功能实现的核心部分集中到服务器上，简化了系统的开发、维护和使用。客户机上只要安装一个浏览器，如Netscape Navigator或Interner Explorer，服务器安装SQL Server、Oracle、MYSQL等数据库。浏览器通过Web Server同数据库进行数据交互。B/S结构也是一种C/S结构，它可看作是一种由传统的二层模式C/S结构发展而来的三层模式C/S结构在Web上应用的特例。</p><h2 id="实训2：网络总体设计基本方法"><a href="#实训2：网络总体设计基本方法" class="headerlink" title="实训2：网络总体设计基本方法"></a>实训2：网络总体设计基本方法</h2><p>核心层网络结构设计：服务器集群接入到核心路由器的两种设计方案</p><p><img src="assets/markdown-img-paste-2020020403072780.png" alt=""></p><p>直接接入核心路由器：链路冗余，直接利用核心路由器的带宽，占用端口较多，成本上升。</p><p>通过专用交换机，同时采取链路冗余，优点是可以分担核心路由器的带宽，容易形成带宽瓶颈，存在单点故障的潜在危险。</p><p>实际经验总结：层次之间的上联带宽与下一级带宽之比一般控制在1:20。</p><h2 id="实训3：网络关键设备选型"><a href="#实训3：网络关键设备选型" class="headerlink" title="实训3：网络关键设备选型"></a>实训3：网络关键设备选型</h2><p>路由器主要技术指标：</p><ul><li><strong>吞吐量</strong></li><li><strong>背板能力</strong></li><li><strong>丢包率</strong></li><li><strong>延时和延时抖动</strong></li><li><strong>突发处理能力</strong></li><li>服务质量</li><li>路由表容量</li><li><strong>可靠性和可用性</strong></li><li>网管能力</li></ul><p>吞吐量是路由器的包转发能力。</p><p>背板是路由器输出端与输入端的物理通道。传统路由器采用的是共享背板结构，高性能路由器一般采用的是交换式结构。背板能力决定了路由器的吞吐量。</p><p>路由器的包转发能力与端口数量、端口速率、包长度和包类型有关。</p><p>丢包率是衡量路由器超负荷工作能力的指标之一。</p><p>延时抖动是延时的变化量。语音、视频业务对延时抖动要求较高。</p><p>突发处理能力用以最小帧间隔发送数据包<strong>而不引起丢失</strong>的最大发送速率来衡量。</p><p>路由器的服务质量主要表现在<strong>队列管理机制</strong>与<strong>支持的QoS协议类型</strong>上。</p><p>典型的高端路由器的可靠性与可用性指标应达到：</p><ul><li>无故障连续工作时间（MTBF）大于10万小时。</li><li>系统故障恢复时间小于30分钟。</li><li>系统具有自动保护切换功能，主备用切换时间小于50ms。</li><li>SDH与ATM接口自动保护切换功能，切换时间小于50ms。</li><li>主处理器、主存储器、交换矩阵、电源、总线管理器与网络管理接口等主要部件需要有热拔插冗余备份，线卡要求有备份，并提供远程测试诊断能力。</li><li>路由器系统内部不存在单故障点。</li></ul><p>交换机主要技术指标：</p><p>全双工端口带宽的计算方法：端口数×端口速率×2。</p><h2 id="实训4：网络服务器选型"><a href="#实训4：网络服务器选型" class="headerlink" title="实训4：网络服务器选型"></a>实训4：网络服务器选型</h2><p>热拔插技术是允许在不切断电源的情况下，更换存在故障的硬盘、板卡等部件，从而提高系统对突发事件的应对能力。在服务器里可实现热拔插的部件主要有硬盘、CPU、内存、电源、风扇、PCI适配器、网卡等。（<strong>不包括主背板</strong>）</p><p>集群（Cluster）技术一般来讲有四个功能：冗余功能、负载均衡、协商处理。流量分发。其中冗余功能就是说在这个集群中的任何一台机器出现本机或网络故障时，整个网络仍不中断，对外的服务也不中断，网络有多个线路可以走，服务器也可以互相替代。</p><p>高性能存储与智能I/O技术，存储能力是衡量服务器性能与选型的重要指标之一。主要指标是由存取I/O速度和磁盘容量。</p><p>服务器操作系统通常采用UNIX。</p><p>系统高可用性和不可用时间<br>| 可用性   | 年服务不可用时间 |<br>| ——– | —————- |<br>| 99%      | 3.65天           |<br>| 99.9%    | 8.76小时         |<br>| 99.99%   | 52.56分          |<br>| 99.999%  | 5.26分           |<br>| 99.9999% | 31.54秒          |</p><h1 id="IP地址规划设计技术"><a href="#IP地址规划设计技术" class="headerlink" title="IP地址规划设计技术"></a>IP地址规划设计技术</h1><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><ul><li><p>子网掩码</p></li><li><p>IP地址聚合</p></li><li><p>NAT技术</p></li><li><p>IPv6</p><p>子网划分</p></li></ul><p>子网的地址结构：网络号+主机号或者网络号+子网号+主机号</p><p>子网掩码：区分网络号和主机号（网络位全为1，主机位全为0））</p><p> 无类域间路由技术</p><p>无类域间路由技术将网络前缀相同的连续的IP地址组成一个“CIDR”地址块，包含块起始地址和块地址数。 如201.113.22.0/21表示前21位为网络位。</p><p>专用IP地址与内部网络地址规划方法</p><p><img src="assets/markdown-img-paste-20200204041540794.png" alt=""></p><h2 id="实训1：规划IP地址"><a href="#实训1：规划IP地址" class="headerlink" title="实训1：规划IP地址"></a>实训1：规划IP地址</h2><h2 id="实训2：规划子网地址"><a href="#实训2：规划子网地址" class="headerlink" title="实训2：规划子网地址"></a>实训2：规划子网地址</h2><h2 id="实训3：规划可变长度子网掩码地址"><a href="#实训3：规划可变长度子网掩码地址" class="headerlink" title="实训3：规划可变长度子网掩码地址"></a>实训3：规划可变长度子网掩码地址</h2><h2 id="实训4：规划CIDR地址"><a href="#实训4：规划CIDR地址" class="headerlink" title="实训4：规划CIDR地址"></a>实训4：规划CIDR地址</h2><p>IP地址聚合</p><h2 id="实训5：内部网络专用IP地址规划与网络地址转换"><a href="#实训5：内部网络专用IP地址规划与网络地址转换" class="headerlink" title="实训5：内部网络专用IP地址规划与网络地址转换"></a>实训5：内部网络专用IP地址规划与网络地址转换</h2><h2 id="实训6：规划IPv6地址"><a href="#实训6：规划IPv6地址" class="headerlink" title="实训6：规划IPv6地址"></a>实训6：规划IPv6地址</h2><p>在使用零压缩法时，不能把一个位段内部的有效0也压缩掉。</p><p>双冒号在一个地址中只能出现一次。</p><p>在得到一个IPv6地址时，经常会遇到如何确定双冒号之间被压缩0的位数的问题。</p><p>IPv6不支持子网掩码，它只支持前缀长度表示法。</p><h1 id="路由设计技术基础"><a href="#路由设计技术基础" class="headerlink" title="路由设计技术基础"></a>路由设计技术基础</h1><h2 id="实训1：自治系统（AS）与Internet的路由选择协议"><a href="#实训1：自治系统（AS）与Internet的路由选择协议" class="headerlink" title="实训1：自治系统（AS）与Internet的路由选择协议"></a>实训1：自治系统（AS）与Internet的路由选择协议</h2><p>内部网关协议（IGP）</p><ul><li><strong>路由信息协议</strong>（RIP）</li><li><strong>开发最短路径优先协议</strong>（OSPE）</li><li>中间系统到中间系统（IS-IS）</li><li>内部网关路由协议（IGRP）</li></ul><p>外部网关协议（EGP）</p><ul><li><strong>边界网关协议</strong>（BGP）</li></ul><h2 id="实训2：RIP"><a href="#实训2：RIP" class="headerlink" title="实训2：RIP"></a>实训2：RIP</h2><p>RIP路由信息协议是一种内部网关协议，是一种动态路由选择协议，用于自治系统内的路由信息的传递。</p><p>路由刷新报文主要内容由若干（V、D）组成的表。V表示向量，标识该路由器可以到达目的网络或目的的主机，D表示距离，指出该路由器到达目的网络或目的主机的距离。距离D对应该路由上的跳数。</p><p>RIP是基于距离矢量算法的路由协议，利用跳数作为计量标准，按照以下规律更新路由表的信息：</p><ul><li>如果Router1的路由表没有这一项，Router1的路由表中增加该项，由于要经过Router2转发，因此距离D值加1。</li><li>如果Router1的路由表中的一项纪录比Router2发送的一项纪录距离D值减1还要大，Router1在路由表中修改该项，距离D值根据Router2提供的值加1。</li></ul><h2 id="实训3：OSPF"><a href="#实训3：OSPF" class="headerlink" title="实训3：OSPF"></a>实训3：OSPF</h2><p>OSPF（开放式最短路径优先）是一个内部网关协议，用在单一自治系统内决策路由。每一个路由器用数据库描述分组好相邻路由器交换本数据库已有的链路状态摘要信息。经过与相邻路由器交换数据库描述分组后，路由器就使用链路状态请求分组，向对方请求发送自己所缺少的某些链路状态项目的详细信息。<strong>经过一系列这种分组交换，全网同步的链路数据库就建立了</strong>。</p><p>在网络运行的过程中，只要一个路由器的链路状态发生变化，该路由器就要用链路状态更新分组，用洪泛法向全网更新链路状态。为了使用更大规模的网络，并使更新过程收敛更快，OSPF协议将一个自治系统再划分为若干个更小的范围，叫做区域。每一个区域OSPF拥有一个<strong>32位</strong>的区域标识符，在一个区域内的路由器数不超过<strong>200个</strong>。</p><p>OSPF协议要求路由器发送的信息是本路由器与那些路由器向量，以及链路状态的度量。链路状态的度量主要指<strong>费用、距离、延时、带宽</strong>等。</p><h2 id="实训4：BGP"><a href="#实训4：BGP" class="headerlink" title="实训4：BGP"></a>实训4：BGP</h2><p>在配置BGP（边界网关协议）时，每一个自治系统的管理员要至少一个路由器（一般是BGP边界路由器）作为自治系统的“BGP发言人”。一个BGP发言人与其他自制系统的BGP发言人要交换路由信息，就要先建立<strong>TCP</strong>连接，然后在此连接上交换BGP报文以建立BGP会话。</p><p>BGP路由选择协议的执行过程中分四种分组：</p><ul><li>打开（open）分组：用来与相邻的另一个BGP发言人建立关系。</li><li>保活（keepalive）保活分组用来确认打开报文，以及周期性地证实相邻边界路由器的存在。</li><li>更新（update）分组：用来发送<strong>某一路由</strong>的信息，以及列出要撤销的<strong>多条路由</strong>。</li><li>通知（notification）分组：用来发送检测到的差错。</li></ul><h1 id="局域网技术"><a href="#局域网技术" class="headerlink" title="局域网技术"></a>局域网技术</h1><h2 id="实训1：局域网互联设备"><a href="#实训1：局域网互联设备" class="headerlink" title="实训1：局域网互联设备"></a>实训1：局域网互联设备</h2><p>中继器可以用于连接物理层协议相同的局域网缆段。</p><p>集线器的工作过程：节点发信号到线路，集线器接受该信号，因信号在电缆传输中有衰减，集线器接受信号后将衰减的信号整形放大，最后集线器将放大的信号广播转发给其他所有端口。连接到一个集线器的所有结点共享一个冲突域。通过在网络链路中串接一个集线器可以监听该链路中的数据包。连接到集线器的节点发送数据时，将执行CSMA/CD介质访问控制方法。</p><p>不同VLAN通信需要单臂路由中继诊帧封装或者三层交换支持，两层交换单独情况下无法实现，三层交换机是具有路由功能的二层交换机。</p><h2 id="实训2：以太网组网"><a href="#实训2：以太网组网" class="headerlink" title="实训2：以太网组网"></a>实训2：以太网组网</h2><p>标准以太网的物理层采用 x Type-y-Name命名规则。x表示数据传输速率，单位为Mbps；y表示网段的最大长度，单位为100m；Type表示传输方式是基带还是频带；Name表示局域网的名称。</p><p>实训3：综合布线系统网络结构设计</p><p>双绞线扭绞可以减少线间电磁干扰。</p><p>STP比UTP抗电磁干扰能力好。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/24/hello-world/"/>
      <url>/2020/02/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>粘液块及观察者技术</title>
      <link href="/2020/02/24/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/"/>
      <url>/2020/02/24/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>由于粘液块的神奇功用，利用粘液块已经发展成了一门专门的技术，国内玩家亲切地称之为——绿萌技术。</p><p>让我们衷心感谢粘液块代码的最初编写者和将他推荐给mojang公司的玩家——KaboPC和Panda4994。</p><h1 id="第一节-综述"><a href="#第一节-综述" class="headerlink" title="第一节  综述"></a>第一节  综述</h1><!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 --><ul><li><a href="#第一节-综述">第一节  综述</a></li><li><a href="#第二节-粘液块飞行器">第二节 粘液块飞行器</a><ul><li><a href="#粘液块的运动特性">粘液块的运动特性</a></li><li><a href="#传统红石引擎">传统红石引擎</a></li><li><a href="#通用观察者引擎">通用观察者引擎</a></li><li><a href="#拓展模块和环状引擎">拓展模块和环状引擎</a></li><li><a href="#通用引擎的反向">通用引擎的反向</a></li><li><a href="#附加模块">附加模块</a></li></ul></li><li><a href="#第三节-活塞更新次序理论">第三节 活塞更新次序理论</a><ul><li><a href="#活塞的更新规律">活塞的更新规律</a></li><li><a href="#活塞更新的次序规律">活塞更新的次序规律</a></li><li><a href="#若干推论与例题">若干推论与例题</a></li></ul></li><li><a href="#第四节-信号传输铁轨电路树叶电路及脚手架电路">第四节 信号传输：铁轨电路、树叶电路及脚手架电路</a><ul><li><a href="#铁轨电路">铁轨电路</a></li><li><a href="#树叶电路">树叶电路</a></li><li><a href="#实际应用灭灯游戏">实际应用：灭灯游戏</a></li><li><a href="#脚手架电路">脚手架电路</a></li><li><a href="#垂直信号传输">垂直信号传输</a></li></ul></li></ul><!-- /TOC --><p>粘液块于1.8中被正式引入游戏。</p><p>粘液块向游戏中增加了更多电路实现的方式，增加了可玩性和趣味性。粘液块标志着可移动电路被正式引入游戏，这种电路可以在一定程度内自由改变自身的位置，从而不被局限于固定的位置，同时，由于红石线和中继器等元件无法被活塞移动，它们在粘液块技术中无法被自由使用，这掀起了一场“去红石化”浪潮。</p><p>粘液块技术被广泛应用于生存电路和机械电路中。粘液块技术在生存电路中的应用主要在于可移动电路，例如轰炸机，采矿机，排水机，弯铁轨机，造路机等。生存中大面积进行操作带来的庞大机械性正是可移动电路恰如其分的用武之地，而在物品及实体传输，信号传递等方面，粘液块带来的便利性也是不可替代的。粘液块技术在机械电路中的应用主要在于大型的活塞门和多样化的飞行器。过大的活塞门使用传统电路显得过于繁杂而不切实际，但使用飞行器构建活塞门就可以使得大型活塞门的制作成为可能。</p><p>观察者于1.11被正式引入游戏。</p><p>观察者是一种可以检测方块变化的方块，这使得其在检测方块变化上有了用武之地；而观察者作为一种可以被移动的输入元件，在电路中充当了轻便的信号源的地位；不得不提的是，观察者输出的信号是2gt的短脉冲信号，因而其又是结构简单、抗干扰能力强的短脉冲器。综合以上几点，观察者在被加入游戏后得到了广泛而又深刻的应用，其对传统电路与粘液块电路的优化和简化都起到了不可磨灭的功用。</p><p>在粘液块被引入游戏后，可移动电路诞生了，但观察者被引入游戏后，玩家Modiseus 制作出了无粘液块的可移动电路。除此之外，panda4994还曾在无粘液块及观察者的时代，通过不断的放置方块，制作出可以不断向前移动并含有特定结构的电路，并借此将特定结构推入未生成区块，从而人工生成刷怪笼。</p><h1 id="第二节-粘液块飞行器"><a href="#第二节-粘液块飞行器" class="headerlink" title="第二节 粘液块飞行器"></a>第二节 粘液块飞行器</h1><h2 id="粘液块的运动特性"><a href="#粘液块的运动特性" class="headerlink" title="粘液块的运动特性"></a>粘液块的运动特性</h2><p>当粘液块静止时，粘液块表现得和其他方块并无二致。但是当活塞推动粘液块时，粘液块便会表现出它的粘性，粘动毗邻的方块，包括其他粘液块一起运动。换句话说，只有粘液块能够表现出粘性，运动的粘液块可以粘动其他方块，但用运动的方块粘动粘液块是不可能的。</p><p>活塞能够推动十二个方块，当粘液块被引入运动时，活塞最多能使得十二个方块运动。如果活塞尝试推出超过十二个方块，活塞将不会推出并陷入BUD态；如果粘性活塞尝试收回超过十二个方块，粘性活塞将自己收回而留下方块不动。</p><p>活塞会使得自己即将移动的方块有一个运动趋势，而粘液块可以将这种运动趋势传递给毗邻，这样所有要运动的方块都有了运动趋势，也就有了一个即将到达的位置，这个位置被称为运动趋势位，趋势位也是一种基本位置关系。如果在趋势位上存在有诸如基岩、推出的活塞等无法被移动的方块，所有的方块包括活塞将不会有动作，甚至伸出的活塞也无法收回这些方块。树叶、南瓜、西瓜、火把等方块，如果存在于运动趋势位，会在该方块开始运动时破坏，同时其也不能被粘液块所粘动。较为特殊的方块是带釉陶瓦，这是一种可以推动但无法被粘液块粘动的方块。另一种值得注意的方块是1.15加入的蜂蜜块，其具有与粘液块相似的特性，但并不与粘液块相互粘连，这允许玩家在相邻两格内使用两套粘液块电路，相信蜂蜜块也会给红石电路带来不小的创新空间。</p><p>总结而言，考察粘液块的运动特性需要先考察方块的运动反应类型，一般包括：常规型（一般可推动的方块），阻挡型（基岩、屏障、黑曜石等方块，箱子、熔炉、铁砧等方块实体），破坏型（西瓜、火把等方块及潜影盒），仅推动型（带釉陶瓦，蜂蜜块之于粘液块，粘液块之于蜂蜜块）。</p><p>粘液块的运动特性就可以被总结为：</p><blockquote><p><strong>粘液块仅能粘动常规型方块</strong>。</p></blockquote><p><del>事实上，Mojang这里写的代码极度混乱，铁砧不能被推动是因为被放在了重金属材料一类中，这一类中有一个属性是不可推动。基岩的这一属性却是可推动，但推动前会检测硬度，若为-1则也不能推动。屏障虽然硬度也是-1，但属性却是不可推动。代码里明确规定了黑曜石不可推动，而蜂蜜块和粘液块会在相互运动时决定不可粘连，简直写得乱七八糟。</del></p><p>粘液块推动方块产生效果等价于活塞直接推动该方块的效果，活塞能否伸出或带方块收回取决于所有粘液块、所有被推动的方块及所有被粘液块粘动的方块能否移动。</p><p><em>例 1 分析如下的电路，说明拉杆拉下和拉回后电路的运行情况。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-2-1.png" alt=""></p><p><em>解：拉杆拉下，现在检查粘性活塞的推出条件，粘液块总计11个，常规型方块红石块1个，将被粘动，伸出的普通活塞属于阻挡型方块，粘液块不能粘动。方块总数为12，所有方块均能移动，故粘性活塞伸出。由于红石块被粘动，上方普通活塞收回。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-2-2.png" alt=""></p><p><em>拉杆拉回，检查粘性活塞带方块收回的条件，粘液块11个，红石块1个，普通活塞1个，总计13个，故粘性活塞无法带方块收回，其自行收回，其余方块不动。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-2-3.png" alt=""></p><h2 id="传统红石引擎"><a href="#传统红石引擎" class="headerlink" title="传统红石引擎"></a>传统红石引擎</h2><p>在可移动电路的实际应用中，红石引擎的诞生是必然的。红石引擎是一种粘液块电路结构，其可以在保持自身电路结构的前提下，不断地移动自己的位置，从这一点看，红石引擎有无限移动的能力，就好像是“永动机”一样。</p><p>红石引擎的构思是简单的，电路需要向前移动，就必然需要活塞将电路向前推动，但就像俗语所说“人不能拎着头发把自己举起来”一样，这个活塞没有办法推动其自身，这就需要另一个活塞来推动它，或者粘性活塞将它向前拉。</p><p>红石引擎可以不断地向前移动，这依赖于活塞的不停运动，但如果红石引擎撞到了墙上呢？如果红石引擎在行进过程中遇到了不可推动的方块，那么活塞自然会陷入BUD态（如果信号是观察者提供的，活塞就会错过信号），我们理所应当地希望在该方块被移除后，更新处于BUD态的活塞（或重新通过观察者激活这一活塞），引擎可以继续向前移动，而电路结构不至于被破坏。因此，在红石引擎的某一静止状态时，一定有活塞处于BUD态（或观察者指向某个活塞）。正是这种“能够被激活”的能力，赋予了红石引擎“能量”。从某种意义上讲，红石引擎的静止态是不稳定的，而运行态才是稳定的。</p><p>在创造模式中，为了更新处于BUD态的活塞，我们可以使用火焰弹。通常情况下对着处于BUD的活塞或观察者使用火焰弹，火焰弹会产生火方块，但又会因为下方没有可以支撑火方块的方块，其又立马消失，这个过程就会给予我们所希望更新的方块一次方块更新。</p><p>下图的装置被称为半自动机，左边的粘性活塞处于BUD态。下面我们用火焰弹更新这个方块，并分析电路的运行情况。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-1e74e5fa.png" alt="1e74e5fa"></p><p>更新粘性活塞，粘性活塞意识到自己被激活，从而伸出，3pt后活塞推出完成。此时普通活塞处于BUD态，但其不可能伸出，因为其不能推出已经伸出的粘性活塞。粘性活塞随后自检，发现其已经不处于激活态，从而在3pt后完成收回。就结果来看，粘性活塞花费了6pt将普通活塞粘了回来。</p><p>在《基础红石原理》中我们曾经介绍过，基于活塞运行的更新顺序，判断其能否成为BUD有一条经验规律，即</p><blockquote><p>如果活塞推动方块的趋势位已有一个方块，装置作为BUD；如果方块为空气，装置被更新后会伸出收回如此往复持续。</p></blockquote><p>就现在的情况进行分析，粘性活塞将普通活塞粘了回来，这个方块占据了趋势位，从而粘性活塞将陷入BUD态。那么此时，普通活塞则可以推出，3pt后普通活塞推出，基于同样的道理，粘性活塞也因无法推出伸出的普通活塞而无法伸出，其陷入BUD态。再3pt后普通活塞收回。</p><p>综上所述，这个装置在粘性活塞收到方块更新后，会花费12pt，向左移动一格。由于这个装置可以改变自己的位置，但又无法自行持续运行下去，因此被称为“半自动机”。又因为半自动机必须接收更新才能移动，其也被称为“更新引擎”。</p><p>半自动机并非是我们需要的红石引擎的唯一类型，有时我们需要可以自我更新的“全自动机”。全自动机有自我更新的能力，因此其可以不借助外界更新而无限运动，举例来说，我们可以在上例的半自动机上增加一个更新模块，使得其可以更新自己。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-8ccd4145.png" alt=""></p><p>这便是一个全自动机，下面我们更新粘性活塞，分析电路运行的时序。</p><p>粘性活塞当前处于BUD态，更新其后，粘性活塞3pt推出，再3pt将右侧活塞粘回，随后右侧活塞激活，3pt推出。此时与之前的半自动机不同是，被右侧活塞推动得到不仅仅是粘性活塞，还有左侧活塞。虽然粘性活塞依然不能推出，但此时左侧活塞被BUD激活，在下一个3pt中，右侧活塞收回而左侧活塞推出。在左侧活塞推出完成后，其更新到粘性活塞，这就进入了一个循环，那么接下来发生的就是在粘性活塞推出的同时，左侧活塞收回。这个全自动机的周期也是12pt，也就意味着该红石引擎的速度是1格/12gt。</p><p>刚才提到的红石引擎都只具有单向飞行的能力，也就是所谓的单向飞行器。拥有向两个方向运动能力的飞行器被称为双向飞行器，其中的引擎也就是双向引擎。</p><p>下图所示的就是一种双向飞行器，其在之前提到的全自动机的基础上增加了一些结构，这些结构恰好是一个没有红石块的全自动机，并且方向也是相反的。就现在看来，其只能被全自动机所带动，新加的活塞不可能激活。根据之前的分析，更新后侧的粘性活塞，这个引擎会以1格/12gt的速度向右移动。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-e67b64df.png" alt=""></p><p>我们现在在电路的运行轨道上增加如下电路，其中黑曜石会阻止飞行器继续运动，粘性活塞和红石块则会检测是否有飞行器撞到了黑曜石上。巧妙的是，当飞行器停在黑曜石前时，两个普通活塞会伸出，并把引擎中两个红石块推到原先没有红石块的全自动机一侧，如图所示：</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-8cf87aae.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-1d5aa06b.png" alt=""></p><p>随后，黑曜石上的中继器熄灭，给予前侧全自动机的普通活塞更新，这个飞行器就沿原路返回了，但此时两个红石块已经被移交到了向左运动的全自动机上了。</p><p>除了并排放置两个全自动机，也可以将两个相反方向的全自动机放在一条线上，但此时最两侧的活塞就要推动10个方块，换句话说只能再携带额外的2个方块，再多就会超过推动上限，这对于飞行器的拓展是不利的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-d23498b2.png" alt=""></p><p>此时这个飞行器是向右移动的，若希望其反向，则移动红石块的位置则不是仅仅将两个红石块推到侧面这么简单的了，下面尝试给出一种思路。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-80054b94.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-c0326942.png" alt=""></p><p>在这个例子中，我们尝试将靠后的红石块移到最前的粘液块上，为此可以将靠后的红石块用粘性活塞粘起，随后用活塞将它推到最前面，再用普通活塞推下去，为此电路中预存了5个红石块。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-64987fd2.png" alt=""></p><p>右侧的黑曜石负责停住飞行器，而观察者检测飞行器的飞入。负责拿起和放下红石块的粘性活塞和普通活塞单纯由5个红石块中的2个激活，电路只需要控制5个粘性活塞和将6红石块向前退的普通活塞即可。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-cbaa3b70.png" alt=""></p><p>当右侧普通活塞将红石块推下后，顺势激活音符盒，这是为了更新其下的普通活塞。同时上方的电路保证上方活塞伸出，避免在启动过程中原先用于检测飞行器停靠的观察者输出的信号再起启动这个装置。</p><p>基于完全相同的原理，我们可以制作向上和向下运动的全自动机，这里不再详述，各给出一例，仅做原理解释作用的参考。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-6e9971fa.png" alt=""></p><h2 id="通用观察者引擎"><a href="#通用观察者引擎" class="headerlink" title="通用观察者引擎"></a>通用观察者引擎</h2><p>在如上的红石引擎中，我们都使用了红石块激活活塞。当然，在有观察者的版本中，我们可以使用观察者激活活塞，其具有以下的若干特点：</p><ul><li>观察者可以强充能方块，也可以用指向直接激活粘性活塞，而红石块只能以常规方式或BUD方式激活粘性活塞，因此观察者可以依据不同的方向用不同的朝向和方式激活粘性活塞。</li><li>观察者只会在运动后给出信号，这意味着如果飞行器被阻塞，内部没有活塞处于BUD态。如果希望飞行器启动，可以更新引擎内特定的观察者。</li><li>观察者发出的是短脉冲，这可以很好地让粘性活塞完成只推不拉的操作，这意味着我们在一些场合中，完全有能力将普通活塞替换为粘性活塞，让其可以承担推动方块和拉动方块的任务。</li></ul><p>如下便是一个使用了观察者的红石引擎，注意到其本身的结构是对称的，其可以朝两个方向运动，这完全取决于我们更新哪个观察者。当红石引擎遇到障碍而停下时，我们完全可以更新对面的观察者，使其沿原路反向运动回去。这种飞行器就是现在使用的一种通用且标准的双向飞行器。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-5a2bb0fd.png" alt="6方块通用飞行器"></p><p>现在我们更新下侧的观察者，分析电路的运行情况。</p><p>更新观察者，其进入启动延迟，2gt后开始激活，给出2gt的短脉冲。注意观察者充能的是右下的粘液块，这个信号并不能激活左下的粘性活塞，因而只有右上的粘性活塞收到短脉冲，并在2gt后将方块顺推，随后的2gt则是收回。根据粘液块的运动特性，右上的粘性活塞可以推动左侧的三个方块。</p><p>在右上的粘性活塞顺推左侧的三个方块后，观察者会以此作为更新源进入启动延迟，并在2gt后激活，不过左下粘性活塞并没有可以推动的方块，在这里它的作用是于2gt顺推后将右侧的三个方块粘回来，这又需要2gt，此时装置回到了一开始的状态。</p><p>总结来看，下侧观察者的启动延迟2gt，右上的活塞顺推方块2gt，收回的同时使上侧的观察者进入2gt的启动延迟，其后左下的粘性活塞推出2gt，收回2gt。这个红石引擎的周期是10gt，向左运动。</p><p>当我们更新观察者后，两个粘性活塞就被赋予了两个不同的任务，这个红石引擎就被分成了两个模块。在这个例子中，右上的活塞执行的是“推模块”的功能，其将左侧的“拉模块”推走，而左下的活塞执行“拉模块”的功能，其将右侧的“推模块”拉走。在这里，右上的粘性活塞只发挥推方块的功能，只相当于一个普通活塞，在本电路中可以完全把它换成普通活塞，红石引擎的周期和运行情况没有变化，但这样一来，这个红石引擎便只能向左运行了。</p><p>两个观察者可以改变它们的位置，例如可以将观察者放置在粘液块之上，并指向它们所要激活的活塞的上方，又或者变更粘液块的结构，如下2图的8方块通用飞行器。类似的改动是简单的，只要保证两个观察者能够激活自己所要激活的活塞，并不干扰另一个活塞即可，这就是为什么这里不能被简单地用红石块进行替代。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-be126ec5.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-50cb2bec.png" alt="8方块通用飞行器"></p><p>制作垂直移动的通用引擎也是简单的，如下图便是一例，制作过程中需要注意活塞的BUD激活。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-87cb3e50.png" alt=""></p><h2 id="拓展模块和环状引擎"><a href="#拓展模块和环状引擎" class="headerlink" title="拓展模块和环状引擎"></a>拓展模块和环状引擎</h2><p>一个活塞只能推出12个方块，但飞行器决不能就此止步，与之相反，必须存在一定的拓展模块，使飞行器能够移动更多的方块。</p><p>下图展示的是三个“推扩展模块”。红石引擎或其它拓展模块将普通活塞向前推动一格，使之进入到一个有信号的位置，在这里指的是可以被红石块激活的位置，无论这个激活是常规激活或者非常规激活。随后普通活塞伸出，将信号源推离自身，这一过程需要3gt。事实上，只要能够令普通活塞将激活自己信号源推走，推模块便可以实现，而红石块具体的位置是灵活的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-d071b322.png" alt=""></p><p>下图展示的是一个“拉拓展模块”，红石引擎或其他拓展模块将图中的普通活塞和粘性活塞向前移动一格，使之进入到一个有信号的位置，粘性活塞和普通活塞开始伸出。但普通活塞会将红石块推走，由此粘性活塞接收到的是0t信号，瞬间推出并开始收回。普通活塞的伸出和粘性活塞的收回需要3gt。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-184312e6.png" alt=""></p><p>基于观察者的拓展模块也是简单的，由于观察者可以强充能方块，推模块中可以直接激活、BUD激活或充能粘液块激活活塞。观察者的启动延迟是2gt，活塞无启动延迟推出需要2gt，基于观察者的推模块推出完成需要4gt。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-9f4e6184.png" alt=""></p><p>同样的原理也适用于拉模块，观察者启动延迟2gt，粘性活塞推出2gt，收回需要2gt，拉模块收回完成总计需要6gt。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-d925875a.png" alt=""></p><p>一点很神奇的是，观察者的拉模块和推模块结构很相似，事实上这是因为观察者输出的是一个短脉冲，而短脉冲作用于粘性活塞可以使其只推不拉，也就是充当了普通活塞的作用。</p><p>下图则是一个双向拓展模块。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-38d57842.png" alt=""></p><p>当红石块向后运动的时候，下方粘性活塞撤销激活，将装置向后移动一格，移动结束的上方粘性活塞再将下方粘性活塞向后推一格，使之回到当前的样子。</p><p>当红石块向前运动时，下方的粘性活塞A也要收回，但其不能收回方块，因为红石块正在向前移动，其不能将前方的观察者D移动到和红石块同一位置上，因此粘性活塞A只能自行收回。粘性活塞A是因为红石块被推走而撤销激活的，这是一个非同步信号，粘性活塞A无启动延迟，收回需要2gt。同时，观察者D可以检测到有方块要移入，从而进入启动延迟。</p><p>活塞A收回后，靠后的观察者C也进入启动延迟，同一gt中的观察者D则是在NTE事件开始激活的，因而随后D的撤销激活优先于C的开始激活，因而观察者C再次使观察者进入启动延迟。同时，D的撤销激活使粘性活塞B顺推而转向开始收回。2gt后，观察者C撤销激活，观察者D开始激活，粘性活塞B收回完成，使得粘性活塞A被拉到一个有能量的位置。收回完成时同步信号，活塞有启动延迟，下一gt粘性活塞A开始推出，导致正在激活的观察者D被推动，其将在2gt后到位，但不再激活。这就回到了现在的状态。</p><p>下面给出时间轴表。</p><table><thead><tr><th>粘性活塞A</th><th>粘性活塞B</th><th>观察者C</th><th>观察者D</th></tr></thead><tbody><tr><td>BE 开始收回</td><td></td><td></td><td>BE 启动延迟</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>TE 收回完成</td><td>BE 开始激活</td><td>TE 启动延迟</td><td>NTE 开始激活</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td>BE 开始收回</td><td>NTE 开始激活</td><td>NTE 撤销激活<br>NTE 启动延迟</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td>TE 收回完成</td><td>NTE 撤销激活</td><td>NTE 开始激活</td></tr><tr><td>BE 开始推出</td><td></td><td></td><td>BE 被推动</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>TE 推出完成</td><td></td><td></td><td></td></tr></tbody></table><p>观察者C能否换为普通方块？很明显不能，这里利用了它更新观察者D，使得后者能够在激活时被移动，避免了粘性活塞B的再伸出。</p><p>这里有一点需要注意：红石引擎的周期是不同的，而拓展模块的工作时间也是不同的，必须保证拓展模块能够跟得上红石引擎的速度，否则拓展模块就无法完成其应当完成的作用了。</p><p>在介绍了推拉拓展模块之后，相信读者对引擎和推拉拓展模块之间的关系有了更深的认识，事实上，<strong>红石引擎就是由推拉拓展模块构成的</strong>。例如在半自动机中，粘性活塞就是拉的模块而普通活塞就是推的模块；在通用红石引擎中，两个互相推拉的模块正是推拉拓展模块。红石引擎和推拉拓展模块的区别就在于在红石引擎中，所有拓展模块不能同时处于静息状态，其总能自己更新并使自身向前移动。</p><p>既然如此，存在只包含推模块的红石引擎吗？答案当然是肯定的，但如果只包含两个推模块的话，第一个模块推出完毕后需要3gt收回，第二个推模块无法将其推出。因此在不用其他方式等待这3gt过去，是不可能只用2个推模块制作红石引擎的。下面是一个包含3个推模块的红石引擎，三个推模块交替激活，构成一个环，因此这种红石引擎又称为环状引擎。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-6cd56113.png" alt=""></p><p>由于推拉拓展模块的结构是灵活的，环状引擎的制作也是灵活的。在本例中，左侧推模块活塞处于BUD态，其需要3gt推出。推出完成后会将右侧活塞推到一个有能量的位置，其推出也需要3gt。再推出完成后，中间活塞被推到一个有能量的位置，此时左侧的活塞已经收回，可以被推出，这又需要3gt。因此这个红石引擎的周期为9gt。</p><p>使用更多的推拉拓展模块构成一个环状引擎，引擎的周期会变得更长，这是制作长周期引擎的一种简单方式。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-ca3045c9.png" alt=""></p><p>半自动机不能自我更新，我们可以利用相反的道理，使用半自动机来制作拓展模块。如上图便是用一个全自动机带动两个半自动机运行的例子，全自动机使用白色玻璃更新半自动机使其运动，在半自动机上便可以拓展更多的方块了。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-e824b9b2.png" alt=""></p><p>利用更新可以将半自动机当做拓展模块使用，而拓展模块之间的环状关系可以构成环状引擎，那么如下图的半自动机环状引擎就是利用两个半自动机互相更新制成的。这个引擎的周期是15gt，启动时需要更新前侧半自动机的粘性活塞或普通活塞，因为在当前的BUD态下其落后于后侧的半自动机一格。下面我们来分析这一过程。</p><p>更新下侧半自动机普通活塞，其后推出，推动下侧粘性活塞和后面的更新装置，在推出时上侧粘性活塞受到更新，因此下侧普通活塞和上侧粘性活塞同时伸出并收回，这需要6gt。半自动机不能更新自己，下侧半自动机就此陷入BUD态。随后上侧普通活塞用3gt推出，伸出结束后白色玻璃便会更新到下侧粘性活塞。在上侧普通活塞收回，上侧粘性活塞陷入BUD态的同时，下侧粘性活塞伸出并收回，在这6gt过后，引擎回到了最初的样子，总计15gt。</p><p>同样的道理可以拓展至4个半自动机互相更新，四个半自动机构成互相更新的环，上图便是一例，其中右图和左图分别是前后剖面图。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-a5785e57.png" alt=""></p><p>从左侧可以更清晰地看出四个半自动机互相更新的依赖关系。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-84e16c49.png" alt=""></p><h2 id="通用引擎的反向"><a href="#通用引擎的反向" class="headerlink" title="通用引擎的反向"></a>通用引擎的反向</h2><p>通用引擎是一种很通用的标准红石引擎，不仅制作简便，其本身的结构就允许其双向飞行，为了让其反向我们只需要在合适的时机阻挡它并给出更新即可。下面介绍一些常用的结构。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-0339881c.png" alt=""></p><p>这个反向器主体是一个BUD，其附带的一个方块，用于更新红石引擎的观察者。下面我们来分析这个电路的运行情况。</p><p>红石引擎向右运动，左侧三个方块作为推模块，而右侧作为拉模块。BUD响应时，恰好是左侧活塞推出完成。由于这一推出是收到了观察者的短脉冲，BUD活塞推出没有启动延迟，和推模块活塞收回都将花费2gt，同时发生的还有拉模块观察者的启动延迟。随后拉模块观察者激活，在这2gt中，拉模块活塞推出，BUD活塞收回。虽然拉模块观察者可以检测到BUD活塞将白色混凝土变为36号方块，但此时拉模块观察者正处于激活状态，无视这一方块变化，2gt后观察者熄灭于NTE事件，BUD活塞收回完成于TE事件，这一次可以更新到拉模块的观察者了。</p><p>在拉模块观察者等待启动延迟的过程中，拉模块活塞收回。由于收回和观察者的启动延迟均为2gt，而观察者于NTE事件激活，拉模块活塞在TE事件才能收回完成，其在BE事件时便会发现其已经又被激活了，于是在BE事件转收回为激活。推模块观察者在BE事件开始进入启动延迟，但在下一gt的BE事件就又被推动，因此其不会理睬这次启动延迟，并会在推出完毕后正常进入下一次的启动延迟。</p><p>至此，拉模块已经推出完成，两模块的地位已经互换，随后在原先的推模块将拉模块拉走时，BUD会再响应一次，但这次响应不会影响红石引擎的运行。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-4541c86c.png" alt=""></p><p>第二种反向器使用观察者检测飞行器的到来，为清晰见，下面我们用时间轴列表分析装置的运行情况。</p><table><thead><tr><th>推模块</th><th>拉模块</th><th>右侧观察者</th><th>最右侧观察者</th></tr></thead><tbody><tr><td>NTE观察者激活<br>BE活塞推出</td><td></td><td>BE观察者启动延迟</td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>NTE观察者撤销激活<br>BE活塞收回</td><td>BE观察者启动延迟</td><td>NTE观察者激活<br>BE活塞推出</td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>TE活塞收回完成</td><td>NTE观察者激活<br>BE活塞推出</td><td>NTE观察者撤销激活<br>BE活塞收回<br>BE观察者启动延迟</td><td>BE观察者启动延迟</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td>NTE观察者撤销激活<br>BE活塞收回</td><td>NTE观察者激活<br>BE活塞推出</td><td>NTE观察者激活<br>NTE中继器启动延迟</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td>BE活塞推出</td><td>NTE观察者撤销激活<br>BE活塞收回<br>BE观察者启动延迟</td><td>NTE观察者撤销激活<br>NTE中继器激活</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td>BE活塞收回</td><td>NTE观察者激活<br>BE活塞推出</td><td>NTE中继器撤销激活</td></tr><tr><td>TE观察者启动延迟</td><td></td><td></td><td></td></tr><tr><td></td><td>TE活塞收回完成</td><td>NTE观察者撤销激活<br>BE活塞收回<br>TE观察者启动延迟</td><td>BE观察者启动延迟</td></tr><tr><td>NTE观察者激活<br>BE活塞推出</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>NTE观察者激活<br>BE活塞推出</td><td>NTE观察者激活</td></tr><tr><td>NTE观察者撤销激活<br>BE活塞收回</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td>NTE观察者撤销激活<br>BE活塞收回</td><td>NTE观察者撤销激活<br>NTE中继器激活</td></tr><tr><td>TE活塞收回完成</td><td>TE观察者启动延迟</td><td></td><td></td></tr><tr><td></td><td></td><td>TE活塞收回完成</td><td>TE观察者启动延迟</td></tr><tr><td></td><td>NTE观察者激活<br>BE活塞推出</td><td></td><td></td></tr></tbody></table><p>通过这两个反向装置，我们不难理解，反向器的实现关键在于<strong>及时激活拉模块的活塞，使其顺推推模块，从而让两个模块地位调换</strong>。因此，如下的反向装置也是不难理解的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-796f7461.png" alt=""></p><p>这个飞行器在向右运行到普通活塞处时，附加的观察者会激活普通活塞，进而更新到拉模块的观察者，使其立即激活，从而改变飞行方向。</p><p>在之前提到的8方块通用飞行器的基础上，我们可以增加一个利用活板门更新自己的装置。在飞行的过程中，观察者总会在活板门被激活的一瞬间被移动，而如果飞行器遇到了障碍物，则观察者无法被移动，活板门产生的更新就可以重新启动拉模块并使其推出了。这样我们并不需要制作反向器，这种撞到墙就会自动反向的飞行器也就是自返回飞行器。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-207fa908.png" alt=""></p><p>如果希望反向运行到另一面墙也能返回，只需要对称地再增加一个活板门更新装置就好了。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-fcdd96ff.png" alt=""></p><p>如上的电路装置小巧精干，充分体现出了观察者对于粘液块飞行器的简化。可以说观察者对于多向飞行器的简化是其重要的应用领地之一。</p><h2 id="附加模块"><a href="#附加模块" class="headerlink" title="附加模块"></a>附加模块</h2><p>下图所示的是三种不同朝向的粘液块BUD。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-1d2b9911.png" alt=""></p><p>当粘液块BUD被飞行器推动时，其会响应一次，这就意味着我们制作出了一个每运行一格就推动一次的装置。例如下例的飞行器可以在向前飞行的同时将右侧的一列方块向右推动一格。在这里，BUD和更新半自动机的普通活塞共用了粘液块和红石块。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-7e15f299.png" alt=""></p><p>即使不使用BUD，也可以单纯地使用活塞间的逻辑完成这一功能。飞行器向前移动一格，粘性活塞无法被粘动，但其会收回。收回后普通活塞会被激活，其将粘性活塞向前推出，推出完成后粘性活塞又回到了同现在相同的相对位置关系，因而再次伸出。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-81498386.png" alt=""></p><p>当然，使用观察者直接激活普通活塞是最简单的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-0bc77ab6.png" alt=""></p><p>用观察者激活粘性活塞，其会将方块推出而不收回，再次激活才可以将方块收回。如果粘性活塞推出的方块是观察者的话，就可以实现每两次输入给出一次输出的装置，与飞行器搭配，就可以做出每两格推一次方块的飞行器了。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-c9d1771a.png" alt=""></p><h1 id="第三节-活塞更新次序理论"><a href="#第三节-活塞更新次序理论" class="headerlink" title="第三节 活塞更新次序理论"></a>第三节 活塞更新次序理论</h1><p>红石更新延迟理论提出，NTE元件优先级高者先激活，而优先级相等者先被更新先激活，红石更新延迟理论很好地揭示了同一gt内NTE元件的运行先后规律。同样地，活塞更新次序理论将揭示活塞推动若干方块的次序先后规律。也只有在这里我们可以最终解释早在《基础红石原理》就已经提到的，判别粘液块装置作为BUD或伸出收回如此往复持续的经验规律。</p><h2 id="活塞的更新规律"><a href="#活塞的更新规律" class="headerlink" title="活塞的更新规律"></a>活塞的更新规律</h2><p>在红石更新延迟理论中，我们已经认识到，活塞在激活时会进入启动延迟，在BE事件启动，此时活塞需要检测自身的状态，在允许推出时开始推出。活塞的推出过程实际是一个将方块依次变为36号方块的过程，这一过程依赖一个列表，而列表是有序的，所以我们可以对其的顺序进行研究。按照顺序，要被移动的方块首先被移除，这一过程给予毗邻方块更新。随后每一个36号方块将会被放置在所有要被移动的方块的运动趋势位上，这一过程产生方块变化。活塞在最后产生活塞臂。36号方块表现为移动中的方块，但这是游戏渲染产生的效果，在理论分析中我们忽略这一过程。在2gt后的TE事件，36号方块将自身变为对应的方块，这一过程产生方块更新和方块变化。<em>（方块变化有待考究）</em></p><p>活塞收回的过程和推出的过程是类似的，但活塞臂必须先收回，否则其他方块无法在活塞臂的位置创建36号方块。</p><p>当活塞在激活过程中遇到信号下降沿，此时活塞必须收回，但前方方块全为36号方块，活塞一个也不会将其拉回。比较特殊的是活塞面前的方块，活塞会将它在BE事件到位，但也不会收回。<em>（活塞在收回过程中遇到上升沿呢）</em></p><p>在以上运动过程中，并没有提到活塞自检，事实上活塞不会单独地对自己进行检查，自检发生在活塞接收到方块更新信号时，而活塞本身的推出，周围方块的变化都会产生方块更新。例如活塞伸出收回往复持续的过程，就是活塞面前的方块从36号方块变为普通方块时给予方块更新，使得活塞再次推出的。</p><p>活塞推动方块和红石线的更新不同，活塞推动方块有一个客观存在的列表，因此这一过程有着严格的规律性，我们因此可以得出活塞推动次序的规律，换言之：</p><blockquote><p>活塞推动方块的次序不仅具有时间平移对称性，也具有空间平移对称性。</p></blockquote><p>换句话说，活塞的行为随时间稳定，也随空间稳定，只要活塞的装置不被旋转。此外，即使对于不同的活塞朝向，活塞的规律也是类似的，可以分类讨论。</p><p>除了中继器等NTE元件和活塞外，36号方块也遵循“先被更新先激活”的规律，在这里是指：</p><blockquote><p>先被推动的36号方块先到位。</p></blockquote><h2 id="活塞更新的次序规律"><a href="#活塞更新的次序规律" class="headerlink" title="活塞更新的次序规律"></a>活塞更新的次序规律</h2><p>有关活塞在运动前后更新规律已经叙述详尽了，下面针对研究活塞推动的列表进行分析，这主要包括活塞推方块的更新规律和粘液块粘动方块的更新规律。关于前者，其必须遵循一条基本原则，那就是<strong>不能在已有方块的位置创建36号方块</strong>。因此，当活塞推动一列方块时，总是最远端的方块先更新。并且，如要使一列方块发生移动，<strong>每个方块移动前，总是先移动其趋势位的方块</strong>。这一点对于粘液块粘动后方的方块也是一样的，就好像方块不是被粘液块从后方粘动的，而是被活塞从反方向推出的。换句话说，<strong>活塞推动一列方块和粘液块从后方粘动一列方块个次序规律是相同的</strong>。</p><p><em>例 分析如下的电路，判断活塞伸出后两组活塞的伸出情况。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-3798c526.png" alt=""></p><p><em>由于活塞推出时总是最远端的方块先更新，因而远端的红石块先到位，所以总有远端的活塞伸出而近端的活塞无法伸出。</em></p><p><em>例 分析如下的电路，判断拉杆拉下后活塞组的伸出情况。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-34a5ea44.png" alt=""></p><p><em>中继器是严格的NTE元件，根据红石更新延迟理论，其总遵循先被更新先激活的原理，因此第一列中继器中远端先更新。但是远端中继器延迟较长，所以第二列中继器激活时是近端先激活，因而第三列中继器也是近端先激活，近端活塞伸出而远端无法伸出。</em></p><p>如上两例中的研究方法可以扩展到粘液块的研究领域中，如下图便可得出粘液块粘动方块的更新规律。和红石线不同的是，当面朝北方时，下图的活塞组总是右侧伸出而左侧无法伸出，没有随机性。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-757cbe15.png" alt=""></p><p>对于研究更复杂的粘液块结构来说，使用红石块多有不便，这里给出一种思路：使用BUD态的伸出粘性活塞。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-e5d45bc5.png" alt=""></p><p>当粘液块结构被移动时，两个粘性活塞被更新，更新顺序取决于粘液块被移动的顺序，因此它们收回红石块的先后顺序也是严格的，中继器又时严格的NTE元件，结果就是粘液块结构的更新顺序被忠实地反映在了活塞组上。</p><p><em>例 拉杆拉回，判断活塞组的推出情况</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-9953fc8f.png" alt=""></p><p><em>由于每个方块移动前，总是先移动其趋势位的方块，因此一定是活塞臂先收回，粘液块再从远到近地依次被移动，此时近端先更新，因此近端活塞伸出而远端无法伸出。</em></p><p>虽然中继器是严格的NTE元件，但不同档数，不同指向情况的中继器有着不同的优先级，因此使用中继器将信号导出，用延长活塞组的方法有时更为便利。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-356f22e9.png" alt=""></p><p>当然，使用命令方块是最简单的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-ce081958.png" alt=""></p><p>将完全相同的装置旋转，在不同朝向下进行实验，便可以得到在完全对等的位置下，各方向的优先级顺序：</p><blockquote><p>东&gt;西&gt;南&gt;北&gt;上&gt;下</p></blockquote><p>这一规律可以被归入东南法则。</p><p>下面作如下约定，在不作特殊说明的情况下，水平方向的活塞总是朝北推出的（或朝东），这样右手方向优先于左手方向。当活塞朝竖直方向推动，默认前方为北方。</p><p>读者或许会认为右侧总是优先于左侧，但如下的实验证明这是错误的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-ffb2c966.png" alt=""></p><p>读者或许会认为离活塞越远者越先更新，但这同样也是有适用条件的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-35208ccc.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-bc2f56ac.png" alt=""></p><p>事实是，判断活塞移动方块的更新优先级需要首先考虑最小粘动次数（层数、深度）。活塞仅具有将面前方块向前推的能力，只有粘液块和蜂蜜块拥有将侧面方块粘动的能力，而一个被移动的方块到活塞本身至少经历了几次粘动，就被定义为该方块的最小粘动次数。即有：</p><blockquote><p>最小粘动次数大者先更新，在最小粘动次数相等的情况下考虑东南法则，东南上者先更新，最后，在移动一列方块时，先移动趋势位的方块。</p></blockquote><p>以上便是活塞更新次序理论在推动和拉动时的描述。对编程略有熟悉的读者可能已经能从这个规律中窥探出活塞推动方块的代码实现方式了。</p><h2 id="若干推论与例题"><a href="#若干推论与例题" class="headerlink" title="若干推论与例题"></a>若干推论与例题</h2><p><em>例 给出拉杆拉下时，所有粘液块的推动次序。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-60982070.png" alt=""></p><p><em>首先，给出所有方块的最小粘动次数：</em></p><blockquote><p><em>1  2  3  2</em></p></blockquote><blockquote><p><em>1  X  X  2</em></p></blockquote><blockquote><p><em>1  0  1  2</em></p></blockquote><p><em>据此可以给出推动次序：</em></p><blockquote><p><em>7  5  1  2</em></p></blockquote><blockquote><p><em>8  X  X  3</em></p></blockquote><blockquote><p><em>9 10  6  4</em></p></blockquote><p><em>例 再给出上图中所有方块收回时的推动次序</em></p><p><em>如上的最小粘动次数表依然适用，据此可以给出收回次序：</em></p><blockquote><p><em>9  5  1  4</em></p></blockquote><blockquote><p><em>8  X  X  3</em></p></blockquote><blockquote><p><em>7 10  6  2</em></p></blockquote><p>从上例就可以看出，<strong>推出和拉回只有在一列方块上有区别，并且是完全的倒序</strong>，除此之外都是相同的。</p><p><del>这里发表一些关于为什么我要从实验入手而不是去翻阅代码去研究这一问题，原因有二。其一是我认为实验是发现真理的最合适途径，红石电路之于Minecraft就好比科学之于现实世界，而科学就是以实验为基础的。在实验的过程中可以发现新的事物或事物新的用途，也可以给出事物的研究方法。的确不可否认的是有些知识如果离开源码有些东西或许我们永远也无法搞清真相，但至少这个理论不是。其二是mojang的代码我实在不敢恭维，而实验有助于简化这个过程。翻过代码之后我会首先给你讲一堆活塞如何判断要移哪些方块，再把它们放到Set和List里，判断二者的size以及用一个迭代器遍历，最后形成一个什么什么树，在来一遍后序遍历…我想有很多有创新的火花就埋没在代码里了。当然，如果你是程序员的话或许和你讲后序遍历你可能会觉得我废话更少一点吧。（行了不要为你不会java而找借口了。）</del></p><p>这里给出一条推论：</p><blockquote><p>在粘液块结构上增加或减去方块，如果不改变粘液块结构的拓扑结构，则不影响原先粘液块结构的更新次序。</p></blockquote><p>举例来说，从中间推动三个方块的横条的更新次序是“右左中”，无论在哪里新加一个方块，这三个方块的更新先后顺序仍然是“右&gt;左&gt;中”。但推动3×3方块的粘液块结构和去掉中间一个方块的粘液块结构，推动次序发生了明显的改变。</p><p><em>例 解释为何图左的装置是一个BUD而图右的装置在被更新后会伸出收回往复持续。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-b83f8483.png" alt=""></p><p><em>分析需要从活塞收回开始，图左的装置需要移动3个方块，红石块的最小粘动次数为1，因而红石块先到位，因此4个方块的更新先后顺序是：红石块&gt;粘性活塞&gt;粘液块&gt;普通方块。其中粘液块到位时会更新活塞，但此时普通方块尚未到位，活塞无法伸出，再次陷入BUD态。去掉普通方块，不影响原先的更新次序，此时活塞可以伸出，从而伸出收回往复持续。</em></p><p><em>例 判断拉杆拉下后活塞的运动情况</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-0d81b65f.png" alt=""></p><p><em>活塞、红石块和右侧的粘液块的最小推动次数为1，这三个方块首先到位，随后中间的一列方块到位，更新处于BUD态的活塞，其会伸出并收回一次。</em></p><p><em>例 判断拉杆拉下后活塞的运动情况</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-48c102ec.png" alt=""></p><p><em>活塞和红石块最先到位，其后是活塞面前的粘液块到位，此时更新活塞，但活塞无法推出。因此该装置在拉杆拉下后没有特殊的动作。</em></p><p><em>例 判断拉杆拉下后装置的运行情况</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-2f8bcb0f.png" alt=""></p><p><em>拉杆拉下后，左侧粘性活塞有1的最小粘动次数，其相较右侧粘性活塞先到位，将两个红石块、两个粘液块和右侧粘性活塞一同推出。到位后，右侧粘性活塞先于左侧粘性活塞到位，其将两个粘液块和两个红石块推出，而左侧粘性活塞无法收回它们。但左侧粘性活塞收回的过程会更新到右侧粘性活塞，其将方块瞬推并自行收回。如下为结果图。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-2ff11869.png" alt=""></p><p><em>例 判断拉杆拉下后装置的运行情况</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-0cbdff19.png" alt=""></p><p><em>拉杆拉下后，右侧优先于左侧，右侧粘性活塞先到位，其先推出。随后左侧粘性活塞最小粘动次数最大，再推出，最后是中间粘性活塞推出。如下为结果图。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-747a4aad.png" alt=""></p><h1 id="第四节-信号传输：铁轨电路、树叶电路及脚手架电路"><a href="#第四节-信号传输：铁轨电路、树叶电路及脚手架电路" class="headerlink" title="第四节 信号传输：铁轨电路、树叶电路及脚手架电路"></a>第四节 信号传输：铁轨电路、树叶电路及脚手架电路</h1><p>诚然，红石线可以传递红石信号，但可以传递信号的并不止红石线。动力铁轨或激活铁轨的点亮和熄灭可以传递方块更新信号，而BUD和观察者可以响应铁轨的变化，因而铁轨可以传递方块更新信号。树叶使用distance数据值记录数据，而观察者可以响应distance数据值的变化，因此树叶可以传递方块变化，这意味着如果恰当地利用这二者，其可以实现与红石信号的互化和传递红石信号的功能。</p><h2 id="铁轨电路"><a href="#铁轨电路" class="headerlink" title="铁轨电路"></a>铁轨电路</h2><p>红石线的信号可以传递15格，铁轨信号只能传递9格。这意味着一个信号源最多可以点亮位于同一条线路上的17个铁轨，并且，铁轨和红石线一样，都是瞬时响应输入的变化。但与红石线有着极大不同的是：铁轨并不存在信号强度，其并不使用信号强度作为信号传递的依据。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-1.png" alt="1-4-1"></p><p>铁轨会在自身收到方块更新信号时，确认自己是否应处在正确的状态，并只有在需要改变状态时才会产生方块更新信号，这也就造就了如下看似奇怪的例子：</p><p>如图，拉杆附着于第九个铁轨下的方块，拉下拉杆后，第九个拉杆已被激活，判断其本身不需要变更状态，也就不会更新到第十个铁轨，这使得第十个铁轨保持未激活的状态，从而陷入BUD态。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-2.png" alt="1-4-2"></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-3.png" alt="1-4-3"></p><p>制作亮BUD态的铁轨也是简单的，如下的电路在按钮按下后，最右的两个铁轨会陷入BUD态。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-4.png" alt="1-4-4"></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-5.png" alt="1-4-5"></p><p>这一BUD最早由Defanive发现，发现时间不晚于2012年9月，限于在当时的版本中还未加入激活铁轨，这一类型的BUD被称为动力铁轨BUD。</p><p>基于此，Defanive制作了可以无限拓展的自复位动力铁轨BUD，其将活塞BUD的检测范围从活塞本身拓展到了几乎一整串铁轨。以下为该自复位BUD的一个简单模型：</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-6.png" alt="1-4-6"></p><p>在本例中，白色混凝土上的铁轨都处于BUD态，蓝色混凝土上的铁轨常亮，最右侧的活塞BUD起到复位和上上图中按钮——也就是脉冲发生器的作用。</p><p>铁轨在某些场合也可配合观察者一起使用，传输信号，特别地，其也可以并排但又互不干扰地传递信号。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-7.png" alt="1-4-7"></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-8.png" alt="1-4-8"></p><h2 id="树叶电路"><a href="#树叶电路" class="headerlink" title="树叶电路"></a>树叶电路</h2><p>树叶依赖NTE事件改变自己的distance数据值，在这里，distance数据值充当了信号强度的功能，因而树叶不像铁轨那样容易制作出BUD。改变distance数据值的常用方法是通过活塞移动毗邻的原木，延迟是1gt。</p><p>树叶distance数据值必须在毗邻的树叶间传递，对角线和断开的树叶均不能传递distance数据值。并且，树叶distance数据值只会被更新为毗邻树叶最小distance数据值加一，因而移除原木后树叶distance数据值的增加和移除信号源后红石线信号强度的衰减有着诸多类似之处。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-9.png" alt="1-4-9"></p><p>如图是一个树叶时钟，周期为5gt，占空比40%的时钟。一般的时钟周期都为偶数，这是时钟中较为特殊的类型。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-10.png" alt="1-4-10"></p><p>观察者检测到树叶的变化，进而激活，启动延迟2gt，输出2pt NTE-NTE短脉冲，活塞无启动延迟，2pt顺推，原木于BE到位，树叶于1gt后更新自己的distance数据值，总计5gt。5gt后，观察者再次检测到树叶的变化，激活，启动延迟2gt，输出2gt短脉冲，活塞顺推并开始收回，原木于BE变为36号方块，同理，树叶仍为1gt后更新自己的distance值。这是一个周期为5gt的时钟。</p><p>若想延长时钟的周期，可以增加观察者的个数，如下图就是一个周期为7gt的时钟。<br><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-11.png" alt="1-4-11"></p><p><em>例 3 简述拉下拉杆后，装置的动作</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-12.png" alt="1-4-12"></p><p><em>活塞启动延迟1gt，1gt后原木被变为36号方块，树叶失去原木，开始增加distance数据值。<br>2gt，右下树叶更新自己的状态，由于左下和右上的树叶distance值为2，右下树叶设置自己的distance数据值为3，更新左下和右上的树叶。3gt，左下和右上的树叶将自己的distance数据值为4，更新左上和右下的树叶。<br>此时，树叶的状态为</em></p><blockquote><p><em>3 4</em></p></blockquote><blockquote><p><em>4 3</em></p></blockquote><p><em>由于右上的树叶发生了变化，右观察者进入启动延迟。就在同一gt，活塞推出完成，原木位于左侧。<br>4gt，左上和右下树叶被更新为5，同时原木使得左下树叶被更新为1，左观察者进入启动延迟。<br>此时，树叶的状态为</em></p><blockquote><p><em>5 4</em></p></blockquote><blockquote><p><em>1 5</em></p></blockquote><p><em>5gt，树叶状态为</em></p><blockquote><p><em>2 6</em></p></blockquote><blockquote><p><em>1 2</em></p></blockquote><p><em>且右观察者开始激活，活塞开始推出。</em></p><p><em>6gt，树叶全部更新完成，状态为</em></p><blockquote><p><em>2 3</em></p></blockquote><blockquote><p><em>1 2</em></p></blockquote><p><em>同时，左观察者开始激活。两观察者的延迟差为1gt，这意味着两观察者会将信号合并为3gt的脉冲，上方活塞得以在5-7gt正常推出。8gt，左熄灭，上方活塞在8-10gt正常收回。</em></p><p><em>试请读者自行分析拉杆拉回时装置的动作和树叶于各游戏刻的状态。</em></p><h2 id="实际应用：灭灯游戏"><a href="#实际应用：灭灯游戏" class="headerlink" title="实际应用：灭灯游戏"></a>实际应用：灭灯游戏</h2><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-13.png" alt="1-4-13"></p><p>灭灯游戏是一种益智游戏，当一个灯的按钮被按下，待电路稳定后，其本身和相邻的四个灯的状态会翻转，即从亮变为灭，从灭变为亮。如下图就是最中央的按钮被按下后的情况。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-14.png" alt="1-4-14"></p><p>游戏的胜利条件在于将给定初始条件的灯形经过一系列的翻转，使之全灭。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-15.png" alt="1-4-15"></p><p>下面我们将介绍PeterjiangTW基于树叶电路所制作的灭灯游戏。</p><p>为了用红石电路实现这一游戏，我们首先来分析电路的实现方式。</p><p>最首先注意到的是，虽然按钮被放置在红石灯上，但红石灯的亮灭并不直接受按钮的控制，按钮只提供脉冲，红石灯的亮灭则要由一个T触发器控制。如下图就是一个对电路的实现。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-16.png" alt="1-4-16"></p><p>但是电路的难点在于如何让四周的四个红石灯也发生变化，这意味着每个红石灯单元的信号必须传递到周围四个单元去，并且只能传递到这四个单元，每个单元也只能接收周围四个单元的信号。</p><p>PeterjiangTW的设计巧妙地利用了树叶来传递信号，由于树叶的distance数据值最大为7，这就限制了信号只能被传递到周围的四格。上图电路只包含了核心的翻转电路，因为本节的内容旨在学习树叶电路的应用形式，复位电路的设计请读者作为附加内容自行学习。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-17.png" alt="1-4-17"></p><p>在灭灯游戏电路中，每一个红石灯都对应一个电路单元，树叶将这些单元全部连起来，但限于树叶的传输能力有限，其只能将信号传输到四周的四个单元，按钮按下时只需要基于树叶系统一个信号即可。下面我们进行单个单元的设计。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-18.png" alt="1-4-18"></p><p>按钮按下后会自行弹回，活塞也会相应伸出并收回，我们要求这两个边沿只会产生一次翻转，如下图的电路可以解决这一问题。观察者检测树叶变化，按钮两个边沿会转变为观察者的两个脉冲，右下的粘性活塞会顺推观察者并收回，这意味着上方的粘性活塞只会伸出收回一次。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-19.png" alt="1-4-19"></p><p>应用比较器可以隔着一个实体方块检测其后容器的容量的性质，通过粘性活塞控制这一个实体方块，可以将T触发器的输出接到红石灯上。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-20.png" alt="1-4-20"></p><p>余下内容的电路请读者自行学习和实践。</p><h2 id="脚手架电路"><a href="#脚手架电路" class="headerlink" title="脚手架电路"></a>脚手架电路</h2><p>脚手架的bottom数据值用于指示脚手架下方的方块能否支撑脚手架，一般而言，只有上表面完整的方块才能支撑脚手架，灵魂沙、伸出的活塞、活塞臂、打开的活板门是不能支撑脚手架的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-cdf732dc.png" alt=""></p><p>脚手架拥有和树叶类似的distance数据值，但这个数据值只能累计横向拓展距离，这个值最大是6，例如下图中的橙色玻璃位置不能再放置脚手架了。如果尝试在distance数据值为7的位置放置脚手架，脚手架会将自己变为掉落沙实体向下掉落，如果脚手架发现自身的数据值被更新为7，脚手架会被破坏。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-c0b37eab.png" alt=""></p><p>和树叶类似地，脚手架更新自己的distance值依赖四周和下方的脚手架，延迟也为1gt，我们可以尝试将树叶电路中类似的结构套用在脚手架电路中。</p><p>与树叶时钟类似地，这是一个脚手架时钟，基于类似的原理，这个时钟的周期也为5gt，占空比也为40%。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-bd993a69.png" alt=""></p><p>除了使用活塞移动脚手架下的方块外，活板门也可以用于配合脚手架使用。如上图便是一个3gt中继器。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-1b62ba78.png" alt=""></p><h2 id="垂直信号传输"><a href="#垂直信号传输" class="headerlink" title="垂直信号传输"></a>垂直信号传输</h2><p>我们曾在《基础红石原理》中介绍过一种竖直信号的传递——半砖上传，但是其只能将信号向上传输。现在，我们对于垂直信号传递有了更加丰富的实现方式，而在这一点中，粘液块和观察者功不可没。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-21.png" alt="1-4-21"></p><p>下面介绍一种不太常用的信号传输方式——气泡柱。</p><p>气泡柱于1.13被引入游戏，其会在灵魂沙或岩浆块上的水源产生。气泡柱是一个方块，因此气泡柱和水源之间的转换可以由观察者检测到。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-22.png" alt="1-4-22"></p><p>通过活塞移动灵魂沙，可以在竖直方向上产生或消除气泡柱，从而在竖直方向上传递信号。气泡柱的产生和消除依赖流体的NTE事件，无论气泡柱的长度，产生气泡柱需要20gt，消除气泡柱是瞬时的。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/1-4-23.png" alt="1-4-23"></p><p>气泡柱是一种只能向上不能向下的信号传递方式，但其延迟不随高度差而变化。脚手架也可以被用来传递竖直传递信号，同样只能由下到上。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E7%B2%98%E6%B6%B2%E5%9D%97%E4%B8%8E%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF/%E7%B2%98%E6%B6%B2%E5%9D%97%E5%8F%8A%E8%A7%82%E5%AF%9F%E8%80%85%E6%8A%80%E6%9C%AF-b79bfc8a.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 红石原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>铁轨及矿车系统</title>
      <link href="/2020/02/24/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/02/24/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="第一节-综述"><a href="#第一节-综述" class="headerlink" title="第一节 综述"></a>第一节 综述</h1><p>矿车和铁轨最早在Infdev版本的秘密周五更新中作为Minecraft中不可缺少的“挖矿要素”而被加入，在其后的若干版本中得到完善，如同在秘密周五更新的Alpha版本中加入的动力矿车和箱子矿车（运输矿车）、Beta 1.5加入的动力铁轨（充能铁轨）和探测铁轨与1.5加入的漏斗矿车和激活铁轨。1.5加入的刷怪笼矿车、TNT矿车和1.7.2加入的命令方块矿车在本章中只作简要提及。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-1cf290cf.png" alt=""></p><!-- TOC depthFrom:1 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 --><ul><li><a href="#第一节-综述">第一节 综述</a><ul><li><a href="#铁轨简述">铁轨简述</a></li><li><a href="#矿车运行的定性规律">矿车运行的定性规律</a></li></ul></li><li><a href="#第二节-静态的铁轨分析">第二节 静态的铁轨分析</a><ul><li><a href="#铁路的东南法则">铁路的东南法则</a></li><li><a href="#弯轨的分析">弯轨的分析</a></li></ul></li><li><a href="#第三节-矿车动力学">第三节 矿车动力学</a><ul><li><a href="#无量纲约定">无量纲约定</a></li><li><a href="#水平加速作用">水平加速作用</a></li><li><a href="#单格动力铁轨加速实验">单格动力铁轨加速实验</a></li><li><a href="#货运矿车单格最大滑行距离的推导">货运矿车单格最大滑行距离的推导</a></li><li><a href="#多动力铁轨加速实验">多动力铁轨加速实验</a></li><li><a href="#隐速度阈值">隐速度阈值</a></li><li><a href="#多格加速模型">多格加速模型</a><ul><li><a href="#加速过程">加速过程</a></li><li><a href="#加隐速度过程">加隐速度过程</a></li><li><a href="#减隐速度过程">减隐速度过程</a></li><li><a href="#减速过程">减速过程</a></li><li><a href="#结论">结论</a></li></ul></li><li><a href="#货运矿车的阈值模型">货运矿车的阈值模型</a></li><li><a href="#直轨加速阻尼模型总结">直轨加速阻尼模型总结</a></li><li><a href="#制动铁轨">制动铁轨</a></li><li><a href="#矿车回弹">矿车回弹</a></li></ul></li></ul><!-- /TOC --><h2 id="铁轨简述"><a href="#铁轨简述" class="headerlink" title="铁轨简述"></a>铁轨简述</h2><p>铁轨会因其所处的位置以及放置的顺序不同而有着不同的形状，具体来说，普通铁轨有着水平直轨，坡度直轨和水平弯轨三种形态；其他铁轨只有直轨的形态。铁轨的下方是其附着，附着被破坏是其也会被破坏，例外是坡度直轨拥有侧面附着，侧面附着被破坏时铁轨也会被破坏。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-dd0d692d.png" alt=""></p><p>因此，想要用非普通铁轨直接转弯是不可能的，想要用普通铁轨同时转弯和上坡也是不可能的。如果让普通铁轨同时转弯和上坡，那么企图上坡的矿车会被卡入方块之中。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-ad446211.png" alt=""></p><h2 id="矿车运行的定性规律"><a href="#矿车运行的定性规律" class="headerlink" title="矿车运行的定性规律"></a>矿车运行的定性规律</h2><p>由铁轨直接相连的系统被称为<strong>铁路</strong>。首先我们研究矿车从一条铁路驶出，又驶入另一条铁路时的运行方向具有怎样的规律。铁轨的形态有弯轨、平面直轨、坡度直轨三种，下面分别进行叙述。</p><p>矿车从一条铁路驶向另一条铁路的弯轨时，总会沿原先的运动方向前进。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-8ca4dd72.png" alt=""></p><p>矿车从一条铁路驶向另一条铁路的直轨时，总会朝东方或南方前进，这一点可以被归入东南法则。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-1cb0d049.png" alt=""></p><p>矿车从一条铁路驶向另一条铁路的坡度直轨时，总会下坡前进。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-8a4fb8d6.png" alt=""></p><p>了解如上的三条规律，可以更好的把握矿车在从一条铁路进入另一条铁路时的运行方向。如下的铁路充分利用的矿车驶入直轨和坡度轨时的规律，其研究是一个很有趣的课题——不使用弯轨如何使矿车可以双向地转弯。以下三张图分别给出了东—南、东—北和西—北转弯的一种设计。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-aaa7e1a3.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-aafbb091.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-1325975c.png" alt=""></p><p>与红石线类似地，矿车也有可能被“压线”，也就是被阻挡在坡度直轨上。但特殊的是，下图中的红色混凝土可以阻挡从上至下的矿车，黄绿色混凝土却无法阻挡。另外，只要矿车具有足够的速度，任何方块都无法阻挡从下向上运行的矿车。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-a8ac3059.png" alt=""></p><p>一个基于此的有用的设计是存储矿车的自动队列，矿车被栅栏门阻挡，而前一存储单元的探测铁轨控制后裔存储单元的栅栏门。矿车从左侧入队并依次存储，而从右侧人为控制取出一只矿车时，所有矿车右移一个单元继续存储。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-ee7288f7.png" alt=""></p><h1 id="第二节-静态的铁轨分析"><a href="#第二节-静态的铁轨分析" class="headerlink" title="第二节 静态的铁轨分析"></a>第二节 静态的铁轨分析</h1><h2 id="铁路的东南法则"><a href="#铁路的东南法则" class="headerlink" title="铁路的东南法则"></a>铁路的东南法则</h2><p>在1.15之前，默认放置的单个铁轨总是南北朝向的，但在1.15之后，铁轨总是朝着玩家放置的方向。</p><p>铁轨的放置和连接有着与方向有关的优先规律，多个铁轨直接相连的系统可以被称为铁路。与此相关的规律可以被归入东南法则，在本节的若干图例中，如不特别说明，箭头总指向北方。</p><p>在1.15中，在已经成形的铁路两侧放置铁轨不会破坏原先的铁路，该铁轨的方向总会与直接放置单个铁轨时的朝向相同——也就是沿玩家的方向。如果新放置的铁轨在原铁路的末端，其首先尝试连接玩家方向的铁轨末端，如果这两个方向上没有铁轨，其尝试连接垂直玩家方向的铁路末端。如果将铁轨末端变为南北朝向不破坏任何已有的铁路结构，其可以将毗邻的铁路末端变为南北朝向；将铁轨末端变为东西朝向总会是成功的。总结而言，<strong>铁轨总优先尝试按照玩家的方向放置，但铁路总优先保持东西朝向</strong>。坡度直轨对这条规律没有影响。</p><p><em>例 面朝北方，在橙色混凝土上放置动力铁轨，判断铁路的最终形状。如果面朝西方，再次判断。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-ab2b44e8.png" alt=""></p><p><em>铁轨总优先尝试按照玩家的方向放置，因此其与南北朝向的动力铁轨连接，被南北放置。面朝西方得到的结果是相同的。</em></p><p><em>例 面朝北方，依次在橙色混凝土和品红色混凝土上放置动力铁轨，判断铁路的最终形状。如果面朝西方，再次判断</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-1e468cd8.png" alt=""></p><p><em>面朝北方放置橙色铁轨时，南北方向没有铁轨末端，其只能东西连接，并将西侧铁轨变为东西向。当在放置品红色铁轨时，其会优先连接南侧橙色混凝土上的铁轨，故其南北放置。结果如下，其中箭指向北方。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-31b6a13d.png" alt=""></p><p><em>面朝西方时，橙色铁轨因左下侧的铁轨而成为东西走向，但其不会改变左下侧铁轨的朝向。当放置品红色铁轨时，其尝试改变橙色铁轨的指向，使之成为东西朝向。结果如下，其中箭指向北方。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-ba631b33.png" alt=""></p><p><em>例 面朝北方，在橙色混凝土上放置动力铁轨，判断铁路的最终形状。如果面朝西方，再次判断。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-8b0445f5.png" alt=""></p><p><em>必须注意，原铁路的末端仅有橙色铁轨的左侧和右侧，因此铁轨总会被左右放置，但只有南北朝向时能改变左右两侧铁轨朝向。结果如下，其中箭指向北方。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-0d04f5e5.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-e432524d.png" alt=""></p><p><em>例 尝试在地面密铺3×3的东西朝向的铁轨。</em></p><p>由于铁路总会优先保持东西走向，故只需要面朝西方或东方，沿东西方向铺设一条铁路，再铺设另外两条铁路即可。如果第二条铁路最先铺设在第一条铁路的末端，其会暂时变为南北指向，但第二条铁路的其他铁轨会纠正这一个错误。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-6d9fea4a.png" alt=""></p><p><em>例 尝试在地面密铺3×3的南北朝向的铁轨，不允许在范围之外放置铁轨。</em></p><p><em>显然在铺设铁路时不能过于随意，不能在前一条铁轨的末端两侧铺设第二条铁轨，否则如果按照从上到下，从左到右的顺序铺设时会出现以下问题：</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-2f99e576.png" alt=""></p><p><em>在铺设时应当先铺设铁轨的中间部分，再从中间部分延长至末端。</em></p><p>铁轨被活塞推动，相当于在推动到位的位置直接放置原形态的铁轨，当多个铁轨被推动时，推动到位的次序自然应当用活塞推动方块次序的规律进行判断。</p><p><em>例 面朝北方，分别拉下两个拉杆，判断铁路最终的形状。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-265d37bb.png" alt=""></p><p><em>当拉下上侧拉杆时，下侧铁轨先到位，保持南北放置。随后上侧铁轨到位，与下侧铁轨连接，结果如下。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-aee31b49.png" alt=""></p><p><em>当拉下上侧拉杆时，上侧铁轨先到位，优先东西连接。随后下侧铁轨到位，南北连接，但不能改变上侧铁轨的朝向。</em></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-911659f4.png" alt=""></p><p>在1.15前，铁路保持东西走向比铁轨连接南北走向具有更高的优先级，换句话说，<strong>铁路总优先形成东西朝向，在不能呈东西朝向时才会沿南北朝向</strong>。</p><p>出于此，仅在3×3范围内操作就在其内密铺南北朝向的动力铁轨时不可能的，因为一旦放置一个铁轨末端，再在其毗邻放置的铁轨总会使其成为东西朝向。这种情况下可以用延长铁路，避免末端接触的方法密铺南北朝向的铁路。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-ab529fff.png" alt=""></p><h2 id="弯轨的分析"><a href="#弯轨的分析" class="headerlink" title="弯轨的分析"></a>弯轨的分析</h2><p>普通铁轨的铺设与动力铁轨的铺设有着类似的规律，唯一的不同是普通铁轨具有弯轨这一特殊形态。当普通铁轨被放置时，如果其可以形成弯轨，其会优先形成弯轨，弯轨总会优先连接东侧和南侧。这一规律同样可以归入东南法则。</p><p>非常特殊的一点是，如果弯轨的三个方向有其他铁轨，红石信号可以控制弯轨的弯曲方向，弯轨未激活时优先连接东侧和南侧，弯轨激活时会优先连接西侧和北侧。但是如果弯轨的四个方向都有铁轨，红石信号对其没有作用。出于这一点，可以不把弯轨作为红石元件。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-cbf721f5.png" alt=""></p><p>如果铁轨因放置或红石指向BUG处于不正常的状态（或称BUD态），这种状态只能由部分红石信号改变，如红石线直接指向、拉杆、观察者等(红石块会激活弯轨，但激活这一过程不会更新铁轨，暂不清楚这是否是一个BUG)，普通的方块更新不会使其回归正常的状态。</p><p>下面介绍连续弯轨和交叉弯轨，其本质上是多个弯轨的重复。下图左侧是一个朝前的偏向右侧的连续弯轨，每一个弯轨连接右侧和前侧，因此矿车可以从后向前运行，但从前方来的矿车会到达右侧而脱离铁轨。下图右侧是交叉弯轨，连接右侧和前侧的弯轨和连接前侧和左侧的弯轨交替出现，同样可以使后方来的矿车向前运行，但不能让矿车从前方向后运行。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-0afede77.png" alt=""></p><p>布置一个连接前侧和右侧的弯轨，必须先在前侧和右侧放置铁轨，使其弯向前侧和右侧，随后再破坏多余辅助的铁轨，这就意味着弯轨连续弯轨或交叉弯轨只能向由后向前逐个铺设。同时，铺设新的弯轨时，旧的弯轨不能收到影响，这就意味着后方的弯轨处于西侧或北侧，因而，向东方和南方铺设连续弯轨或交叉弯轨只需要按部就班地逐个铺设即可。</p><p>铺设朝向北方或西方的连续弯轨或交叉弯轨需要辅以红石信号：在不放置铁轨的一侧放置红石信号源，保证新放置的弯轨处于激活态，连接前方而不是后方已铺设的弯轨。铺设完毕后，先去除多余辅助的铁轨，再去除红石信号源，保证弯轨不会因撤销信号而改变形态。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-21cf3874.png" alt=""></p><p>如果一条直轨铁路已经铺设完成了，如何将它们变为连续弯轨或交叉弯轨呢？在这种情况下，唯一能够变更弯轨的弯向，使之变为激活态或未激活态的方法是用红石信号更新它们。如下的装置可以将朝南或朝东的一列直轨变为连续弯轨。如果要铺设朝西和朝北的连续弯轨，可以在观察者前放置红石块，使其被更新为激活态。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-cadd92d9.png" alt=""></p><p>交叉弯轨的制作稍为复杂，需要两个如上图的装置间隔运行，这就要求制作一个每两格触发一次的装置，在<a href="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/blob/master/粘液块及观察者技术.md" target="_blank" rel="noopener">粘液块及观察者技术</a>中我们介绍了类似的装置。如下是ilmango给出的一种设计。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-2cb77c8d.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-e94acf25.png" alt=""></p><p>同样，如果需要朝西方或北方制作连续弯轨，需要在观察者前加红石块。</p><p>连续弯轨和交叉弯轨最早被应用于生存电路，用活塞在交叉弯轨上推动矿车，达到20m/s的速度。这种技术至少在2013年就得到了应用。</p><p>下面尝试铺设如下形状的铁路线。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-5a68f2a3.png" alt=""></p><p>难点在于弯轨。铺设下层的前右弯轨时，必须首先放置后侧和右侧的铁轨，因此本铁路应当从左向右铺设。如果面朝东方或南方，铺设下层的前右弯轨时，如果上层靠右弯轨已经铺设好了，其会主动连接前侧，也就是上层靠右弯轨，因此必须先铺设下层弯轨。但此时上层的靠右弯轨就没有机会弯向左侧和后侧了，除非使用一个浮空的方块加铁轨作为辅助。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-2748c890.png" alt=""></p><p>如果是面朝南方或西方，该浮空方块的拆除需要推迟，至少要等下一单元的上层靠左弯轨铺设完毕，否则其会影响这一单元的靠右上层弯轨。</p><p>这种铁路的铺设方式并不唯一，例如玩家可以在下图的基础上继续修改，完成本铁路。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-397541be.png" alt=""></p><p>在1.15前，铁路的东西向连接具有很强的优先级，在东西方向铺设本铁路还是一件比较容易的事，只需要注意不断右移用来延长铁路以避免末端接触的辅助铁轨即可。但南北方向铺设该铁路难度较高，下面给出一种利用粘性活塞的方式。</p><p>首先按如下形式铺设铁路，再从左到右地依次激活并撤销激活粘性活塞。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-6b5a52e7.png" alt=""></p><p>上层铁轨被拉至下方，这一过程会使得两侧的普通铁轨弯向坡度动力铁轨。从左到右地拉动铁轨，就可以使普通铁轨统一弯向右侧了。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-1b668095.png" alt=""></p><p>随后的铁路布局可以参考本节借用辅助方块的部分。</p><h1 id="第三节-矿车动力学"><a href="#第三节-矿车动力学" class="headerlink" title="第三节 矿车动力学"></a>第三节 矿车动力学</h1><p>矿车动力学是研究矿车在铁路之上运行规律的理论。研究表明，矿车在铁轨上的运行和一般实体的平面移动与落体运动并没有运行模式上的区别，但关键在于矿车的运动被铁轨局限于铁路之上，且矿车在每一游戏刻的运动主要取决于其下铁轨的状态。Octopuscraft的Mackler在2014年2月发布的《关于矿车系统的研究与应用》中对铁轨及矿车系统做了基础性的剖析，并给出了若干极具启发意义的实际应用与设计。nenn发布在RedstoneMachineryCommunication的一系列论文通过详实严谨的数据从实验角度阐明了矿车运行的规律，并给出基于理论分析的若干实际应用及实践方向。</p><p>本节内容将会通过若干实验构建出矿车在轨道上运行的定量规律，读者也可以同时参考上述的文献来辅助阅读。</p><h2 id="无量纲约定"><a href="#无量纲约定" class="headerlink" title="无量纲约定"></a>无量纲约定</h2><p>在进行实验前，我们首先做如下的无量纲约定。</p><p>在计算机实现中，矿车的位置和速度都由double型存储，其本身不具备量纲，并且在每游戏刻进行移动计算时，两者直接进行相加。实际应用中我们期望赋予物理量以量纲，但又希望在运算时忽略这一量纲，使得位置和速度可以直接相加。下面给出物理量的默认量纲，此后在本章的计算中，将忽略这些量纲的书写。</p><ul><li>位移、距离、位置的单位：格（米），$\mathbb{b(m)}$。</li><li>时间单位：游戏刻，$\mathbb{gt}$。</li><li>速度单位：格（米）每游戏刻，$\mathbb{m/gt}$。</li><li>加速度单位：格（米）每二次游戏刻，$\mathbb{m/gt^2}$</li><li>信号强度，单位为1。</li><li>质量因子（下述），单位为1。</li><li>阻尼乘数、阻尼因子（下述），单位为1。</li></ul><h2 id="水平加速作用"><a href="#水平加速作用" class="headerlink" title="水平加速作用"></a>水平加速作用</h2><p>首先我们介绍矿车实体如何存储自身的位置及速度。</p><p>矿车的实体数据中包含Pos和Motion两项，分别表示矿车的位置和速度，其x、y、z三个分量对应位置矢量和速度矢量的三个分量，其在计算机中使用double类型存储。</p><p>首先对动力铁轨的加速作用进行分析。必须注意到以下的一个事实：动力铁轨对普通矿车的加速存在上限，这个速度称为饱和速度。例如在如下的对比实验中，两辆矿车同时出发，其中一辆不断受到动力铁轨的加速，另一辆只接受4个动力铁轨的加速。事实是，在第二辆矿车离开动力铁轨的一段时间内，其和第一辆矿车保持同速。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-5debd37a.png" alt=""></p><p>换句话说，更多动力铁轨的加速不会使矿车获得更高的速度，但却可以使矿车移动更长的距离。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-ccbad9b7.png" alt=""></p><p>这两个实验说明，矿车存在一个<strong>隐速度</strong>，其表征矿车运动的快慢和能力，但矿车的真实速度却被限制在了饱和速度。</p><p>下面我们使用<code>\data get entity</code>指令获取对每一游戏刻矿车的Pos和Motion，实验内容为各类矿车在水平动力直轨上的运行情况。由于矿车在直轨上进行运动，这里只记录运动方向上的Pos和Motion。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-f205234b.png" alt=""></p><table align="center">    <tr>        <th rowspan="2">游戏刻 \ 矿车类型</th>        <th colspan="2">非运矿车</th>        <th colspan="2">客运矿车</th>            <th colspan="2">货运矿车（满载）</th>            <th colspan="2">动力矿车（空载）</th>    </tr >    <tr >        <td>Pos</td>            <td>Motion</td>            <td>Pos</td>            <td>Motion</td>            <td>Pos</td>            <td>Motion</td>            <td>Pos</td>            <td>Motion</td>    </tr>    <tr>        <td>0</td>        <td>0.5000</td>            <td>0.0000</td>            <td>0.5000</td>            <td>0.0000</td>            <td>0.5000</td>            <td>0.0000</td>            <td>0.5000</td>            <td>0.0000</td>    </tr>    <tr>        <td>1</td>        <td>0.5000</td>            <td>0.0200</td>            <td>0.5000</td>            <td>0.0200</td>            <td>0.5000</td>            <td>0.0200</td>            <td>0.5000</td>            <td>0.0200</td>    </tr>    <tr>        <td>2</td>        <td>0.5200</td>            <td>0.0792</td>            <td>0.5150</td>            <td>0.0799</td>            <td>0.5200</td>            <td>0.0796</td>            <td>0.5200</td>            <td>0.0788</td>    </tr>    <tr>            <td>3</td>        <td>0.5992</td>            <td>0.1360</td>            <td>0.5750</td>            <td>0.1397</td>            <td>0.5996</td>            <td>0.1380</td>            <td>0.5988</td>            <td>0.1342</td>    </tr>    <tr>            <td>4</td>        <td>0.7352</td>            <td>0.1906</td>            <td>0.6797</td>            <td>0.1993</td>            <td>0.7376</td>            <td>0.1952</td>            <td>0.7330</td>            <td>0.1862</td>    </tr>    <tr>        <td>5</td>        <td>0.9258</td>            <td>0.2430</td>            <td>0.8292</td>            <td>0.2587</td>            <td>0.9328</td>            <td>0.2513</td>            <td>0.9192</td>            <td>0.2352</td>    </tr>    <tr>        <td>6</td>        <td>1.1688</td>            <td>0.2932</td>            <td>1.0232</td>            <td>0.3179</td>            <td>1.1842</td>            <td>0.3063</td>            <td>1.1192</td>            <td>0.2813</td>    </tr>    <tr>        <td>7</td>        <td>1.4620</td>            <td>0.3415</td>            <td>1.2616</td>            <td>0.3769</td>            <td>1.4905</td>            <td>0.3602</td>            <td>1.3192</td>            <td>0.3246</td>    </tr>    <tr>        <td>8</td>        <td>1.8036</td>            <td>0.3878</td>            <td>1.5443</td>            <td>0.4358</td>            <td>1.8507</td>            <td>0.4130</td>            <td>1.5192</td>            <td>0.3654</td>    </tr>    <tr>        <td>9</td>        <td>2.1914</td>            <td>0.4323</td>            <td>1.8712</td>            <td>0.4945</td>            <td>2.2507</td>            <td>0.4647</td>            <td>1.7192</td>            <td>0.4038</td>    </tr>    <tr>        <td>10</td>        <td>2.5914</td>            <td>0.4750</td>            <td>2.2421</td>            <td>0.5530</td>            <td>2.6507</td>            <td>0.5154</td>            <td>1.9192</td>            <td>0.4399</td>    </tr>    <tr>        <td>11</td>        <td>2.9914</td>            <td>0.5160</td>            <td>2.6421</td>            <td>0.6114</td>            <td>3.0507</td>            <td>0.5651</td>            <td>2.1192</td>            <td>0.4738</td>    </tr>    <tr>        <td>12</td>        <td>3.3914</td>            <td>0.5554</td>            <td>3.0421</td>            <td>0.6695</td>            <td>3.4507</td>            <td>0.6138</td>            <td>2.3192</td>            <td>0.5058</td>    </tr></table><ul><li>矿车的位置用$r$来表示，第$t$游戏刻的位置用$r_t$来表示。由于矿车最初放置时都处于方块的中心，故$r_0=0.5$，在进行实验时我们总取$r_0=0.5$。</li><li>矿车的位移用$x$来表示，第$t$游戏刻的位置用$x_t$来表示，即$x_t=r_t-r_0$。</li><li>矿车的真实<strong>速度</strong>由相邻两游戏刻间的位移差来刻画，用$v$或来表示，第$t$和$t+1$游戏刻的位移差用$v_t$来表示，也就有$v_t=x_{t+1}-x_t$，也就是说本游戏刻的速度将会被加到下一游戏刻的位移上去。这是由于游戏先进行位置运算，随后才会进行阻尼和加速运算。</li><li>矿车的Motion似乎从某种程度上反映了矿车的真实速度，是一个与矿车速度有关的量，以下称为运动量或<strong>隐速度</strong>，这里用$M$表示Motion。</li><li>矿车在相邻两游戏刻间Motion的增量从某种程度上反映了矿车的加速度，是一个与矿车加速有关的量，以下称为加速度或加动量，这里用$a$表示，即$a_t=M_{t+1}-M_t$。</li></ul><table align="center">    <tr>        <th rowspan="2">游戏刻 \ 矿车类型</th>        <th colspan="2">非运矿车</th>        <th colspan="2">客运矿车</th>            <th colspan="2">货运矿车（满载）</th>            <th colspan="2">动力矿车（空载）</th>    </tr >    <tr >        <td><i>v</i></td>            <td><i>M</i></td>            <td><i>v</i></td>            <td><i>M</i></td>            <td><i>v</i></td>            <td><i>M</i></td>            <td><i>v</i></td>            <td><i>M</i></td>    </tr>    <tr>        <td>0</td>        <td>0.0000</td>            <td>0.0000</td>            <td>0.0000</td>            <td>0.0000</td>            <td>0.0000</td>            <td>0.0000</td>            <td>0.0000</td>            <td>0.0000</td>    </tr>    <tr>        <td>1</td>        <td>0.0200</td>            <td>0.0200</td>            <td>0.1500</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>    </tr>    <tr>        <td>2</td>        <td>0.0792</td>            <td>0.0792</td>            <td>0.0600</td>            <td>0.0799</td>            <td>0.0796</td>            <td>0.0796</td>            <td>0.0788</td>            <td>0.0788</td>    </tr>    <tr>            <td>3</td>        <td>0.1360</td>            <td>0.1360</td>            <td>0.1047</td>            <td>0.1397</td>            <td>0.1380</td>            <td>0.1380</td>            <td>0.1342</td>            <td>0.1342</td>    </tr>    <tr>            <td>4</td>        <td>0.1906</td>            <td>0.1906</td>            <td>0.1495</td>            <td>0.1993</td>            <td>0.1952</td>            <td>0.1952</td>            <td>0.1862</td>            <td>0.1862</td>    </tr>    <tr>        <td>5</td>        <td>0.2430</td>            <td>0.2430</td>            <td>0.1940</td>            <td>0.2587</td>            <td>0.2513</td>            <td>0.2513</td>            <td>0.2000</td>            <td>0.2352</td>    </tr>    <tr>        <td>6</td>        <td>0.2932</td>            <td>0.2932</td>            <td>0.2384</td>            <td>0.3179</td>            <td>0.3063</td>            <td>0.3063</td>            <td>0.2000</td>            <td>0.2813</td>    </tr>    <tr>        <td>7</td>        <td>0.3415</td>            <td>0.3415</td>            <td>0.2827</td>            <td>0.3769</td>            <td>0.3602</td>            <td>0.3602</td>            <td>0.2000</td>            <td>0.3246</td>    </tr>    <tr>        <td>8</td>        <td>0.3878</td>            <td>0.3878</td>            <td>0.3269</td>            <td>0.4358</td>            <td>0.4000</td>            <td>0.4130</td>            <td>0.2000</td>            <td>0.3654</td>    </tr>    <tr>        <td>9</td>        <td>0.4000</td>            <td>0.4323</td>            <td>0.3709</td>            <td>0.4945</td>            <td>0.4000</td>            <td>0.4647</td>            <td>0.2000</td>            <td>0.4038</td>    </tr>    <tr>        <td>10</td>        <td>0.4000</td>            <td>0.4750</td>            <td>0.4000</td>            <td>0.5530</td>            <td>0.4000</td>            <td>0.5154</td>            <td>0.2000</td>            <td>0.4399</td>    </tr>    <tr>        <td>11</td>        <td>0.4000</td>            <td>0.5160</td>            <td>0.4000</td>            <td>0.6114</td>            <td>0.4000</td>            <td>0.5651</td>            <td>0.2000</td>            <td>0.4738</td>    </tr>    <tr>        <td>12</td>        <td></td>            <td>0.5554</td>            <td></td>            <td>0.6695</td>            <td></td>            <td>0.6138</td>            <td></td>            <td>0.5058</td>    </tr></table><p>现在可以明显地看出：</p><ul><li>矿车存在<strong>饱和速度</strong>$v_\mathbb{max}$，对动力矿车来说，这个值是0.2，对其他矿车来说，这个值是0.4。因而动力矿车在所有矿车中移动得最慢。</li><li>动力矿车在5游戏刻后达到速度饱和，此时动力矿车尚未离开第一格动力铁轨；其他矿车在第10游戏刻后均达到速度饱和，此时这些矿车均离开第一格动力铁轨，但均未离开第二格动力铁轨。</li><li>矿车达到饱和速度所用的时间称为饱和时间，期间驶过的位移称为饱和位移，分别用$t_v$和$x_v$表示。</li><li>对非运矿车、货运矿车和动力矿车来说，在达到饱和速度前，$v=M$，而客运矿车却有$v=0.75M$。这里我们把系数0.75称为<strong>质量因子</strong>，记作$m$。对客运矿车来说有$m=0.75$，对其他矿车来说有$m=1$，可以得出：</li></ul><p>$$v=\mathbb{max}(v_\mathbb{max},mM)$$</p><ul><li>在第一游戏刻，所有矿车的隐速度均为0.02，可以认为这是位于实体方块毗邻的矿车被动力铁轨给予的<strong>初始隐速度</strong>，即$M_1=0.02$。</li><li>矿车在第一游戏刻的加速度接近但略小于0.06，此后的加速度随速度增加而递减，可以认为动力铁轨中仍然存在阻尼作用，且有：</li></ul><p>$$M_{t+1}=dM_t+a$$</p><p>这里$a=0.06$，表示动力铁轨的加速作用，$d$称为<strong>阻尼乘数</strong>，其试图用离散方式模拟与速度成正比的阻力加速度带来的减速效应。</p><p>以下针对不同的$d$，对$M$进行模拟，期望得出不同矿车的阻尼乘数。</p><table align="center">    <tr>        <th rowspan="3">游戏刻 \ 矿车类型</th>        <th colspan="2">非运矿车</th>        <th colspan="2">客运矿车</th>            <th colspan="2">货运矿车（满载）</th>            <th colspan="2">动力矿车（空载）</th>    </tr >    <tr >        <th colspan="2"><i>d</i>=0.96</th>            <th colspan="2"><i>d</i>=0.997</th>            <th colspan="2"><i>d</i>=0.98</th>            <th colspan="2"><i>d</i>=0.9408</th>    </tr>    <tr >        <td>预测</td>            <td>测量</td>            <td>预测</td>            <td>测量</td>            <td>预测</td>            <td>测量</td>            <td>预测</td>            <td>测量</td>    </tr>    <tr>        <td>1</td>        <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>            <td>0.0200</td>    </tr>    <tr>        <td>2</td>        <td>0.0792</td>            <td>0.0792</td>            <td>0.0799</td>            <td>0.0799</td>            <td>0.0796</td>            <td>0.0796</td>            <td>0.0788</td>            <td>0.0788</td>    </tr>    <tr>            <td>3</td>        <td>0.1360</td>            <td>0.1360</td>            <td>0.1397</td>            <td>0.1397</td>            <td>0.1380</td>            <td>0.1380</td>            <td>0.1342</td>            <td>0.1342</td>    </tr>    <tr>            <td>4</td>        <td>0.1906</td>            <td>0.1906</td>            <td>0.1993</td>            <td>0.1993</td>            <td>0.1952</td>            <td>0.1952</td>            <td>0.1862</td>            <td>0.1862</td>    </tr>    <tr>        <td>5</td>        <td>0.2430</td>            <td>0.2430</td>            <td>0.2587</td>            <td>0.2587</td>            <td>0.2513</td>            <td>0.2513</td>            <td>0.2352</td>            <td>0.2352</td>    </tr>    <tr>        <td>6</td>        <td>0.2932</td>            <td>0.2932</td>            <td>0.3179</td>            <td>0.3179</td>            <td>0.3063</td>            <td>0.3063</td>            <td>0.2813</td>            <td>0.2813</td>    </tr>    <tr>        <td>7</td>        <td>0.3415</td>            <td>0.3415</td>            <td>0.2827</td>            <td>0.3769</td>            <td>0.3602</td>            <td>0.3602</td>            <td>0.2000</td>            <td>0.3246</td>    </tr>    <tr>        <td>8</td>        <td>0.3878</td>            <td>0.3878</td>            <td>0.4358</td>            <td>0.4358</td>            <td>0.4130</td>            <td>0.4130</td>            <td>0.3654</td>            <td>0.3654</td>    </tr>    <tr>        <td>9</td>        <td>0.4323</td>            <td>0.4323</td>            <td>0.4945</td>            <td>0.4945</td>            <td>0.4647</td>            <td>0.4647</td>            <td>0.4038</td>            <td>0.4038</td>    </tr>    <tr>        <td>10</td>        <td>0.4750</td>            <td>0.4750</td>            <td>0.5530</td>            <td>0.5530</td>            <td>0.5154</td>            <td>0.5154</td>            <td>0.4399</td>            <td>0.4399</td>    </tr>    <tr>        <td>11</td>        <td>0.5160</td>            <td>0.5160</td>            <td>0.6114</td>            <td>0.6114</td>            <td>0.5651</td>            <td>0.5651</td>            <td>0.4738</td>            <td>0.4738</td>    </tr>    <tr>        <td>12</td>        <td>0.5554</td>            <td>0.5554</td>            <td>0.6695</td>            <td>0.6695</td>            <td>0.6138</td>            <td>0.6138</td>            <td>0.5058</td>            <td>0.5058</td>    </tr></table><p>预测结果与实际值高度吻合，且阻尼乘数仅与矿车类型有关，与铁轨类型无关。对动力矿车，有$0.9408=0.98\times 0.96$。</p><p>以此预期，矿车的隐速度也会存在饱和现象，即在足够长（大于400格）的动力铁轨加速下，可以认为动力铁轨的加速作用和动力铁轨的阻尼减速作用带来的结果相同。此时称这个速度为<strong>饱和隐速度</strong>或<strong>终端速度</strong>，或称为饱和运动量，记为$M_\mathbb{max}$。应当有$M_\mathbb{max}=dM_\mathbb{max}+a$，即</p><p>$$M_\mathbb{max}=\dfrac{a}{1-d}=\dfrac{a}{k}$$</p><p>其中$k$称为<strong>阻尼因子</strong>，有$k=1-d$。</p><p>因而各类型矿车的终端速度有非运矿车$M_\mathbb{max}=1.5$，客运矿车$M_\mathbb{max}=20$，满载货运矿车$M_\mathbb{max}=3$，动力矿车$M_\mathbb{max}=\dfrac{75}{74}$。这是理论上矿车在铁轨上所能获得的最大隐速度，实际上矿车隐速度还受隐速度阈值的限制。</p><h2 id="单格动力铁轨加速实验"><a href="#单格动力铁轨加速实验" class="headerlink" title="单格动力铁轨加速实验"></a>单格动力铁轨加速实验</h2><p>为了研究动力铁轨如何对矿车进行加速，玩家们首先设计了如下的对照实验：只使用1格动力铁轨作为加速，记录不同矿车在阻尼直轨上的最远运行距离（下称最大滑行距离$S_\mathbb{max}$）。这里<strong>阻尼直轨</strong>指的是普通铁轨、探测铁轨或激活铁轨，因为实验证明矿车在这三种铁轨上的减速过程完全相同，而后会证明，动力铁轨虽然有加速效果，但其本身的阻尼效果与阻尼直轨的效果相同。</p><p>在初步实验中，我们首先指出：</p><ul><li>漏斗矿车、箱子矿车的最大滑行距离取决于矿车容器的信号强度，我们称这种矿车为货运矿车。所容物信号强度越大，矿车的最大滑行距离越小，以下记货运矿车的信号强度为$h$。</li><li>空矿车、TNT矿车、命令方块矿车、刷怪笼矿车具有相同的运动规律，以下统称非运矿车，在矿车运动学中的“普通矿车”也可能代指非运矿车。</li><li>矿车被玩家放置时，其位置位于方块的正中心，x和z坐标西北下顶点多0.5，y坐标比其下方块高0.0625，也就是1/16，可以认为该高度是铁轨的厚度。因此，单格动力铁轨对矿车的加速实际上只有0.5格。</li><li>在单格动力铁轨加速中，除动力矿车外，其他矿车均未到达饱和速度。饱和速度指的是游戏为每类矿车设定的最大速度值，动力矿车的饱和速度是0.2m/gt（=4m/s），其他矿车的饱和速度是0.4m/gt（=8m/s）。</li><li>空矿车在承载乘客后，最大滑行距离变长，此时我们称这种矿车为客运矿车。</li></ul><p>在1.13.2版本中，搭建如下的实验装置，左侧的漏斗矿车或箱子矿车分别装载信号强度为0-15的物品，其下为单格动力铁轨。</p><p><del>在1.14的某次未知的更新后，矿车似乎在速度小于0.0003时不会移动，导致矿车相较于旧版本的最大滑行距离少约0.07格，在这方面似乎需要更多的研究。以下实验基于1.13.2，目前认为其在一个很广的版本范围内适用，至少包含1.12。</del></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-c9168b8a.png" alt=""></p><p>经过足够长的时间（&gt;3000gt），可以认为所有矿车静止，从而测出矿车的最大滑行距离。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-4b22127f.png" alt=""></p><p>以下为实验结果，误差不超过0.001格</p><table><thead><tr><th>信号强度</th><th>最大滑行距离</th></tr></thead><tbody><tr><td>0</td><td>64.000</td></tr><tr><td>1</td><td>53.333</td></tr><tr><td>2</td><td>46.714</td></tr><tr><td>3</td><td>40.000</td></tr><tr><td>4</td><td>35.556</td></tr><tr><td>5</td><td>32.000</td></tr><tr><td>6</td><td>29.091</td></tr><tr><td>7</td><td>26.667</td></tr><tr><td>8</td><td>24.615</td></tr><tr><td>9</td><td>22.857</td></tr><tr><td>10</td><td>21.333</td></tr><tr><td>11</td><td>20.000</td></tr><tr><td>12</td><td>18.824</td></tr><tr><td>13</td><td>17.778</td></tr><tr><td>14</td><td>16.842</td></tr><tr><td>15</td><td>16.000</td></tr></tbody></table><p>可以观察到，货运矿车的最大滑行距离与信号强度有着明显的反比例关系，换言之</p><p>$$S_\mathbb{max}=\dfrac{320}{h+5}$$</p><p>按照这个公式推算，若货运矿车的信号强度小于-5，矿车便可在阻尼直轨上永远运行下去。笔者特意回到1.7.2版本，使用负数物品BUG制作出信号强度为-5的漏斗矿车，证实了这一合理外推。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-b916a381.png" alt=""></p><p>以下为其他矿车类型的实验数据：</p><table><thead><tr><th>矿车类型</th><th>最大滑行距离</th></tr></thead><tbody><tr><td>非运矿车</td><td>8.000</td></tr><tr><td>货运矿车（满载）</td><td>16.000</td></tr><tr><td>货运矿车（空载）</td><td>64.000</td></tr><tr><td>客运矿车</td><td>80.000</td></tr></tbody></table><p>仅从数据来看，非运矿车可以看作信号强度为35的货运矿车，客运矿车似乎可以看作信号强度为-1的货运矿车。</p><h2 id="货运矿车单格最大滑行距离的推导"><a href="#货运矿车单格最大滑行距离的推导" class="headerlink" title="货运矿车单格最大滑行距离的推导"></a>货运矿车单格最大滑行距离的推导</h2><p>运用上一小节的方法，我们可以得出货运矿车阻尼乘数与信号强度的关系，即<br>$$d=0.995-0.001h$$<br>或<br>$$k=0.001(h+5)$$<br>相应地有<br>$$M_\mathbb{max}=\dfrac{60}{h+5}$$</p><p>下面我们来推导在单格动力铁轨加速时的最大滑行距离，由前可知，货运矿车无法在单格动力铁轨上达到饱和速度，在第6游戏刻后，其脱离动力铁轨。又对货运矿车，质量因子$m=1$，在全过程中都有$v_t=M_t$。</p><p>对加速过程，改写加速公式为</p><p>$$M_{t+1}-M_\mathbb{max}=d(M_t-M_\mathbb{max})$$</p><p>因而$v_6=M_6=d^5(M_1-M_\mathbb{max})+M_\mathbb{max}$，为全过程的最大速度。</p><p>$$x_6=\sum_{t=1}^{5}v_t=\sum_{t=1}^{5}M_t=(M_1-M_\mathbb{max})\dfrac{1-d^5}{1-d}+5M_\mathbb{max}$$</p><p>驶出动力铁轨后，有$M_{t+1}=dM_t$，故$v_t=d^{t-6}v_6$。</p><p>由以上分析，便可推导出货运矿车的最大滑行距离</p><p>$$\begin{array}{ll}S_\mathbb{max}&amp;=\lim\limits_{n\rightarrow\infty}x_n=\sum_{t=6}^{\infty}v_t+x_6\\ &amp;=\dfrac{(M_1-M_\mathbb{max})d^5+M_\mathbb{max}}{1-d}+(M_1-M_\mathbb{max})\dfrac{1-d^5}{1-d}+5M_\mathbb{max}\\ &amp;=\dfrac{(M_1-M_\mathbb{max})d^5+M_\mathbb{max}+(M_1-M_\mathbb{max})(1-d^5)}{1-d}+5M_\mathbb{max}\\ &amp;=\dfrac{M_1}{k}+5M_\mathbb{max}\\ &amp;=\dfrac{20}{p+5}+5\dfrac{60}{p+5}\\ &amp;=\dfrac{320}{p+5}\end{array}$$</p><p>这就证明了货运矿车在单格动力铁轨加速下的反比例关系。</p><h2 id="多动力铁轨加速实验"><a href="#多动力铁轨加速实验" class="headerlink" title="多动力铁轨加速实验"></a>多动力铁轨加速实验</h2><p>在理想情况下，矿车经足够长动力铁轨加速后到达终端速度。脱离动力铁轨进入阻尼直轨，隐速度全部转化为位移。下面尝试给出不同矿车经若干动力铁轨加速后进入阻尼直轨的最大滑行距离。</p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-3c15168d.png" alt=""></p><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F-874daef3.png" alt=""></p><table align="center">    <tr>        <th rowspan="2">动力铁轨数量 \ 矿车类型</th>        <th colspan="3">最大滑行距离（已减去0.5）</th>    </tr >    <tr >        <th>动力矿车</th>            <th>非运矿车</th>            <th>货运矿车（空载）</th>    </tr>    <tr>        <td>1</td>        <td>5.113</td>            <td>8.000</td>            <td>64.000</td>    </tr><tr><td>2</td><td>6.824</td><td>11.453</td><td>97.128</td> </tr> <tr><td>3</td><td>7.681</td><td>14.107</td><td>113.698</td> </tr> <tr><td>4</td><td>8.197</td><td>15.133</td><td>133.645</td> </tr> <tr><td>5</td><td>8.529</td><td>16.782</td><td>144.204</td> </tr> <tr><td>6</td><td>8.755</td><td>17.361</td><td>158.072</td> </tr> <tr><td>7</td><td>8.911</td><td>18.527</td><td>165.741</td> </tr> <tr><td>8</td><td>9.023</td><td>18.864</td><td>176.335</td> </tr> <tr><td>9</td><td>9.102</td><td>19.750</td><td>182.305</td> </tr> <tr><td>10</td><td>9.160</td><td>19.940</td><td>190.850</td> </tr> <tr><td>11</td><td>9.202</td><td>20.645</td><td>195.703</td> </tr> <tr><td>12</td><td>9.232</td><td>20.738</td><td>202.845</td> </tr> <tr><td>13</td><td>9.254</td><td>21.320</td><td>206.907</td> </tr> <tr><td>14</td><td>9.270</td><td>21.342</td><td>209.220</td> </tr> <tr><td>15</td><td>9.282</td><td>21.836</td><td>209.020</td> </tr> <tr><td>16</td><td>9.290</td><td>21.809</td><td>209.220</td> </tr> <tr><td>17</td><td>9.297</td><td>22.238</td><td>209.020</td> </tr> <tr><td>18</td><td>9.301</td><td>22.174</td><td>209.220</td> </tr> <tr><td>19</td><td>9.305</td><td>22.555</td><td>209.020</td> </tr> <tr><td>20</td><td>9.308</td><td>22.462</td><td>209.220</td> </tr> <tr><td>21</td><td>9.309</td><td>22.806</td><td>209.020</td> </tr> <tr><td>22</td><td>9.311</td><td>22.692</td><td>209.220</td> </tr> <tr><td>23</td><td>9.312</td><td>23.005</td><td>209.020</td> </tr> <tr><td>24</td><td>9.313</td><td>22.873</td><td>209.220</td> </tr> <tr><td>25</td><td>9.313</td><td>23.165</td><td>209.020</td> </tr> <tr><td>26</td><td>9.314</td><td>23.020</td><td>209.220</td> </tr> <tr><td>27</td><td>9.314</td><td>23.295</td><td>209.020</td> </tr> <tr><td>28</td><td>9.314</td><td>23.138</td><td>209.220</td> </tr> <tr><td>29</td><td>9.314</td><td>23.397</td><td>209.020</td> </tr> <tr><td>30</td><td>9.314</td><td>23.232</td><td>209.220</td> </tr> <tr><td>31</td><td>9.315</td><td>23.480</td><td>209.020</td> </tr> <tr><td>32</td><td>9.315</td><td>23.309</td><td>209.220</td> </tr></table><p><img src="https://github.com/Xiaoyuan-xyz/The-Principle-of-Redstone-Circuits/raw/master/Illustration/%E9%93%81%E8%BD%A8%E5%8F%8A%E7%9F%BF%E8%BD%A6%E7%B3%BB%E7%BB%9F/markdown-img-paste-20200127184323542.png" alt=""></p><p>从数据中可以发现一个有趣的事实，虽然从整体上所有矿车都随动力铁轨数增加而增加，但除动力矿车外，其他矿车存在奇偶效应。当加速铁轨的数量足够多时，矿车的最大滑行距离出现微小的“抖动”。</p><p>此外空载货运矿车似乎在14格动力铁轨时，最大滑行距离突然停止增加，尽管奇偶效应仍然存在，但奇数组和偶数组的最大滑行距离严格相等，这暗示我们游戏似乎存在另一种“速度上限”，以下称这种速度上限为动量阈值或隐速度阈值。</p><h2 id="隐速度阈值"><a href="#隐速度阈值" class="headerlink" title="隐速度阈值"></a>隐速度阈值</h2><p>隐速度阈值是游戏对于矿车隐速度所做的强制性隐速度限制，其在矿车运动前将超过2的隐速度强制变为2。但由于矿车实际的隐速度运算和位移运算之后，矿车的在动力直轨上的隐速度阈值将稍大于2，具体而言有<br>$$M_\mathrm{TH}=dM_\mathrm{th}+a$$<br>其中$M_\mathrm{TH}$ 为隐速度阈值，$M_\mathrm{th}=2$。</p><p>虽然隐速度阈值客观存在，并且可以通过测量矿车在足够长（&gt;20格）的动力铁轨加速后的隐速度得到，但由于隐速度的加速和阻尼运算位于隐速度阈值变为2这一强制操作之后，当矿车离开动力铁轨的下一游戏刻，隐速度的值为$M=dM_\mathrm{th}$，而不是$M=dM_\mathrm{TH}$。换句话说，隐速度阈值$M_\mathrm{TH}$ 只有显示意义，而没有计算意义。</p><p>可以看出，阻尼乘数越大，达到隐速度阈值越快，需要的动力铁轨数越少。非运矿车和动力矿车的终端速度小于2，这两种矿车不可能通过动力铁轨加速达到隐速度阈值，故只考虑客运矿车和货运矿车的隐速度阈值。</p><p>对于货运矿车而言，$d=0.995-0.001h$，因此<br>$$M_\mathrm{TH}=dM_\mathrm{th}+a=2(0.995-0.001h)+0.06=2.05-\dfrac{h}{500}$$</p><p>隐速度阈值和终端速度是两个不同的概念，前者是游戏的强制设定，后者则是加速效果和阻尼效果达到平衡的一种体现。达到隐速度阈值通常只需要十几个动力铁轨，并且此后的隐速度将会被严格限制在隐速度阈值；而严格来讲终端速度只能无限接近而不能达到，一般而言需要几十甚至几百格动力铁轨的加速才可以认为当前隐速度与终端速度足够接近。</p><h2 id="多格加速模型"><a href="#多格加速模型" class="headerlink" title="多格加速模型"></a>多格加速模型</h2><p>下面假设动力铁轨的数量未能使矿车达到隐速度阈值，再将整个多格动力铁轨加速阻尼的全过程分为加速过程、加隐速度过程、减隐速度过程和减速过程四个过程。</p><h3 id="加速过程"><a href="#加速过程" class="headerlink" title="加速过程"></a>加速过程</h3><p>在加速过程$0\le t&lt; t_A$中，矿车处于动力铁轨之上，尚未达到饱和速度。也就是$v_t=mM_t=m(d^{t-1}(M_1-M_\mathbb{max})+M_\mathbb{max})&lt; v_\mathbb{max}$。对非运矿车来说$t&lt;9$，客运矿车$t&lt;10$，货运矿车$t&lt;8$，动力矿车$t&lt;5$。具体情况如下表：</p><table><thead><tr><th>–</th><th>非运矿车</th><th>客运矿车</th><th>货运矿车（空载）</th><th>货运矿车（满载）</th><th>动力矿车</th></tr></thead><tbody><tr><td>$d$</td><td>0.96</td><td>0.997</td><td>0.995</td><td>0.98</td><td>0.9408</td></tr><tr><td>$m$</td><td>1</td><td>0.75</td><td>1</td><td>1</td><td>1</td></tr><tr><td>$v_\mathbb{max}$</td><td>0.4</td><td>0.4</td><td>0.4</td><td>0.4</td><td>0.2</td></tr><tr><td>$M_\mathbb{max}$</td><td>1.5</td><td>20</td><td>12</td><td>3</td><td>$\dfrac{75}{74}$</td></tr><tr><td>$t_A$</td><td>9</td><td>10</td><td>8</td><td>8</td><td>5</td></tr><tr><td>$M_{t_A}$</td><td>0.4323</td><td>0.5530</td><td>0.4330</td><td>0.4130</td><td>0.2352</td></tr><tr><td>$x_{t_A}$</td><td>1.6914</td><td>1.7421</td><td>1.3875</td><td>1.3507</td><td>0.4192</td></tr></tbody></table><p>可以预想到，在接下来的两个匀速过程中，非运矿车的位移将会形如1.6914，2.0914，2.4914，2.8914，3.2914，3.6914…其中1.6914，2.0914和2.4914位于奇数格铁轨之上，2.8914和3.2914位于偶数格铁轨之上。非运矿车在奇数格铁轨停留3游戏刻，进行3次加速，在偶数格铁轨上停留2游戏刻，进行2次加速。除了货运矿车，其他矿车都有这样的现象，这就是奇偶效应产生的根源。动力矿车每游戏刻进行5次加速，没有奇偶之分。</p><h3 id="加隐速度过程"><a href="#加隐速度过程" class="headerlink" title="加隐速度过程"></a>加隐速度过程</h3><p>在加隐速度过程$t_A\le t&lt; t_B$中，矿车仍然处于动力铁轨之上，但已到达饱和速度，此时矿车仅增加隐速度。由于铁轨总是整格的，假设在这一过程中矿车经过了$n$格动力铁轨，那么动力矿车会花费 $\Delta t=5n$的时间，而其他矿车因为存在奇偶效应，需要花费的时间为<br>$\Delta t=\left\lbrace\begin{array}{ll}5k+3, &amp; n=2k+1,k\in\mathbb N \\5k,&amp; n=2k,k\in\mathbb N\end{array}\right.$</p><p>因此，如果总计有$n$个动力铁轨 $(n\ge2)$，我们就可以计算不同矿车结束匀速加动量过程后的状态。</p><p>$$M_{t_B}=(M_1-M_\mathbb{max})d^{t_B-1}+M_\mathbb{max}$$<br>$$x_{t_B}=mv_\mathbb{max}(t_B-t_A)+x_{t_A}$$</p><p>其中 $x_{t_B}$ 是一个略大于$n-0.5$的数（因为其恰刚离开第$n$格铁轨），这里统一将其写为$x_{t_B}=n-(1-\sigma)$ 的形式， $\sigma$称为<strong>位移偏置常量</strong>，仅与矿车类型与动力铁轨奇偶性有关。具体有 $\sigma=x-\lfloor x\rfloor$，$x$在这里指离开动力铁轨时的位移，特别地，$\sigma=x_{t_A}-\lfloor x_{t_A}\rfloor$。</p><p>具体而言有</p><p>非运矿车<br>$$t_B=<br>\left\lbrace\begin{array}{ll}5k+7, &amp; n=2k+1,k\in\mathbb N\\5k+4,&amp; n=2k,k\in\mathbb N\end{array}<br>\right.$$<br>$$M_{t_B}=\left\lbrace\begin{array}{ll}(0.02-1.5)0.98^{5k+6}+1.5, &amp; n=2k+1,k\in\mathbb N\\ (0.02-1.5)0.98^{5k+3}+1.5,&amp; n=2k,k\in\mathbb N\end{array}\right.$$<br>$$x_{t_B}=\left\lbrace\begin{array}{ll}n-0.1086, &amp; n=2k+1,k\in\mathbb N\\n-0.3086,&amp; n=2k,k\in\mathbb N\end{array}\right.$$</p><p>客运矿车<br>$$t_B=\left\lbrace\begin{array}{ll}5k+7, &amp; n=2k+1,k\in\mathbb N\\5k+5,&amp; n=2k,k\in\mathbb N\end{array}\right.$$<br>$$M_{t_B}=\left\lbrace\begin{array}{ll}(0.02-20)0.997^{5k+6}+20, &amp; n=2k+1,k\in\mathbb N\\ (0.02-20)0.997^{5k+4}+20,&amp; n=2k,k\in\mathbb N\end{array}\right.$$<br>$$x_{t_B}=\left\lbrace\begin{array}{ll}n-0.0579, &amp; n=2k+1,k\in\mathbb N\\n-0.2579,&amp; n=2k,k\in\mathbb N\end{array}\right.$$</p><p>货运矿车（空载）<br>$$t_B=\left\lbrace\begin{array}{ll}5k+6, &amp; n=2k+1,k\in\mathbb N\\5k+4,&amp; n=2k,k\in\mathbb N\end{array}\right.$$<br>$$M_{t_B}=\left\lbrace\begin{array}{ll}(0.02-12)0.995^{5k+5}+12, &amp; n=2k+1,k\in\mathbb N\\ (0.02-12)0.995^{5k+3}+12,&amp; n=2k,k\in\mathbb N\end{array}\right.$$<br>$$x_{t_B}=\left\lbrace\begin{array}{ll}n-0.4125, &amp; n=2k+1,k\in\mathbb N\\n-0.2125,&amp; n=2k,k\in\mathbb N\end{array}\right.$$</p><p>货运矿车（满载）<br>$$t_B=\left\lbrace\begin{array}{ll}5k+6, &amp; n=2k+1,k\in\mathbb N\\5k+4,&amp; n=2k,k\in\mathbb N\end{array}\right.$$<br>$$M_{t_B}=\left\lbrace\begin{array}{ll}(0.02-3)0.98^{5k+5}+3, &amp; n=2k+1,k\in\mathbb N\\ (0.02-3)0.98^{5k+3}+3,&amp; n=2k,k\in\mathbb N\end{array}\right.$$<br>$$x_{t_B}=\left\lbrace\begin{array}{ll}n-0.0493, &amp; n=2k+1,k\in\mathbb N\\n-0.2493,&amp; n=2k,k\in\mathbb N\end{array}\right.$$</p><p>动力矿车<br>$$t_B=5n+1$$<br>$$M_{t_B}=(0.02-\dfrac{75}{74})0.9408^{5n}+\dfrac{75}{74}$$<br>$$x_{t_B}=n-0.3808$$</p><h3 id="减隐速度过程"><a href="#减隐速度过程" class="headerlink" title="减隐速度过程"></a>减隐速度过程</h3><p>在减隐速度过程$t_B\le t&lt; t_C$中，矿车进入阻尼直轨，此时加速效果消失，但因矿车隐速度较大，其保持匀速，也就有$mM&gt;v_\mathbb{max}$。</p><p>当匀速减动量过程结束的标志是$mM_{t_C}&lt; v_\mathbb{max}$，设该过程经历的时间为 $\Delta t$，有$M_{t_c}=d^{\Delta t}M_{t_b}$，据此可以解出该过程所需的时间。<br>$$\Delta t=\lceil\log_d\dfrac{v_\mathbb{max}}{mM_{t_B}}\rceil$$<br>在这一过程中，矿车保持匀速，故结束时有<br>$$x_{t_C}=x_{t_B}+v_\mathbb{max}\Delta t=x_{t_B}+v_\mathbb{max}\lceil \log_d\dfrac{v_\mathbb{max}}{mM_{t_B}}\rceil$$</p><h3 id="减速过程"><a href="#减速过程" class="headerlink" title="减速过程"></a>减速过程</h3><p>减速过程$t_C\le t&lt; +\infty$是最后一个过程，随着矿车的隐速度不断下降，矿车将以$v_{t_C}$ 为初速做阻尼减速运动，这种运动在之前已经进行过讨论。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>经过如上四个阶段的讨论，我们可以得出结论<br>$$\begin{array}{ll}S_\mathbb{max}&amp;=x_\infty-(n-1)=x_{t_C}+\dfrac{v_{t_C}}{1-d}-n+1\\ &amp;=x_{t_B}+v_\mathbb{max}\lceil \log_d\dfrac{v_\mathbb{max}}{mM_{t_B}}\rceil+\dfrac{v_{t_C}}{1-d}-n+1\\ &amp;=n-(1-\sigma)+v_\mathbb{max}\lceil \log_d\dfrac{v_\mathbb{max}}{mM_{t_B}}\rceil+\dfrac{v_{t_C}}{1-d}-n+1\\ &amp;=v_\mathbb{max}\lceil \log_d\dfrac{v_\mathbb{max}}{mM_{t_B}}\rceil+\dfrac{v_{t_C}}{1-d}+\sigma\end{array}$$</p><p>经过如上的分析，我们便可预测本次实验的结果：</p><table><tr>        <th rowspan="3">动力铁轨数量 \ 矿车类型</th>        <th colspan="6">最大滑行距离</th></tr ><tr>        <th colspan="2">动力矿车</th>        <th colspan="2">非运矿车</th>        <th colspan="2">货运矿车（空载）</th> </tr> <tr><td>测量</td><td>预测</td><td>测量</td><td>预测</td><td>测量</td><td>预测</td> </tr><td>1</td><td>5.114</td><td>5.114</td><td>8.000</td><td></td><td>64.000</td><td></td> </tr> <tr><td>2</td><td>6.824</td><td>6.824</td><td >11.453</td><td>11.453</td><td>97.128</td><td>97.128</td> </tr> <tr><td>3</td><td>7.681</td><td>7.682</td><td>14.107</td><td>14.107</td><td >113.698</td><td>113.698</td> </tr> <tr><td>4</td><td>8.197</td><td>8.197</td><td>15.133</td><td>15.133</td><td >133.645</td><td>133.645</td> </tr> <tr><td>5</td><td>8.529</td><td>8.529</td><td>16.782</td><td>16.782</td><td>144.204</td><td>144.204</td> </tr> <tr><td>6</td><td>8.755</td><td>8.755</td><td>17.361</td><td>17.361</td><td>158.072</td><td>158.072</td> </tr> <tr><td>7</td><td>8.911</td><td>8.911</td><td >18.527</td><td>18.527</td><td>165.741</td><td>165.741</td> </tr> <tr><td>8</td><td>9.023</td><td>9.023</td><td >18.864</td><td>18.864</td><td>176.335</td><td>176.335</td> </tr> <tr><td>9</td><td>9.102</td><td>9.102</td><td>19.750</td><td>19.750</td><td >182.305</td><td>182.305</td> </tr> <tr><td>10</td><td>9.160</td><td>9.160</td><td >19.940</td><td>19.940</td><td>190.850</td><td>190.850</td> </tr> <tr><td>11</td><td>9.202</td><td>9.202</td><td>20.645</td><td>20.645</td><td>195.703</td><td>195.703</td> </tr> <tr><td>12</td><td>9.232</td><td>9.232</td><td>20.738</td><td>20.738</td><td>202.845</td><td>202.845</td> </tr> <tr><td>13</td><td>9.254</td><td>9.254</td><td >21.320</td><td>21.320</td><td >206.907</td><td>206.906</td> </tr> <tr><td>14</td><td>9.270</td><td>9.270</td><td>21.342</td><td>21.342</td><td >209.220</td><td>213.028</td> </tr> <tr><td>15</td><td>9.282</td><td>9.282</td><td >21.836</td><td>21.836</td><td>209.020</td><td>216.500</td> </tr> <tr><td>16</td><td>9.290</td><td >9.290</td><td>21.809</td><td>21.809</td><td >209.220</td><td>221.846</td> </tr> <tr><td>17</td><td>9.297</td><td>9.297</td><td>22.238</td><td>22.238</td><td>209.020</td><td>224.861</td> </tr> <tr><td>18</td><td>9.301</td><td>9.301</td><td >22.174</td><td>22.174</td><td >209.220</td><td>229.599</td> </tr> <tr><td>19</td><td>9.305</td><td>9.305</td><td>22.555</td><td>22.555</td><td>209.020</td><td >232.251</td> </tr> <tr><td>20</td><td>9.308</td><td>9.308</td><td>22.462</td><td>22.462</td><td >209.220</td><td>236.496</td> </tr> <tr><td>21</td><td>9.309</td><td>9.309</td><td>22.806</td><td>22.806</td><td>209.020</td><td>238.852</td> </tr> <tr><td>22</td><td>9.311</td><td>9.311</td><td >22.692</td><td>22.692</td><td >209.220</td><td>242.694</td> </tr> <tr><td>23</td><td>9.312</td><td>9.312</td><td>23.005</td><td>23.005</td><td>209.020</td><td>244.804</td> </tr> <tr><td>24</td><td>9.313</td><td>9.313</td><td>22.873</td><td>22.873</td><td >209.220</td><td>248.308</td> </tr> <tr><td>25</td><td >9.313</td><td>9.313</td><td>23.165</td><td>23.165</td><td>209.020</td><td>250.210</td> </tr> <tr><td>26</td><td>9.314</td><td>9.314</td><td>23.020</td><td>23.020</td><td>209.220</td><td>253.426</td> </tr> <tr><td>27</td><td>9.314</td><td>9.314</td><td >23.295</td><td>23.295</td><td>209.020</td><td>255.151</td> </tr> <tr><td>28</td><td>9.314</td><td>9.314</td><td>23.138</td><td>23.138</td><td>209.220</td><td>258.120</td> </tr> <tr><td>29</td><td>9.314</td><td>9.314</td><td>23.397</td><td>23.397</td><td>209.020</td><td>259.692</td> </tr> <tr><td>30</td><td >9.314</td><td>9.314</td><td >23.232</td><td>23.232</td><td >209.220</td><td>262.447</td> </tr> <tr><td>31</td><td>9.315</td><td>9.315</td><td>23.480</td><td>23.480</td><td>209.020</td><td>263.885</td> </tr> <tr><td>32</td><td>9.315</td><td>9.315</td><td>23.309</td><td>23.309</td><td >209.220</td><td>266.452</td> </tr></table><p>可以看到，非运矿车和动力矿车的预测结果完美贴合实际，货运矿车却在14个动力铁轨时开始出现较大偏差，原因是模型中并没有考虑隐速度阈值，也就是隐速度不会大于2，然而依据上述模型，空载货运矿车在动力铁轨上加速，在$t=38$时就有$M=2.048,x=13.387$，故再进行加速会导致模型的失效。</p><h2 id="货运矿车的阈值模型"><a href="#货运矿车的阈值模型" class="headerlink" title="货运矿车的阈值模型"></a>货运矿车的阈值模型</h2><p>货运矿车和客运矿车在达到隐速度阈值后的最大滑行距离称为阈值滑行距离，记为$S_\mathrm{TH}$，其仅与矿车类型与动力铁轨奇偶性有关，计算方式在上一节中已经讨论过了，这里只写下结论</p><p>$$S_\mathrm{TH}=v_\mathbb{max}\lceil \log_d\dfrac{v_\mathbb{max}}{mM_\mathrm{th}}\rceil+\dfrac{v_{t_C}}{1-d}+\sigma$$</p><p>由此可以计算出货运矿车在不同信号强度下的阈值滑行距离（以下仅给出奇数格，偶数格只需要再加0.2即可），其中 $t_\mathrm{TH}$ 表示达到隐速度阈值所需要的时间，$n_\mathrm{TH}$ 表示需要的动力铁轨数。</p><table><thead><tr><th>$h$</th><th>$t_\mathrm{TH}$</th><th>$n_\mathrm{TH}$</th><th>$\sigma$</th><th>$S_\mathrm{TH}$</th></tr></thead><tbody><tr><td>0</td><td>39</td><td>14</td><td>0.5875</td><td>209.0203</td></tr><tr><td>1</td><td>39</td><td>14</td><td>0.5850</td><td>174.2250</td></tr><tr><td>2</td><td>40</td><td>15</td><td>0.5825</td><td>149.3708</td></tr><tr><td>3</td><td>41</td><td>15</td><td>0.5800</td><td>130.7292</td></tr><tr><td>4</td><td>42</td><td>15</td><td>0.5775</td><td>116.2302</td></tr><tr><td>5</td><td>43</td><td>16</td><td>0.5751</td><td>104.6299</td></tr><tr><td>6</td><td>43</td><td>16</td><td>0.5726</td><td>95.1382</td></tr><tr><td>7</td><td>44</td><td>16</td><td>0.5702</td><td>87.2284</td></tr><tr><td>8</td><td>46</td><td>17</td><td>0.5677</td><td>80.5355</td></tr><tr><td>9</td><td>47</td><td>17</td><td>0.5653</td><td>74.7976</td></tr><tr><td>10</td><td>48</td><td>18</td><td>0.5628</td><td>69.8244</td></tr><tr><td>11</td><td>49</td><td>18</td><td>0.5604</td><td>65.4730</td></tr><tr><td>12</td><td>51</td><td>19</td><td>0.5580</td><td>61.6333</td></tr><tr><td>13</td><td>53</td><td>20</td><td>0.5555</td><td>58.2193</td></tr><tr><td>14</td><td>54</td><td>20</td><td>0.5531</td><td>55.1654</td></tr><tr><td>15</td><td>57</td><td>21</td><td>0.5507</td><td>52.4156</td></tr></tbody></table><h2 id="直轨加速阻尼模型总结"><a href="#直轨加速阻尼模型总结" class="headerlink" title="直轨加速阻尼模型总结"></a>直轨加速阻尼模型总结</h2><p>计算最大滑行距离所应使用的模型就如下所示了。</p><table><tr><th>动力铁轨数\矿车类型</th><th>非运矿车</th><th>货运矿车</th><th>客运矿车</th><th>动力矿车</th></tr><tr><td align="center">1</td><td colspan=3 align="center">单格模型</td><td align="center">多格模型</td></tr><tr><td align="center">多格（未达到阈值）</td><td colspan=4 align="center">多格模型</td></tr><tr><td align="center">多格（达到阈值）</td><td align="center">不存在</td><td align="center" colspan=2>阈值模型</td><td align="center">不存在</td></tr></table><h2 id="制动铁轨"><a href="#制动铁轨" class="headerlink" title="制动铁轨"></a>制动铁轨</h2><p>在矿车动力学中称未激活的动力铁轨为制动铁轨，制动铁轨不仅拥有普通直轨的阻尼性质，其还具有强烈的制动性质，在制动铁轨上的矿车很快会停下。制动铁轨生效的方式与隐速度阈值类似，其在游戏中的计算位置位于隐速度阈值和移动位置之间，故在制动铁轨上$v=\mathrm{max}(dmM,v_\mathrm{max})$。</p><p>下面给出普通矿车在制动铁轨上运行的一个例子。</p><h2 id="矿车回弹"><a href="#矿车回弹" class="headerlink" title="矿车回弹"></a>矿车回弹</h2><p>矿车回弹检测可以用于检测一个方块是否是实体方块，这是由于在激活的动力脱轨上的矿车只能在紧贴实体方块时发车。而矿车回弹在游戏中的处理也是简单的，矿车会在该方块前0.49格停下，隐速度归零。而如果矿车此时可以回弹，游戏便又会赋予其0.02的初始隐速度。</p><p>下面给出普通矿车回弹的一个例子。</p><table><thead><tr><th>游戏刻</th><th>位移</th><th>速度</th><th>隐速度</th></tr></thead><tbody><tr><td>1</td><td>0.5</td><td>0.02</td><td>0.02</td></tr><tr><td>2</td><td>0.52</td><td>0.0792</td><td>0.0792</td></tr><tr><td>3</td><td>0.5992</td><td>0.136032</td><td>0.136032</td></tr><tr><td>4</td><td>0.735232</td><td>0.190591</td><td>0.190591</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td></tr><tr><td>21</td><td>6.991414</td><td>0.4</td><td>0.845836</td></tr><tr><td>22</td><td>7.391414</td><td>0.118586</td><td>0.872003</td></tr><tr><td>23</td><td>7.51</td><td>-0.02</td><td>-0.02</td></tr><tr><td>24</td><td>7.49</td><td>-0.0792</td><td>-0.0792</td></tr><tr><td>25</td><td>7.4108</td><td>-0.136032</td><td>-0.136032</td></tr><tr><td>26</td><td>7.274768</td><td>-0.190591</td><td>-0.190591</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 红石原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2020/02/24/HTML/"/>
      <url>/2020/02/24/HTML/</url>
      
        <content type="html"><![CDATA[<!-- TOC --><ul><li><a href="#html">HTML</a><ul><li><a href="#html文档">HTML文档</a><ul><li><a href="#文档结构">文档结构</a></li><li><a href="#文档声明">文档声明</a></li><li><a href="#元数据">元数据</a></li></ul></li><li><a href="#标签">标签</a><ul><li><a href="#段落标题引用">段落、标题、引用</a></li><li><a href="#网页布局">网页布局</a></li><li><a href="#属性">属性</a></li><li><a href="#预格式标签">预格式标签</a></li><li><a href="#字体标签">字体标签</a></li><li><a href="#修饰标签">修饰标签</a></li><li><a href="#样式">样式</a></li></ul></li><li><a href="#实体">实体</a></li><li><a href="#图片">图片</a></li><li><a href="#音视频">音视频</a></li><li><a href="#列表">列表</a><ul><li><a href="#无序列表">无序列表</a></li><li><a href="#有序列表">有序列表</a></li><li><a href="#自定义列表">自定义列表</a></li></ul></li><li><a href="#超链接">超链接</a></li><li><a href="#表格">表格</a></li><li><a href="#表单">表单</a><ul><li><a href="#输入框">输入框</a></li><li><a href="#单选框">单选框</a></li><li><a href="#多选框">多选框</a></li><li><a href="#按钮">按钮</a></li><li><a href="#隐藏控件">隐藏控件</a></li><li><a href="#颜色选择框">颜色选择框</a></li><li><a href="#下拉菜单">下拉菜单</a></li><li><a href="#文本域">文本域</a></li><li><a href="#文件上传控件">文件上传控件</a></li><li><a href="#表单属性">表单属性</a></li></ul></li><li><a href="#框架">框架</a></li></ul></li></ul><!-- /TOC --><p>网页统分为三大部分：结构（HTML）、表现（CSS）和行为（JavaScript）。</p><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>html指超文本标记语言，可以更加丰富地呈现文字信息。html是标记语言而不是编程语言，标记也就是标签是html中的一个基本语法。</p><p>标签包括开始标记和结束标记，使用时互相嵌套，成对出现，如<code>&lt;html&gt;</code>和<code>&lt;/html&gt;</code>。有些标记单个出现，如<code>&lt;hr&gt;</code>，习惯上写为<code>&lt;hr /&gt;</code>。</p><p>html的语法不区分大小写，也就是标签和属性不区分大小写，命名规范是小写。</p><h2 id="HTML文档"><a href="#HTML文档" class="headerlink" title="HTML文档"></a>HTML文档</h2><h3 id="文档结构"><a href="#文档结构" class="headerlink" title="文档结构"></a>文档结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 根标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文档头 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>this is title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文档体 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Hello world!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文档声明"><a href="#文档声明" class="headerlink" title="文档声明"></a>文档声明</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 声明文档为html5 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h3><p>在<code>&lt;head&gt;</code>中设置元数据，使用<code>&lt;meta&gt;</code>标签。</p><p><code>charset</code>指定网页的字符集，<code>http-equiv</code>指定网站的http协议。</p><p><code>name</code>指定数据名称，<code>content</code>指定数据内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在3秒后，网页重定向跳转 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"3;url=refresh.html"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"关键字1,关键字2"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"用于指定网站的描述，显示在搜索引擎的搜索结果中。"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题作为搜索引擎搜索结果的超链接<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><h3 id="段落、标题、引用"><a href="#段落、标题、引用" class="headerlink" title="段落、标题、引用"></a>段落、标题、引用</h3><p>html中的文本没有任何格式，所有格式都需要使用标签来赋予。</p><p>换行符<code>&lt;br /&gt;</code>，横线<code>&lt;hr /&gt;</code>。</p><p>文档中的标题使用<code>&lt;h1&gt;</code>，可取至<code>&lt;h6&gt;</code>，分别是6级标题，标题独占一行。</p><p><code>&lt;hgroup&gt;</code>为标题组，将相关标题放入一个组中。</p><p>段落标签<code>&lt;p&gt;</code>，段落内的文本自成一段，段落间存在段间距。段落标签里不要放块元素。</p><p><code>&lt;q&gt;</code>和<code>&lt;blockquote&gt;</code>表示引用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>我没说过。 ——鲁迅<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote>我没说过。 ——鲁迅</blockquote><h3 id="网页布局"><a href="#网页布局" class="headerlink" title="网页布局"></a>网页布局</h3><p><code>&lt;header&gt;</code>表示网站的头部，<code>&lt;main&gt;</code>表示网站的主体，<code>&lt;footer&gt;</code>表示网站的底部，<code>&lt;nav&gt;</code>表示导航，<code>&lt;aside&gt;</code>表示侧边栏，<code>&lt;article&gt;</code>表示文章，<code>&lt;section&gt;</code>表示一个普通的区块。</p><p><code>&lt;div&gt;</code>是最常用的布局元素，用来表示一个区块。<code>&lt;span&gt;</code>用于表示行内元素。</p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>标签具有属性，如<code>&lt;p align=&quot;right&quot;&gt;居右对齐段落&lt;/p&gt;</code>，属性间使用一个空格间隔。</p><p><code>align</code>为居中属性，包括<code>left</code>，<code>right</code>，<code>center</code>，<code>justify</code>。</p><h3 id="预格式标签"><a href="#预格式标签" class="headerlink" title="预格式标签"></a>预格式标签</h3><p>预标签为<code>&lt;pre&gt;</code>，预标签内的格式将会不变地显示在html中。</p><h3 id="字体标签"><a href="#字体标签" class="headerlink" title="字体标签"></a>字体标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"#0000ff"</span>&gt;</span>#0000ff<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 字号选择范围为1-7 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">"7"</span>&gt;</span>7号字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"SetoFont"</span>&gt;</span>濑户字体<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color="red">红色</font><br><font color="#0000ff">#0000ff</font></p><!-- 字号选择范围为1-7 --><p><font size="7">7号字</font><br><font face="SetoFont">濑户字体</font></p><h3 id="修饰标签"><a href="#修饰标签" class="headerlink" title="修饰标签"></a>修饰标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span><span class="tag">&lt;<span class="name">strike</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">strike</span>&gt;</span><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>下标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span><span class="tag">&lt;<span class="name">sup</span>&gt;</span>上标<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br></pre></td></tr></table></figure><p><b>加粗</b><strong>加粗</strong><br><i>斜体</i><em>斜体</em><br><s>删除线</s><strike>删除线</strike><del>删除线</del><br><sub>下标</sub><sup>上标</sup></p><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><p><code>&lt;font&gt;</code>，<code>color</code>，<code>bgcolor</code>，<code>align</code>等是已被废弃的标签好属性，现在使用<code>style</code>样式作为替代。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">text-align:center;</span></span></span><br><span class="line"><span class="tag"><span class="string">background-color:pink;</span></span></span><br><span class="line"><span class="tag"><span class="string">font-family:锐字真言体免费商用;</span></span></span><br><span class="line"><span class="tag"><span class="string">color:blue;</span></span></span><br><span class="line"><span class="tag"><span class="string">font-size:30px;</span></span></span><br><span class="line"><span class="tag"><span class="string">"</span>&gt;</span></span><br><span class="line">锐字真言蓝色30像素</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p style="text-align:center;background-color:pink;font-family:锐字真言体免费商用;color:blue;font-size:30px;">锐字真言蓝色30像素</p><p>关于颜色，可以使用颜色名或者rgb，如<code>rgb(0,0,0)</code>、<code>rgba(0,255,0,.5)</code>，<code>#bbffaa</code>可以简写为<code>#bfa</code>。除了rgb也可以使用hsl值。</p><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>浏览器会把多个空格显示为一个空格。</p><table><thead><tr><th>显示结果</th><th>描述</th><th>实体名</th><th>实体编号</th></tr></thead><tbody><tr><td></td><td>空格</td><td><code>&amp;nbsp;</code></td><td><code>&amp;#160;</code></td></tr><tr><td>&lt;</td><td>小于号</td><td><code>&amp;lt;</code></td><td><code>&amp;#60;</code></td></tr><tr><td>&gt;</td><td>大于号</td><td><code>&amp;gt;</code></td><td><code>&amp;#62;</code></td></tr><tr><td>&amp;</td><td>和号</td><td><code>&amp;amp;</code></td><td><code>&amp;#38;</code></td></tr><tr><td>“</td><td>引号</td><td><code>&amp;quot;</code></td><td><code>&amp;#34;</code></td></tr><tr><td>‘</td><td>撇号</td><td><code>&amp;apos;</code></td><td><code>&amp;#39;</code></td></tr></tbody></table><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>图片使用<code>&lt;img/&gt;</code>。<img src="pic01.png" align="middle" width="100px" /></p><p><code>src</code>属性确定图片的路径，可以使用相对路径或绝对路径，<code>./</code>表示当前路径，<code>../</code>表示上一级目录。</p><p><code>align</code>属性控制图片和文字的对齐方式，包括<code>bottom</code>、<code>top</code>、<code>middle</code>。</p><p><code>width</code>和<code>height</code>控制宽度和高度，默认为保持宽高比。图片可以使用像素<code>px</code>或百分比，百分比指的是相对于父容器的百分比。<code>em</code>是以字体为单位，1 em = 1 font-size；<code>rem</code>是相对于根元素，也就是<code>&lt;html&gt;</code>的字体大小。</p><p><code>alt</code>设置图片无法读取时的提示。</p><p><code>&lt;img src=&quot;pic01.png&quot; width=&quot;100px&quot; /&gt;</code></p><img src="https://i.loli.net/2020/02/25/lQ3LWua8PxUtXjS.png" width="100px" /><p><code>&lt;img src=&quot;pic01.png&quot; width=&quot;20%&quot; /&gt;</code></p><img src="https://i.loli.net/2020/02/25/lQ3LWua8PxUtXjS.png" width="20%" /><p><code>&lt;img alt=&quot;提示&quot; /&gt;</code></p><img alt="提示" /><p>可以用base64编码图片。</p><h2 id="音视频"><a href="#音视频" class="headerlink" title="音视频"></a>音视频</h2><p>音视频和图片类似，分别使用<code>&lt;audio&gt;</code>和<code>&lt;video&gt;</code>。默认不允许用户控制，需要controls属性；自动播放使用autoplay，不过大部分网站不自动播放，loop设置循环播放。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"Luv letter.mp3"</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p><audio src="Luv letter.mp3" controls></audio></p><p>有些浏览器不支持<code>&lt;audio&gt;</code>，可以这样写，增强兼容性。其中<code>&lt;embed&gt;</code>是现在不常用的播放标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对不起，您的浏览器不支持播放音频，请升级浏览器。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"Luv letter.mp3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">"Luv%20letter.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mp3"</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">height</span>=<span class="string">"100px"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>音频视频由于较大，一般不放在服务器中，通常使用音视频托管或音视频网站。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"//player.bilibili.com/player.html?aid=38173887&amp;cid=67101682&amp;page=1"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">framespacing</span>=<span class="string">"0"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Coffee</li><li>Milk</li></ul><p><code>type</code>属性用于控制列表的标头，包括<code>disc</code>、<code>circle</code>和<code>square</code>。</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Coffee</li><li>Milk</li></ol><p><code>type</code>属性用于控制列表的标头，默认为数字，小写字母”a”，大写字母”A”，大写罗马数字”I”，小写罗马数字”i”。</p><p>可以用<code>start</code>属性控制初始值，如<code>start=&quot;10&quot;</code>，10表示从第10个标号开始。</p><h3 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>Black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>White cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><dl><dt>Coffee</dt><dd>Black hot drink</dd><dt>Milk</dt><dd>White cold drink</dd></dl><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>进入百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="http://www.baidu.com" target="_blank" rel="noopener">进入百度</a></p><p>超链接可以为内部链接或外部链接。</p><p>图片、文字等其他结构都可以加入超链接。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"baidu.png"</span> <span class="attr">width</span>=<span class="string">"30%"</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="http://www.baidu.com" target="_blank" rel="noopener"><img src="https://i.loli.net/2020/02/25/ZnQsjOVySRbhFIu.png" width="30%" /></a></p><p><code>target</code>属性包含<code>_blank</code>和<code>_self</code>，前者为新建标签页，后者在当前页面跳转。也可以使用框架名，用于框架的跳转。</p><p><code>title</code>属性确定鼠标悬浮信息。</p><p><code>name</code>属性用于定义名字，可以用于跳转时的锚点，声明锚点可以使用空白超链接，路径使用”#”，空白超链接可以用于回到顶部。锚点内可以不写任何东西。锚点可以跟在路径之后，作为路径的一部分。</p><p>也可以使用<code>id</code>属性，id是元素的唯一标识，同一页面中不能出现重复的id。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">name</span>=<span class="string">"anchor"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>锚点</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#anchor"</span>&gt;</span>跳转到锚点<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>没有任何用处的超链接<code>&lt;a ref=&quot;javascript:;&quot;&gt;</code>，可以用作占位。</p><p>超链接可以用于下载文件，浏览器会自动进行识别。</p><p>超链接可以用于指向邮件地址，此时在路径前加<code>mailto:</code>，</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:Team_XYZ@Outlook.com"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="comment">&lt;!-- table row --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="comment">&lt;!-- table head --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="comment">&lt;!-- table data--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table><caption>标题</caption><tr><!-- table row -->  <th>表头</th><!-- table head -->  <td>单元格</td><!-- table data--></tr></table><p><code>&lt;table&gt;</code>的属性有：<code>border</code>属性设置边框的宽度，宽度为<code>width</code>，高度为<code>height</code>，居中为<code>align</code>，背景颜色为<code>bgcolor</code>，<code>cellspacing</code>为单元格之间的间距，<code>cellpadding</code>为单元格内容与单元格边框的间距。</p><p><code>&lt;tr&gt;</code>可以设置宽度和高度，背景颜色<code>bgcolor</code>，内容的对齐方式包括<code>align</code>和<code>valign</code>，分别表示水平对齐和垂直对齐。</p><p>当有两个冲突的属性时，如果两个属性的作用范围相同，则取父标签的属性，反之则取子标签的属性。</p><p>合并在<code>&lt;td&gt;</code>中进行，列合并使用<code>colspan</code>属性，行合并使用<code>rowspan</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"2px"</span> <span class="attr">bgcolor</span>=<span class="string">"#f0f0f0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>动力铁轨数\矿车类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>非运矿车<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>货运矿车<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>客运矿车<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>动力矿车<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">3</span>&gt;</span>单格模型<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>多格模型<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>多格（未达到阈值）<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">6</span>&gt;</span>多格模型<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>多格（达到阈值）<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>不存在<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">2</span>&gt;</span>阈值模型<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>不存在<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table border="2px" bgcolor="#f0f0f0"><tr>  <th>动力铁轨数\矿车类型</th><th>非运矿车</th><th>货运矿车</th><th>客运矿车</th><th>动力矿车</th></tr><tr align="center">  <td>1</td><td colspan=3>单格模型</td><td>多格模型</td></tr><tr align="center">  <td>多格（未达到阈值）</td><td colspan=4>多格模型</td></tr><tr align="center">  <td>多格（达到阈值）</td><td>不存在</td><td colspan=2>阈值模型</t><td>不存在</td></tr></table><p>对长表格，可以给表格分部分，使用<code>&lt;thead&gt;</code>，<code>&lt;tbody&gt;</code>和<code>&lt;tfoot&gt;</code>。如果表格中没有<code>&lt;tbody&gt;</code>，浏览器会自动创建<code>&lt;tbody&gt;</code>，所以<code>&lt;tr&gt;</code>并不是<code>&lt;table&gt;</code>的子元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>事项<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>支付方式<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>早餐<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>微信<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>6.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>午餐<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一卡通<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>12.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>饮料<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>微信<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>4.50<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>晚餐<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一卡通<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>6.80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>雪糕<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>微信<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>10.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>图书<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>微信<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>51.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>总计<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>90.30<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>  <table>    <thead>      <tr>        <td>事项</td><td>支付方式</td><td>价格</td>      </tr>    </thead>    <tbody>      <tr>        <td>早餐</td><td>微信</td><td>6.00</td>      </tr>      <tr>        <td>午餐</td><td>一卡通</td><td>12.00</td>      </tr>      <tr>        <td>饮料</td><td>微信</td><td>4.50</td>      </tr>      <tr>        <td>晚餐</td><td>一卡通</td><td>6.80</td>      </tr>      <tr>        <td>雪糕</td><td>微信</td><td>10.00</td>      </tr>      <tr>        <td>图书</td><td>微信</td><td>51.00</td>      </tr>    </tbody>    <tfoot>      <tr>        <td></td><td>总计</td><td>90.30</td>      </tr>    </tfoot>  </table><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>表单使用<code>&lt;form&gt;</code>，<code>action</code>属性用于指定提交的地址。</p><h3 id="输入框"><a href="#输入框" class="headerlink" title="输入框"></a>输入框</h3><p>输入框控件<code>&lt;input /&gt;</code>，输入类型包括<code>text</code>、<code>password</code>等，<code>value</code>设置默认值，<code>maxlength</code>为最大字符长度，<code>placeholder</code>为提示信息，默认值会覆盖提示信息。必须指定<code>name</code>属性，否则无法提交。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"邮箱/手机号/用户名"</span> /&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form><input type="text" name="username" placeholder="邮箱/手机号/用户名" /></form><ul><li><p><code>autocomplete=&quot;off&quot;</code>关闭自动补全</p></li><li><p><code>readonly</code>只读</p><input type="text" readonly value="readonly" /></li><li><p><code>disabled</code>禁用，不会提交</p><input type="text" disabled value="disabled" /></li><li><p><code>autofocus</code>表单项自动获取焦点 </p></li></ul><h3 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h3><p>单选框使用<code>&lt;input type=&quot;radio&quot; /&gt;</code>，需要设置相同的名字来保证单选，<code>value</code>确定单选的值，<code>checked</code>设置默认单选的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"male"</span> /&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"female"</span> /&gt;</span>女</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"himitsu"</span> <span class="attr">checked</span>/&gt;</span>保密</span><br></pre></td></tr></table></figure><p><input type="radio" name="sex" value="male" />男<br><input type="radio" name="sex" value="female" />女<br><input type="radio" name="sex" value="himitsu" checked/>保密</p><h3 id="多选框"><a href="#多选框" class="headerlink" title="多选框"></a>多选框</h3><p>多选框使用<code>&lt;input type=&quot;checkbox&quot; /&gt;</code>。</p><p>爱好：<br><input type="checkbox" name="hobby" value="sing" />唱<br><input type="checkbox" name="hobby" value="jump" />跳<br><input type="checkbox" name="hobby" value="rap" />rap<br><input type="checkbox" name="hobby" value="ball" />篮球</p><h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><ul><li>提交按钮<code>&lt;input type=&quot;submit&quot; /&gt;</code></li><li>重置按钮<code>&lt;input type=&quot;reset&quot; /&gt;</code></li></ul><p>提交按钮和重置按钮的作用范围是本表单。</p><ul><li>普通按钮为<code>&lt;input type=&quot;button&quot; /&gt;</code></li><li>图片按钮为<code>&lt;input type=&quot;image&quot; /&gt;</code></li></ul><p>value可以修改显示名。</p><input type="submit" /><input type="reset" /><input type="button" value="普通按钮" /><input type="image" src="https://i.loli.net/2020/02/25/ZnQsjOVySRbhFIu.png" width="20%" value="图片按钮" /><p>可以使用<code>&lt;button&gt;</code>实现类似效果，如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><button type="submit">注册</button></p><h3 id="隐藏控件"><a href="#隐藏控件" class="headerlink" title="隐藏控件"></a>隐藏控件</h3><p>隐藏控件使用<code>&lt;input type=&quot;hidden&quot; /&gt;</code>，不向客户显示，可以向服务器传输数据。</p><h3 id="颜色选择框"><a href="#颜色选择框" class="headerlink" title="颜色选择框"></a>颜色选择框</h3><p><code>&lt;input type=&quot;color&quot; /&gt;</code></p><input type="color" name="color" /><p>兼容性不是很好。</p><h3 id="下拉菜单"><a href="#下拉菜单" class="headerlink" title="下拉菜单"></a>下拉菜单</h3><p>下拉菜单使用<code>&lt;select&gt;</code>，每一个选择项使用<code>&lt;option&gt;</code>，默认选择项使用属性<code>selected</code>。<code>size</code>属性确定单页选项的个数，<code>multiple</code>可以多选。</p><select name="week">    <option value="1">周一</option>    <option value="2">周二</option>    <option value="3">周三</option>    <option value="4">周四</option>    <option value="5">周五</option>    <option value="6">周六</option>    <option value="7">周日</option></select><h3 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h3><p>文本域使用<code>&lt;textarea&gt;</code>。<code>rows</code>设置行数，<code>cols</code>设置列数。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span> <span class="attr">placeholder</span>=<span class="string">"请输入文本。"</span> <span class="attr">name</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p><textarea rows="5" cols="40" placeholder="请输入文本。" name="message"></textarea></p><h3 id="文件上传控件"><a href="#文件上传控件" class="headerlink" title="文件上传控件"></a>文件上传控件</h3><p>文件上传使用<code>&lt;input type=&quot;file&quot; /&gt;</code></p><input type="file" name="file" /><h3 id="表单属性"><a href="#表单属性" class="headerlink" title="表单属性"></a>表单属性</h3><p>表单属性在<code>&lt;form&gt;</code>标签中设置。</p><p><code>action</code>表示提交路径，默认提交给当前页面，可以提交给Jsp或Servlet处理。</p><p><code>method</code>为提交方式，包括<code>get</code>和<code>post</code>，前者以链接方式提交，表现为在链接后问号追加表单信息；后者封装成包使用http请求发送表单，适合大量数据或敏感数据加密。</p><p><code>enctype</code>为对表单信息的编码。默认为<code>application/x-www-form-urlencoded</code>，在发送前编码所有字符；<code>multipart/form-data</code>不对字符编码，在文件上传时需要使用这种编码；<code>text/plain</code>仅把空格变为加号，不对特殊字符编码。</p><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>框架允许网页在一个页面上显示多个网页。主要用于后台管理系统。框架使用<code>&lt;frameset&gt;</code>，其与<code>&lt;body&gt;</code>同级。</p><p><code>&lt;iframe&gt;</code>是内联框架，相当于网页中嵌套网页，和图片类似，现在不常用了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">"10%,*"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"top.html"</span> <span class="attr">name</span>=<span class="string">"top"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"10%,*"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"left.html"</span> <span class="attr">name</span>=<span class="string">"left"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"right.html"</span> <span class="attr">name</span>=<span class="string">"right"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
